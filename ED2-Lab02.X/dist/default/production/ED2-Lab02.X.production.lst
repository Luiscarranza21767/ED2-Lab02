

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jan 30 11:58:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     008F                     	;# 
   121     0090                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0095                     	;# 
   129     0096                     	;# 
   130     0097                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009A                     	;# 
   134     009B                     	;# 
   135     009C                     	;# 
   136     009D                     	;# 
   137     009E                     	;# 
   138     009F                     	;# 
   139     0105                     	;# 
   140     0107                     	;# 
   141     0108                     	;# 
   142     0109                     	;# 
   143     010C                     	;# 
   144     010C                     	;# 
   145     010D                     	;# 
   146     010E                     	;# 
   147     010F                     	;# 
   148     0185                     	;# 
   149     0187                     	;# 
   150     0188                     	;# 
   151     0189                     	;# 
   152     018C                     	;# 
   153     018D                     	;# 
   154     0000                     	;# 
   155     0001                     	;# 
   156     0002                     	;# 
   157     0003                     	;# 
   158     0004                     	;# 
   159     0005                     	;# 
   160     0006                     	;# 
   161     0007                     	;# 
   162     0008                     	;# 
   163     0009                     	;# 
   164     000A                     	;# 
   165     000B                     	;# 
   166     000C                     	;# 
   167     000D                     	;# 
   168     000E                     	;# 
   169     000E                     	;# 
   170     000F                     	;# 
   171     0010                     	;# 
   172     0011                     	;# 
   173     0012                     	;# 
   174     0013                     	;# 
   175     0014                     	;# 
   176     0015                     	;# 
   177     0015                     	;# 
   178     0016                     	;# 
   179     0017                     	;# 
   180     0018                     	;# 
   181     0019                     	;# 
   182     001A                     	;# 
   183     001B                     	;# 
   184     001B                     	;# 
   185     001C                     	;# 
   186     001D                     	;# 
   187     001E                     	;# 
   188     001F                     	;# 
   189     0081                     	;# 
   190     0085                     	;# 
   191     0086                     	;# 
   192     0087                     	;# 
   193     0088                     	;# 
   194     0089                     	;# 
   195     008C                     	;# 
   196     008D                     	;# 
   197     008E                     	;# 
   198     008F                     	;# 
   199     0090                     	;# 
   200     0091                     	;# 
   201     0092                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0094                     	;# 
   206     0095                     	;# 
   207     0096                     	;# 
   208     0097                     	;# 
   209     0098                     	;# 
   210     0099                     	;# 
   211     009A                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     009F                     	;# 
   217     0105                     	;# 
   218     0107                     	;# 
   219     0108                     	;# 
   220     0109                     	;# 
   221     010C                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     0185                     	;# 
   227     0187                     	;# 
   228     0188                     	;# 
   229     0189                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     0008                     	;# 
   241     0009                     	;# 
   242     000A                     	;# 
   243     000B                     	;# 
   244     000C                     	;# 
   245     000D                     	;# 
   246     000E                     	;# 
   247     000E                     	;# 
   248     000F                     	;# 
   249     0010                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0015                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001B                     	;# 
   263     001C                     	;# 
   264     001D                     	;# 
   265     001E                     	;# 
   266     001F                     	;# 
   267     0081                     	;# 
   268     0085                     	;# 
   269     0086                     	;# 
   270     0087                     	;# 
   271     0088                     	;# 
   272     0089                     	;# 
   273     008C                     	;# 
   274     008D                     	;# 
   275     008E                     	;# 
   276     008F                     	;# 
   277     0090                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0095                     	;# 
   285     0096                     	;# 
   286     0097                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009A                     	;# 
   290     009B                     	;# 
   291     009C                     	;# 
   292     009D                     	;# 
   293     009E                     	;# 
   294     009F                     	;# 
   295     0105                     	;# 
   296     0107                     	;# 
   297     0108                     	;# 
   298     0109                     	;# 
   299     010C                     	;# 
   300     010C                     	;# 
   301     010D                     	;# 
   302     010E                     	;# 
   303     010F                     	;# 
   304     0185                     	;# 
   305     0187                     	;# 
   306     0188                     	;# 
   307     0189                     	;# 
   308     018C                     	;# 
   309     018D                     	;# 
   310     0000                     	;# 
   311     0001                     	;# 
   312     0002                     	;# 
   313     0003                     	;# 
   314     0004                     	;# 
   315     0005                     	;# 
   316     0006                     	;# 
   317     0007                     	;# 
   318     0008                     	;# 
   319     0009                     	;# 
   320     000A                     	;# 
   321     000B                     	;# 
   322     000C                     	;# 
   323     000D                     	;# 
   324     000E                     	;# 
   325     000E                     	;# 
   326     000F                     	;# 
   327     0010                     	;# 
   328     0011                     	;# 
   329     0012                     	;# 
   330     0013                     	;# 
   331     0014                     	;# 
   332     0015                     	;# 
   333     0015                     	;# 
   334     0016                     	;# 
   335     0017                     	;# 
   336     0018                     	;# 
   337     0019                     	;# 
   338     001A                     	;# 
   339     001B                     	;# 
   340     001B                     	;# 
   341     001C                     	;# 
   342     001D                     	;# 
   343     001E                     	;# 
   344     001F                     	;# 
   345     0081                     	;# 
   346     0085                     	;# 
   347     0086                     	;# 
   348     0087                     	;# 
   349     0088                     	;# 
   350     0089                     	;# 
   351     008C                     	;# 
   352     008D                     	;# 
   353     008E                     	;# 
   354     008F                     	;# 
   355     0090                     	;# 
   356     0091                     	;# 
   357     0092                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0094                     	;# 
   362     0095                     	;# 
   363     0096                     	;# 
   364     0097                     	;# 
   365     0098                     	;# 
   366     0099                     	;# 
   367     009A                     	;# 
   368     009B                     	;# 
   369     009C                     	;# 
   370     009D                     	;# 
   371     009E                     	;# 
   372     009F                     	;# 
   373     0105                     	;# 
   374     0107                     	;# 
   375     0108                     	;# 
   376     0109                     	;# 
   377     010C                     	;# 
   378     010C                     	;# 
   379     010D                     	;# 
   380     010E                     	;# 
   381     010F                     	;# 
   382     0185                     	;# 
   383     0187                     	;# 
   384     0188                     	;# 
   385     0189                     	;# 
   386     018C                     	;# 
   387     018D                     	;# 
   388     0000                     	;# 
   389     0001                     	;# 
   390     0002                     	;# 
   391     0003                     	;# 
   392     0004                     	;# 
   393     0005                     	;# 
   394     0006                     	;# 
   395     0007                     	;# 
   396     0008                     	;# 
   397     0009                     	;# 
   398     000A                     	;# 
   399     000B                     	;# 
   400     000C                     	;# 
   401     000D                     	;# 
   402     000E                     	;# 
   403     000E                     	;# 
   404     000F                     	;# 
   405     0010                     	;# 
   406     0011                     	;# 
   407     0012                     	;# 
   408     0013                     	;# 
   409     0014                     	;# 
   410     0015                     	;# 
   411     0015                     	;# 
   412     0016                     	;# 
   413     0017                     	;# 
   414     0018                     	;# 
   415     0019                     	;# 
   416     001A                     	;# 
   417     001B                     	;# 
   418     001B                     	;# 
   419     001C                     	;# 
   420     001D                     	;# 
   421     001E                     	;# 
   422     001F                     	;# 
   423     0081                     	;# 
   424     0085                     	;# 
   425     0086                     	;# 
   426     0087                     	;# 
   427     0088                     	;# 
   428     0089                     	;# 
   429     008C                     	;# 
   430     008D                     	;# 
   431     008E                     	;# 
   432     008F                     	;# 
   433     0090                     	;# 
   434     0091                     	;# 
   435     0092                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0094                     	;# 
   440     0095                     	;# 
   441     0096                     	;# 
   442     0097                     	;# 
   443     0098                     	;# 
   444     0099                     	;# 
   445     009A                     	;# 
   446     009B                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     0105                     	;# 
   452     0107                     	;# 
   453     0108                     	;# 
   454     0109                     	;# 
   455     010C                     	;# 
   456     010C                     	;# 
   457     010D                     	;# 
   458     010E                     	;# 
   459     010F                     	;# 
   460     0185                     	;# 
   461     0187                     	;# 
   462     0188                     	;# 
   463     0189                     	;# 
   464     018C                     	;# 
   465     018D                     	;# 
   466     0000                     	;# 
   467     0001                     	;# 
   468     0002                     	;# 
   469     0003                     	;# 
   470     0004                     	;# 
   471     0005                     	;# 
   472     0006                     	;# 
   473     0007                     	;# 
   474     0008                     	;# 
   475     0009                     	;# 
   476     000A                     	;# 
   477     000B                     	;# 
   478     000C                     	;# 
   479     000D                     	;# 
   480     000E                     	;# 
   481     000E                     	;# 
   482     000F                     	;# 
   483     0010                     	;# 
   484     0011                     	;# 
   485     0012                     	;# 
   486     0013                     	;# 
   487     0014                     	;# 
   488     0015                     	;# 
   489     0015                     	;# 
   490     0016                     	;# 
   491     0017                     	;# 
   492     0018                     	;# 
   493     0019                     	;# 
   494     001A                     	;# 
   495     001B                     	;# 
   496     001B                     	;# 
   497     001C                     	;# 
   498     001D                     	;# 
   499     001E                     	;# 
   500     001F                     	;# 
   501     0081                     	;# 
   502     0085                     	;# 
   503     0086                     	;# 
   504     0087                     	;# 
   505     0088                     	;# 
   506     0089                     	;# 
   507     008C                     	;# 
   508     008D                     	;# 
   509     008E                     	;# 
   510     008F                     	;# 
   511     0090                     	;# 
   512     0091                     	;# 
   513     0092                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0094                     	;# 
   518     0095                     	;# 
   519     0096                     	;# 
   520     0097                     	;# 
   521     0098                     	;# 
   522     0099                     	;# 
   523     009A                     	;# 
   524     009B                     	;# 
   525     009C                     	;# 
   526     009D                     	;# 
   527     009E                     	;# 
   528     009F                     	;# 
   529     0105                     	;# 
   530     0107                     	;# 
   531     0108                     	;# 
   532     0109                     	;# 
   533     010C                     	;# 
   534     010C                     	;# 
   535     010D                     	;# 
   536     010E                     	;# 
   537     010F                     	;# 
   538     0185                     	;# 
   539     0187                     	;# 
   540     0188                     	;# 
   541     0189                     	;# 
   542     018C                     	;# 
   543     018D                     	;# 
   544     0000                     	;# 
   545     0001                     	;# 
   546     0002                     	;# 
   547     0003                     	;# 
   548     0004                     	;# 
   549     0005                     	;# 
   550     0006                     	;# 
   551     0007                     	;# 
   552     0008                     	;# 
   553     0009                     	;# 
   554     000A                     	;# 
   555     000B                     	;# 
   556     000C                     	;# 
   557     000D                     	;# 
   558     000E                     	;# 
   559     000E                     	;# 
   560     000F                     	;# 
   561     0010                     	;# 
   562     0011                     	;# 
   563     0012                     	;# 
   564     0013                     	;# 
   565     0014                     	;# 
   566     0015                     	;# 
   567     0015                     	;# 
   568     0016                     	;# 
   569     0017                     	;# 
   570     0018                     	;# 
   571     0019                     	;# 
   572     001A                     	;# 
   573     001B                     	;# 
   574     001B                     	;# 
   575     001C                     	;# 
   576     001D                     	;# 
   577     001E                     	;# 
   578     001F                     	;# 
   579     0081                     	;# 
   580     0085                     	;# 
   581     0086                     	;# 
   582     0087                     	;# 
   583     0088                     	;# 
   584     0089                     	;# 
   585     008C                     	;# 
   586     008D                     	;# 
   587     008E                     	;# 
   588     008F                     	;# 
   589     0090                     	;# 
   590     0091                     	;# 
   591     0092                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0093                     	;# 
   595     0094                     	;# 
   596     0095                     	;# 
   597     0096                     	;# 
   598     0097                     	;# 
   599     0098                     	;# 
   600     0099                     	;# 
   601     009A                     	;# 
   602     009B                     	;# 
   603     009C                     	;# 
   604     009D                     	;# 
   605     009E                     	;# 
   606     009F                     	;# 
   607     0105                     	;# 
   608     0107                     	;# 
   609     0108                     	;# 
   610     0109                     	;# 
   611     010C                     	;# 
   612     010C                     	;# 
   613     010D                     	;# 
   614     010E                     	;# 
   615     010F                     	;# 
   616     0185                     	;# 
   617     0187                     	;# 
   618     0188                     	;# 
   619     0189                     	;# 
   620     018C                     	;# 
   621     018D                     	;# 
   622     0000                     	;# 
   623     0001                     	;# 
   624     0002                     	;# 
   625     0003                     	;# 
   626     0004                     	;# 
   627     0005                     	;# 
   628     0006                     	;# 
   629     0007                     	;# 
   630     0008                     	;# 
   631     0009                     	;# 
   632     000A                     	;# 
   633     000B                     	;# 
   634     000C                     	;# 
   635     000D                     	;# 
   636     000E                     	;# 
   637     000E                     	;# 
   638     000F                     	;# 
   639     0010                     	;# 
   640     0011                     	;# 
   641     0012                     	;# 
   642     0013                     	;# 
   643     0014                     	;# 
   644     0015                     	;# 
   645     0015                     	;# 
   646     0016                     	;# 
   647     0017                     	;# 
   648     0018                     	;# 
   649     0019                     	;# 
   650     001A                     	;# 
   651     001B                     	;# 
   652     001B                     	;# 
   653     001C                     	;# 
   654     001D                     	;# 
   655     001E                     	;# 
   656     001F                     	;# 
   657     0081                     	;# 
   658     0085                     	;# 
   659     0086                     	;# 
   660     0087                     	;# 
   661     0088                     	;# 
   662     0089                     	;# 
   663     008C                     	;# 
   664     008D                     	;# 
   665     008E                     	;# 
   666     008F                     	;# 
   667     0090                     	;# 
   668     0091                     	;# 
   669     0092                     	;# 
   670     0093                     	;# 
   671     0093                     	;# 
   672     0093                     	;# 
   673     0094                     	;# 
   674     0095                     	;# 
   675     0096                     	;# 
   676     0097                     	;# 
   677     0098                     	;# 
   678     0099                     	;# 
   679     009A                     	;# 
   680     009B                     	;# 
   681     009C                     	;# 
   682     009D                     	;# 
   683     009E                     	;# 
   684     009F                     	;# 
   685     0105                     	;# 
   686     0107                     	;# 
   687     0108                     	;# 
   688     0109                     	;# 
   689     010C                     	;# 
   690     010C                     	;# 
   691     010D                     	;# 
   692     010E                     	;# 
   693     010F                     	;# 
   694     0185                     	;# 
   695     0187                     	;# 
   696     0188                     	;# 
   697     0189                     	;# 
   698     018C                     	;# 
   699     018D                     	;# 
   700     001A                     _RCREG	set	26
   701     0019                     _TXREG	set	25
   702     0018                     _RCSTAbits	set	24
   703     0007                     _PORTC	set	7
   704     0008                     _PORTD	set	8
   705     0006                     _PORTB	set	6
   706     0006                     _PORTBbits	set	6
   707     0008                     _PORTDbits	set	8
   708     000B                     _INTCONbits	set	11
   709     0005                     _PORTAbits	set	5
   710     001E                     _ADRESH	set	30
   711     001F                     _ADCON0bits	set	31
   712     000C                     _PIR1bits	set	12
   713     0031                     _RB1	set	49
   714     0047                     _RD7	set	71
   715     0046                     _RD6	set	70
   716     0045                     _RD5	set	69
   717     0044                     _RD4	set	68
   718     0043                     _RD3	set	67
   719     0042                     _RD2	set	66
   720     0041                     _RD1	set	65
   721     0066                     _ADIF	set	102
   722     009A                     _SPBRGH	set	154
   723     0099                     _SPBRG	set	153
   724     0098                     _TXSTAbits	set	152
   725     0087                     _TRISC	set	135
   726     0088                     _TRISD	set	136
   727     0086                     _TRISB	set	134
   728     009F                     _ADCON1bits	set	159
   729     008C                     _PIE1bits	set	140
   730     0085                     _TRISAbits	set	133
   731     008F                     _OSCCONbits	set	143
   732     0187                     _BAUDCTLbits	set	391
   733     0189                     _ANSELH	set	393
   734     0188                     _ANSELbits	set	392
   735                           
   736                           	psect	strings
   737     0800                     __pstrings:
   738     0800                     stringtab:
   739     0800                     __stringtab:
   740     0800                     stringcode:	
   741                           ;	String table - string pointers are 1 byte each
   742                           
   743     0800                     stringdir:
   744     0800  3008               	movlw	high stringdir
   745     0801  008A               	movwf	10
   746     0802  0804               	movf	4,w
   747     0803  0A84               	incf	4,f
   748     0804  0782               	addwf	2,f
   749     0805                     __stringbase:
   750     0805  3400               	retlw	0
   751     0806                     __end_of__stringtab:
   752     0806                     STR_1:
   753     0806  3453               	retlw	83	;'S'
   754     0807  3431               	retlw	49	;'1'
   755     0808  343A               	retlw	58	;':'
   756     0809  3420               	retlw	32	;' '
   757     080A  3420               	retlw	32	;' '
   758     080B  3420               	retlw	32	;' '
   759     080C  3453               	retlw	83	;'S'
   760     080D  3432               	retlw	50	;'2'
   761     080E  343A               	retlw	58	;':'
   762     080F  3420               	retlw	32	;' '
   763     0810  3420               	retlw	32	;' '
   764     0811  3420               	retlw	32	;' '
   765     0812  3453               	retlw	83	;'S'
   766     0813  3433               	retlw	51	;'3'
   767     0814  343A               	retlw	58	;':'
   768     0815  3400               	retlw	0
   769                           
   770                           	psect	cinit
   771     0011                     start_initialization:	
   772                           ; #config settings
   773                           
   774     0011                     __initialization:
   775                           
   776                           ; Clear objects allocated to BANK0
   777     0011  1283               	bcf	3,5	;RP0=0, select bank0
   778     0012  1303               	bcf	3,6	;RP1=0, select bank0
   779     0013  01D0               	clrf	__pbssBANK0& (0+127)
   780     0014  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   781     0015  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   782     0016  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   783     0017  01D4               	clrf	(__pbssBANK0+4)& (0+127)
   784     0018  01D5               	clrf	(__pbssBANK0+5)& (0+127)
   785     0019  01D6               	clrf	(__pbssBANK0+6)& (0+127)
   786     001A  01D7               	clrf	(__pbssBANK0+7)& (0+127)
   787     001B  01D8               	clrf	(__pbssBANK0+8)& (0+127)
   788     001C  01D9               	clrf	(__pbssBANK0+9)& (0+127)
   789     001D  01DA               	clrf	(__pbssBANK0+10)& (0+127)
   790     001E  01DB               	clrf	(__pbssBANK0+11)& (0+127)
   791     001F  01DC               	clrf	(__pbssBANK0+12)& (0+127)
   792     0020  01DD               	clrf	(__pbssBANK0+13)& (0+127)
   793     0021  01DE               	clrf	(__pbssBANK0+14)& (0+127)
   794     0022                     end_of_initialization:	
   795                           ;End of C runtime variable initialization code
   796                           
   797     0022                     __end_of__initialization:
   798     0022  0183               	clrf	3
   799     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   800                           
   801                           	psect	bssBANK0
   802     0050                     __pbssBANK0:
   803     0050                     _lecADC0:
   804     0050                     	ds	4
   805     0054                     _valADC1:
   806     0054                     	ds	2
   807     0056                     _valADC0:
   808     0056                     	ds	2
   809     0058                     _lecADC1:
   810     0058                     	ds	2
   811     005A                     _centesimas:
   812     005A                     	ds	1
   813     005B                     _decimas:
   814     005B                     	ds	1
   815     005C                     _unidades:
   816     005C                     	ds	1
   817     005D                     _indicador:
   818     005D                     	ds	1
   819     005E                     _cont:
   820     005E                     	ds	1
   821                           
   822                           	psect	cstackCOMMON
   823     0070                     __pcstackCOMMON:
   824     0070                     ?_UART_read_char:
   825     0070                     ??_UART_read_char:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?_setupINTOSC:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_configpuertos:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?_UART_mode_config:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_Lcd_Init:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ?_Lcd_Clear:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_Lcd_Write_String:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?_inttochar:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_Lcd_Write_Char:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_isr:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_main:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?_Lcd_Port:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_Lcd_Cmd:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?___xxtofl:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ___xxtofl@val:	
   868                           ; 4 bytes @ 0x0
   869                           
   870                           
   871                           ; 4 bytes @ 0x0
   872     0070                     	ds	4
   873     0074                     ??___xxtofl:
   874                           
   875                           ; 1 bytes @ 0x4
   876     0074                     	ds	4
   877     0078                     ___xxtofl@sign:
   878                           
   879                           ; 1 bytes @ 0x8
   880     0078                     	ds	1
   881     0079                     ___xxtofl@exp:
   882                           
   883                           ; 1 bytes @ 0x9
   884     0079                     	ds	1
   885     007A                     ___xxtofl@arg:
   886                           
   887                           ; 4 bytes @ 0xA
   888     007A                     	ds	4
   889                           
   890                           	psect	cstackBANK0
   891     0020                     __pcstackBANK0:
   892     0020                     ??_isr:
   893                           
   894                           ; 1 bytes @ 0x0
   895     0020                     	ds	6
   896     0026                     ??_setupINTOSC:
   897     0026                     ??_configpuertos:	
   898                           ; 1 bytes @ 0x6
   899                           
   900     0026                     ?_ADC_config:	
   901                           ; 1 bytes @ 0x6
   902                           
   903     0026                     ??_UART_mode_config:	
   904                           ; 1 bytes @ 0x6
   905                           
   906     0026                     ?_UART_RX_config:	
   907                           ; 1 bytes @ 0x6
   908                           
   909     0026                     ?_ADC_read:	
   910                           ; 1 bytes @ 0x6
   911                           
   912     0026                     ??_inttochar:	
   913                           ; 1 bytes @ 0x6
   914                           
   915     0026                     ??_Lcd_Port:	
   916                           ; 1 bytes @ 0x6
   917                           
   918     0026                     ?___awdiv:	
   919                           ; 1 bytes @ 0x6
   920                           
   921     0026                     ?___awmod:	
   922                           ; 2 bytes @ 0x6
   923                           
   924     0026                     ?___lwdiv:	
   925                           ; 2 bytes @ 0x6
   926                           
   927     0026                     ?___lwmod:	
   928                           ; 2 bytes @ 0x6
   929                           
   930     0026                     ?___lmul:	
   931                           ; 2 bytes @ 0x6
   932                           
   933     0026                     ?___fltol:	
   934                           ; 4 bytes @ 0x6
   935                           
   936     0026                     setupINTOSC@IRCF:	
   937                           ; 4 bytes @ 0x6
   938                           
   939     0026                     Lcd_Port@a:	
   940                           ; 1 bytes @ 0x6
   941                           
   942     0026                     inttochar@num:	
   943                           ; 1 bytes @ 0x6
   944                           
   945     0026                     UART_mode_config@mode:	
   946                           ; 1 bytes @ 0x6
   947                           
   948     0026                     ADC_config@channel:	
   949                           ; 1 bytes @ 0x6
   950                           
   951     0026                     ADC_read@channel:	
   952                           ; 2 bytes @ 0x6
   953                           
   954     0026                     UART_RX_config@baudrate:	
   955                           ; 2 bytes @ 0x6
   956                           
   957     0026                     ___awdiv@divisor:	
   958                           ; 2 bytes @ 0x6
   959                           
   960     0026                     ___awmod@divisor:	
   961                           ; 2 bytes @ 0x6
   962                           
   963     0026                     ___lwdiv@divisor:	
   964                           ; 2 bytes @ 0x6
   965                           
   966     0026                     ___lwmod@divisor:	
   967                           ; 2 bytes @ 0x6
   968                           
   969     0026                     ___lmul@multiplier:	
   970                           ; 2 bytes @ 0x6
   971                           
   972     0026                     ___fltol@f1:	
   973                           ; 4 bytes @ 0x6
   974                           
   975                           
   976                           ; 4 bytes @ 0x6
   977     0026                     	ds	1
   978     0027                     ??_Lcd_Write_Char:
   979     0027                     ??_Lcd_Cmd:	
   980                           ; 1 bytes @ 0x7
   981                           
   982                           
   983                           ; 1 bytes @ 0x7
   984     0027                     	ds	1
   985     0028                     ??_ADC_config:
   986     0028                     ??_UART_RX_config:	
   987                           ; 1 bytes @ 0x8
   988                           
   989     0028                     ??_ADC_read:	
   990                           ; 1 bytes @ 0x8
   991                           
   992     0028                     Lcd_Cmd@a:	
   993                           ; 1 bytes @ 0x8
   994                           
   995     0028                     Lcd_Write_Char@a:	
   996                           ; 1 bytes @ 0x8
   997                           
   998     0028                     ___awdiv@dividend:	
   999                           ; 1 bytes @ 0x8
  1000                           
  1001     0028                     ___awmod@dividend:	
  1002                           ; 2 bytes @ 0x8
  1003                           
  1004     0028                     ___lwdiv@dividend:	
  1005                           ; 2 bytes @ 0x8
  1006                           
  1007     0028                     ___lwmod@dividend:	
  1008                           ; 2 bytes @ 0x8
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x8
  1012     0028                     	ds	1
  1013     0029                     ??_Lcd_Init:
  1014     0029                     ??_Lcd_Clear:	
  1015                           ; 1 bytes @ 0x9
  1016                           
  1017     0029                     ?_Lcd_Set_Cursor:	
  1018                           ; 1 bytes @ 0x9
  1019                           
  1020     0029                     ??_Lcd_Write_String:	
  1021                           ; 1 bytes @ 0x9
  1022                           
  1023     0029                     Lcd_Set_Cursor@b:	
  1024                           ; 1 bytes @ 0x9
  1025                           
  1026     0029                     Lcd_Write_String@i:	
  1027                           ; 1 bytes @ 0x9
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x9
  1031     0029                     	ds	1
  1032     002A                     ??_Lcd_Set_Cursor:
  1033     002A                     ??___awdiv:	
  1034                           ; 1 bytes @ 0xA
  1035                           
  1036     002A                     ??___awmod:	
  1037                           ; 1 bytes @ 0xA
  1038                           
  1039     002A                     ??___fltol:	
  1040                           ; 1 bytes @ 0xA
  1041                           
  1042     002A                     ??___lwdiv:	
  1043                           ; 1 bytes @ 0xA
  1044                           
  1045     002A                     ??___lwmod:	
  1046                           ; 1 bytes @ 0xA
  1047                           
  1048     002A                     Lcd_Set_Cursor@a:	
  1049                           ; 1 bytes @ 0xA
  1050                           
  1051     002A                     ___lmul@multiplicand:	
  1052                           ; 1 bytes @ 0xA
  1053                           
  1054                           
  1055                           ; 4 bytes @ 0xA
  1056     002A                     	ds	1
  1057     002B                     Lcd_Set_Cursor@temp:
  1058     002B                     Lcd_Write_String@a:	
  1059                           ; 1 bytes @ 0xB
  1060                           
  1061     002B                     ___awdiv@counter:	
  1062                           ; 1 bytes @ 0xB
  1063                           
  1064     002B                     ___awmod@counter:	
  1065                           ; 1 bytes @ 0xB
  1066                           
  1067     002B                     ___lwmod@counter:	
  1068                           ; 1 bytes @ 0xB
  1069                           
  1070     002B                     ___lwdiv@quotient:	
  1071                           ; 1 bytes @ 0xB
  1072                           
  1073                           
  1074                           ; 2 bytes @ 0xB
  1075     002B                     	ds	1
  1076     002C                     ___awdiv@sign:
  1077     002C                     ___awmod@sign:	
  1078                           ; 1 bytes @ 0xC
  1079                           
  1080                           
  1081                           ; 1 bytes @ 0xC
  1082     002C                     	ds	1
  1083     002D                     ___lwdiv@counter:
  1084     002D                     ___awdiv@quotient:	
  1085                           ; 1 bytes @ 0xD
  1086                           
  1087                           
  1088                           ; 2 bytes @ 0xD
  1089     002D                     	ds	1
  1090     002E                     ??___lmul:
  1091     002E                     ___fltol@sign1:	
  1092                           ; 1 bytes @ 0xE
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0xE
  1096     002E                     	ds	1
  1097     002F                     ?_descomponer:
  1098     002F                     ___fltol@exp1:	
  1099                           ; 1 bytes @ 0xF
  1100                           
  1101     002F                     descomponer@pos:	
  1102                           ; 1 bytes @ 0xF
  1103                           
  1104     002F                     ___lmul@product:	
  1105                           ; 2 bytes @ 0xF
  1106                           
  1107                           
  1108                           ; 4 bytes @ 0xF
  1109     002F                     	ds	2
  1110     0031                     descomponer@num:
  1111                           
  1112                           ; 2 bytes @ 0x11
  1113     0031                     	ds	2
  1114     0033                     ??_descomponer:
  1115     0033                     ?___aldiv:	
  1116                           ; 1 bytes @ 0x13
  1117                           
  1118     0033                     ___aldiv@divisor:	
  1119                           ; 4 bytes @ 0x13
  1120                           
  1121                           
  1122                           ; 4 bytes @ 0x13
  1123     0033                     	ds	2
  1124     0035                     descomponer@cent:
  1125                           
  1126                           ; 1 bytes @ 0x15
  1127     0035                     	ds	1
  1128     0036                     descomponer@uni:
  1129                           
  1130                           ; 1 bytes @ 0x16
  1131     0036                     	ds	1
  1132     0037                     descomponer@dec:
  1133     0037                     ___aldiv@dividend:	
  1134                           ; 1 bytes @ 0x17
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x17
  1138     0037                     	ds	4
  1139     003B                     ??___aldiv:
  1140                           
  1141                           ; 1 bytes @ 0x1B
  1142     003B                     	ds	1
  1143     003C                     ___aldiv@counter:
  1144                           
  1145                           ; 1 bytes @ 0x1C
  1146     003C                     	ds	1
  1147     003D                     ___aldiv@sign:
  1148                           
  1149                           ; 1 bytes @ 0x1D
  1150     003D                     	ds	1
  1151     003E                     ___aldiv@quotient:
  1152                           
  1153                           ; 4 bytes @ 0x1E
  1154     003E                     	ds	4
  1155     0042                     ?_mapeo:
  1156     0042                     mapeo@inmin:	
  1157                           ; 2 bytes @ 0x22
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0x22
  1161     0042                     	ds	1
  1162     0043                     mapeo@inmax:
  1163                           
  1164                           ; 1 bytes @ 0x23
  1165     0043                     	ds	1
  1166     0044                     mapeo@outmin:
  1167                           
  1168                           ; 1 bytes @ 0x24
  1169     0044                     	ds	1
  1170     0045                     mapeo@outmax:
  1171                           
  1172                           ; 2 bytes @ 0x25
  1173     0045                     	ds	2
  1174     0047                     ??_mapeo:
  1175                           
  1176                           ; 1 bytes @ 0x27
  1177     0047                     	ds	4
  1178     004B                     mapeo@resultado:
  1179                           
  1180                           ; 2 bytes @ 0x2B
  1181     004B                     	ds	2
  1182     004D                     mapeo@valor:
  1183                           
  1184                           ; 1 bytes @ 0x2D
  1185     004D                     	ds	1
  1186     004E                     ??_main:
  1187                           
  1188                           ; 1 bytes @ 0x2E
  1189     004E                     	ds	2
  1190                           
  1191                           	psect	maintext
  1192     0026                     __pmaintext:	
  1193 ;;
  1194 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1195 ;;
  1196 ;; *************** function _main *****************
  1197 ;; Defined at:
  1198 ;;		line 82 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : B00/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          0       2       0       0       0
  1215 ;;      Totals:         0       2       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels required when called: 5
  1218 ;; This function calls:
  1219 ;;		_ADC_config
  1220 ;;		_ADC_read
  1221 ;;		_Lcd_Clear
  1222 ;;		_Lcd_Init
  1223 ;;		_Lcd_Set_Cursor
  1224 ;;		_Lcd_Write_Char
  1225 ;;		_Lcd_Write_String
  1226 ;;		_UART_RX_config
  1227 ;;		_UART_mode_config
  1228 ;;		___fltol
  1229 ;;		_configpuertos
  1230 ;;		_descomponer
  1231 ;;		_inttochar
  1232 ;;		_mapeo
  1233 ;;		_setupINTOSC
  1234 ;; This function is called by:
  1235 ;;		Startup code after reset
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239     0026                     _main:	
  1240                           ;psect for function _main
  1241                           
  1242     0026                     l2282:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1245                           
  1246                           
  1247                           ;main.c: 83:     setupINTOSC(4);
  1248     0026  3004               	movlw	4
  1249     0027  120A  118A  2495  120A  118A  	fcall	_setupINTOSC
  1250                           
  1251                           ;main.c: 84:     configpuertos();
  1252     002C  120A  158A  2684  120A  118A  	fcall	_configpuertos
  1253                           
  1254                           ;main.c: 85:     ADC_config(0x03);
  1255     0031  3003               	movlw	3
  1256     0032  1283               	bcf	3,5	;RP0=0, select bank0
  1257     0033  1303               	bcf	3,6	;RP1=0, select bank0
  1258     0034  00A6               	movwf	ADC_config@channel
  1259     0035  3000               	movlw	0
  1260     0036  00A7               	movwf	ADC_config@channel+1
  1261     0037  120A  118A  27BB  120A  118A  	fcall	_ADC_config
  1262                           
  1263                           ;main.c: 86:     UART_mode_config(3);
  1264     003C  3003               	movlw	3
  1265     003D  120A  118A  2682  120A  118A  	fcall	_UART_mode_config
  1266                           
  1267                           ;main.c: 87:     UART_RX_config(9600);
  1268     0042  3080               	movlw	128
  1269     0043  1283               	bcf	3,5	;RP0=0, select bank0
  1270     0044  1303               	bcf	3,6	;RP1=0, select bank0
  1271     0045  00A6               	movwf	UART_RX_config@baudrate
  1272     0046  3025               	movlw	37
  1273     0047  00A7               	movwf	UART_RX_config@baudrate+1
  1274     0048  120A  158A  269E  120A  118A  	fcall	_UART_RX_config
  1275                           
  1276                           ;main.c: 88:     Lcd_Init();
  1277     004D  120A  118A  24FD  120A  118A  	fcall	_Lcd_Init
  1278                           
  1279                           ;main.c: 89:     Lcd_Clear();
  1280     0052  120A  158A  264C  120A  118A  	fcall	_Lcd_Clear
  1281                           
  1282                           ;main.c: 90:     Lcd_Set_Cursor(1,2);
  1283     0057  3002               	movlw	2
  1284     0058  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0059  1303               	bcf	3,6	;RP1=0, select bank0
  1286     005A  00A9               	movwf	Lcd_Set_Cursor@b
  1287     005B  3001               	movlw	1
  1288     005C  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1289     0061                     l2284:
  1290                           
  1291                           ;main.c: 91:     Lcd_Write_String("S1:   S2:   S3:");
  1292     0061  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1293     0062  120A  158A  26DB  120A  118A  	fcall	_Lcd_Write_String
  1294     0067                     l2286:
  1295                           
  1296                           ;main.c: 92:     cont = 0;
  1297     0067  1283               	bcf	3,5	;RP0=0, select bank0
  1298     0068  1303               	bcf	3,6	;RP1=0, select bank0
  1299     0069  01DE               	clrf	_cont
  1300     006A                     l2288:
  1301                           
  1302                           ;main.c: 97:         ADC_read(0);
  1303     006A  3000               	movlw	0
  1304     006B  1283               	bcf	3,5	;RP0=0, select bank0
  1305     006C  1303               	bcf	3,6	;RP1=0, select bank0
  1306     006D  00A6               	movwf	ADC_read@channel
  1307     006E  00A7               	movwf	ADC_read@channel+1
  1308     006F  120A  158A  277C  120A  118A  	fcall	_ADC_read
  1309     0074                     l2290:
  1310                           
  1311                           ;main.c: 98:         valADC0 = mapeo(lecADC0, 0, 255, 0, 500);
  1312     0074  1283               	bcf	3,5	;RP0=0, select bank0
  1313     0075  1303               	bcf	3,6	;RP1=0, select bank0
  1314     0076  01C2               	clrf	mapeo@inmin
  1315     0077  30FF               	movlw	255
  1316     0078  00C3               	movwf	mapeo@inmax
  1317     0079  01C4               	clrf	mapeo@outmin
  1318     007A  30F4               	movlw	244
  1319     007B  00C5               	movwf	mapeo@outmax
  1320     007C  3001               	movlw	1
  1321     007D  00C6               	movwf	mapeo@outmax+1
  1322     007E  0853               	movf	_lecADC0+3,w
  1323     007F  00A9               	movwf	___fltol@f1+3
  1324     0080  0852               	movf	_lecADC0+2,w
  1325     0081  00A8               	movwf	___fltol@f1+2
  1326     0082  0851               	movf	_lecADC0+1,w
  1327     0083  00A7               	movwf	___fltol@f1+1
  1328     0084  0850               	movf	_lecADC0,w
  1329     0085  00A6               	movwf	___fltol@f1
  1330     0086  120A  118A  23B4  120A  118A  	fcall	___fltol
  1331     008B  1283               	bcf	3,5	;RP0=0, select bank0
  1332     008C  1303               	bcf	3,6	;RP1=0, select bank0
  1333     008D  0826               	movf	?___fltol,w
  1334     008E  120A  118A  2774  120A  118A  	fcall	_mapeo
  1335     0093  1283               	bcf	3,5	;RP0=0, select bank0
  1336     0094  1303               	bcf	3,6	;RP1=0, select bank0
  1337     0095  0843               	movf	?_mapeo+1,w
  1338     0096  00D7               	movwf	_valADC0+1
  1339     0097  0842               	movf	?_mapeo,w
  1340     0098  00D6               	movwf	_valADC0
  1341     0099                     l2292:
  1342                           
  1343                           ;main.c: 99:         unidades = inttochar(descomponer(2, valADC0));
  1344     0099  3002               	movlw	2
  1345     009A  00AF               	movwf	descomponer@pos
  1346     009B  3000               	movlw	0
  1347     009C  00B0               	movwf	descomponer@pos+1
  1348     009D  0857               	movf	_valADC0+1,w
  1349     009E  00B2               	movwf	descomponer@num+1
  1350     009F  0856               	movf	_valADC0,w
  1351     00A0  00B1               	movwf	descomponer@num
  1352     00A1  120A  118A  2561  120A  118A  	fcall	_descomponer
  1353     00A6  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1354     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1355     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1356     00AD  00DC               	movwf	_unidades
  1357     00AE                     l2294:
  1358                           
  1359                           ;main.c: 100:         Lcd_Set_Cursor(2,1);
  1360     00AE  01A9               	clrf	Lcd_Set_Cursor@b
  1361     00AF  0AA9               	incf	Lcd_Set_Cursor@b,f
  1362     00B0  3002               	movlw	2
  1363     00B1  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1364     00B6                     l2296:
  1365                           
  1366                           ;main.c: 101:         Lcd_Write_Char(unidades);
  1367     00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1368     00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1369     00B8  085C               	movf	_unidades,w
  1370     00B9  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1371     00BE                     l2298:
  1372                           
  1373                           ;main.c: 102:         Lcd_Set_Cursor(2,2);
  1374     00BE  3002               	movlw	2
  1375     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1376     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1377     00C1  00A9               	movwf	Lcd_Set_Cursor@b
  1378     00C2  3002               	movlw	2
  1379     00C3  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1380     00C8                     l2300:
  1381                           
  1382                           ;main.c: 103:         Lcd_Write_Char('.');
  1383     00C8  302E               	movlw	46
  1384     00C9  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1385     00CE                     l2302:
  1386                           
  1387                           ;main.c: 104:         decimas = inttochar(descomponer(1, valADC0));
  1388     00CE  3001               	movlw	1
  1389     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1390     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1391     00D1  00AF               	movwf	descomponer@pos
  1392     00D2  3000               	movlw	0
  1393     00D3  00B0               	movwf	descomponer@pos+1
  1394     00D4  0857               	movf	_valADC0+1,w
  1395     00D5  00B2               	movwf	descomponer@num+1
  1396     00D6  0856               	movf	_valADC0,w
  1397     00D7  00B1               	movwf	descomponer@num
  1398     00D8  120A  118A  2561  120A  118A  	fcall	_descomponer
  1399     00DD  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1400     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1401     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1402     00E4  00DB               	movwf	_decimas
  1403     00E5                     l2304:
  1404                           
  1405                           ;main.c: 105:         Lcd_Set_Cursor(2,3);
  1406     00E5  3003               	movlw	3
  1407     00E6  00A9               	movwf	Lcd_Set_Cursor@b
  1408     00E7  3002               	movlw	2
  1409     00E8  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1410     00ED                     l2306:
  1411                           
  1412                           ;main.c: 106:         Lcd_Write_Char(decimas);
  1413     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1414     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1415     00EF  085B               	movf	_decimas,w
  1416     00F0  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1417     00F5                     l2308:
  1418                           
  1419                           ;main.c: 107:         centesimas = inttochar(descomponer(0, valADC0));
  1420     00F5  3000               	movlw	0
  1421     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1422     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1423     00F8  00AF               	movwf	descomponer@pos
  1424     00F9  00B0               	movwf	descomponer@pos+1
  1425     00FA  0857               	movf	_valADC0+1,w
  1426     00FB  00B2               	movwf	descomponer@num+1
  1427     00FC  0856               	movf	_valADC0,w
  1428     00FD  00B1               	movwf	descomponer@num
  1429     00FE  120A  118A  2561  120A  118A  	fcall	_descomponer
  1430     0103  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1431     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1432     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1433     010A  00DA               	movwf	_centesimas
  1434     010B                     l2310:
  1435                           
  1436                           ;main.c: 108:         Lcd_Set_Cursor(2,4);
  1437     010B  3004               	movlw	4
  1438     010C  00A9               	movwf	Lcd_Set_Cursor@b
  1439     010D  3002               	movlw	2
  1440     010E  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1441     0113                     l2312:
  1442                           
  1443                           ;main.c: 109:         Lcd_Write_Char(centesimas);
  1444     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1445     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0115  085A               	movf	_centesimas,w
  1447     0116  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1448     011B                     l2314:
  1449                           
  1450                           ;main.c: 110:         Lcd_Set_Cursor(2,5);
  1451     011B  3005               	movlw	5
  1452     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1453     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1454     011E  00A9               	movwf	Lcd_Set_Cursor@b
  1455     011F  3002               	movlw	2
  1456     0120  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1457     0125                     l2316:
  1458                           
  1459                           ;main.c: 111:         Lcd_Write_Char('V');
  1460     0125  3056               	movlw	86
  1461     0126  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1462     012B                     l2318:
  1463                           
  1464                           ;main.c: 114:         ADC_read(1);
  1465     012B  3001               	movlw	1
  1466     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1467     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1468     012E  00A6               	movwf	ADC_read@channel
  1469     012F  3000               	movlw	0
  1470     0130  00A7               	movwf	ADC_read@channel+1
  1471     0131  120A  158A  277C  120A  118A  	fcall	_ADC_read
  1472     0136                     l2320:
  1473                           
  1474                           ;main.c: 115:         valADC1 = mapeo(lecADC1, 0, 255, 0, 500);
  1475     0136  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0137  1303               	bcf	3,6	;RP1=0, select bank0
  1477     0138  01C2               	clrf	mapeo@inmin
  1478     0139  30FF               	movlw	255
  1479     013A  00C3               	movwf	mapeo@inmax
  1480     013B  01C4               	clrf	mapeo@outmin
  1481     013C  30F4               	movlw	244
  1482     013D  00C5               	movwf	mapeo@outmax
  1483     013E  3001               	movlw	1
  1484     013F  00C6               	movwf	mapeo@outmax+1
  1485     0140  0858               	movf	_lecADC1,w
  1486     0141  120A  118A  2774  120A  118A  	fcall	_mapeo
  1487     0146  1283               	bcf	3,5	;RP0=0, select bank0
  1488     0147  1303               	bcf	3,6	;RP1=0, select bank0
  1489     0148  0843               	movf	?_mapeo+1,w
  1490     0149  00D5               	movwf	_valADC1+1
  1491     014A  0842               	movf	?_mapeo,w
  1492     014B  00D4               	movwf	_valADC1
  1493     014C                     l2322:
  1494                           
  1495                           ;main.c: 116:         unidades = inttochar(descomponer(2, valADC1));
  1496     014C  3002               	movlw	2
  1497     014D  00AF               	movwf	descomponer@pos
  1498     014E  3000               	movlw	0
  1499     014F  00B0               	movwf	descomponer@pos+1
  1500     0150  0855               	movf	_valADC1+1,w
  1501     0151  00B2               	movwf	descomponer@num+1
  1502     0152  0854               	movf	_valADC1,w
  1503     0153  00B1               	movwf	descomponer@num
  1504     0154  120A  118A  2561  120A  118A  	fcall	_descomponer
  1505     0159  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1506     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1507     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1508     0160  00DC               	movwf	_unidades
  1509     0161                     l2324:
  1510                           
  1511                           ;main.c: 117:         Lcd_Set_Cursor(2,7);
  1512     0161  3007               	movlw	7
  1513     0162  00A9               	movwf	Lcd_Set_Cursor@b
  1514     0163  3002               	movlw	2
  1515     0164  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1516     0169                     l2326:
  1517                           
  1518                           ;main.c: 118:         Lcd_Write_Char(unidades);
  1519     0169  1283               	bcf	3,5	;RP0=0, select bank0
  1520     016A  1303               	bcf	3,6	;RP1=0, select bank0
  1521     016B  085C               	movf	_unidades,w
  1522     016C  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1523     0171                     l2328:
  1524                           
  1525                           ;main.c: 119:         Lcd_Set_Cursor(2,8);
  1526     0171  3008               	movlw	8
  1527     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1528     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1529     0174  00A9               	movwf	Lcd_Set_Cursor@b
  1530     0175  3002               	movlw	2
  1531     0176  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1532     017B                     l2330:
  1533                           
  1534                           ;main.c: 120:         Lcd_Write_Char('.');
  1535     017B  302E               	movlw	46
  1536     017C  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1537     0181                     l2332:
  1538                           
  1539                           ;main.c: 121:         decimas = inttochar(descomponer(1, valADC1));
  1540     0181  3001               	movlw	1
  1541     0182  1283               	bcf	3,5	;RP0=0, select bank0
  1542     0183  1303               	bcf	3,6	;RP1=0, select bank0
  1543     0184  00AF               	movwf	descomponer@pos
  1544     0185  3000               	movlw	0
  1545     0186  00B0               	movwf	descomponer@pos+1
  1546     0187  0855               	movf	_valADC1+1,w
  1547     0188  00B2               	movwf	descomponer@num+1
  1548     0189  0854               	movf	_valADC1,w
  1549     018A  00B1               	movwf	descomponer@num
  1550     018B  120A  118A  2561  120A  118A  	fcall	_descomponer
  1551     0190  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1552     0195  1283               	bcf	3,5	;RP0=0, select bank0
  1553     0196  1303               	bcf	3,6	;RP1=0, select bank0
  1554     0197  00DB               	movwf	_decimas
  1555     0198                     l2334:
  1556                           
  1557                           ;main.c: 122:         Lcd_Set_Cursor(2,9);
  1558     0198  3009               	movlw	9
  1559     0199  00A9               	movwf	Lcd_Set_Cursor@b
  1560     019A  3002               	movlw	2
  1561     019B  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1562     01A0                     l2336:
  1563                           
  1564                           ;main.c: 123:         Lcd_Write_Char(decimas);
  1565     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1566     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1567     01A2  085B               	movf	_decimas,w
  1568     01A3  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1569     01A8                     l2338:
  1570                           
  1571                           ;main.c: 124:         centesimas = inttochar(descomponer(0, valADC1));
  1572     01A8  3000               	movlw	0
  1573     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1574     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1575     01AB  00AF               	movwf	descomponer@pos
  1576     01AC  00B0               	movwf	descomponer@pos+1
  1577     01AD  0855               	movf	_valADC1+1,w
  1578     01AE  00B2               	movwf	descomponer@num+1
  1579     01AF  0854               	movf	_valADC1,w
  1580     01B0  00B1               	movwf	descomponer@num
  1581     01B1  120A  118A  2561  120A  118A  	fcall	_descomponer
  1582     01B6  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1583     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1584     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1585     01BD  00DA               	movwf	_centesimas
  1586     01BE                     l2340:
  1587                           
  1588                           ;main.c: 125:         Lcd_Set_Cursor(2,10);
  1589     01BE  300A               	movlw	10
  1590     01BF  00A9               	movwf	Lcd_Set_Cursor@b
  1591     01C0  3002               	movlw	2
  1592     01C1  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1593     01C6                     l2342:
  1594                           
  1595                           ;main.c: 126:         Lcd_Write_Char(centesimas);
  1596     01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1597     01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1598     01C8  085A               	movf	_centesimas,w
  1599     01C9  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1600     01CE                     l2344:
  1601                           
  1602                           ;main.c: 127:         Lcd_Set_Cursor(2,11);
  1603     01CE  300B               	movlw	11
  1604     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1605     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1606     01D1  00A9               	movwf	Lcd_Set_Cursor@b
  1607     01D2  3002               	movlw	2
  1608     01D3  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1609     01D8                     l2346:
  1610                           
  1611                           ;main.c: 128:         Lcd_Write_Char('V');
  1612     01D8  3056               	movlw	86
  1613     01D9  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1614     01DE                     l2348:
  1615                           
  1616                           ;main.c: 130:         unidades = inttochar(descomponer(2, cont));
  1617     01DE  3002               	movlw	2
  1618     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1619     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1620     01E1  00AF               	movwf	descomponer@pos
  1621     01E2  3000               	movlw	0
  1622     01E3  00B0               	movwf	descomponer@pos+1
  1623     01E4  085E               	movf	_cont,w
  1624     01E5  00CE               	movwf	??_main
  1625     01E6  01CF               	clrf	??_main+1
  1626     01E7  084E               	movf	??_main,w
  1627     01E8  00B1               	movwf	descomponer@num
  1628     01E9  084F               	movf	??_main+1,w
  1629     01EA  00B2               	movwf	descomponer@num+1
  1630     01EB  120A  118A  2561  120A  118A  	fcall	_descomponer
  1631     01F0  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1632     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1633     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1634     01F7  00DC               	movwf	_unidades
  1635     01F8                     l2350:
  1636                           
  1637                           ;main.c: 131:         Lcd_Set_Cursor(2,13);
  1638     01F8  300D               	movlw	13
  1639     01F9  00A9               	movwf	Lcd_Set_Cursor@b
  1640     01FA  3002               	movlw	2
  1641     01FB  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1642     0200                     l2352:
  1643                           
  1644                           ;main.c: 132:         Lcd_Write_Char(unidades);
  1645     0200  1283               	bcf	3,5	;RP0=0, select bank0
  1646     0201  1303               	bcf	3,6	;RP1=0, select bank0
  1647     0202  085C               	movf	_unidades,w
  1648     0203  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1649     0208                     l2354:
  1650                           
  1651                           ;main.c: 133:         decimas = inttochar(descomponer(1, cont));
  1652     0208  3001               	movlw	1
  1653     0209  1283               	bcf	3,5	;RP0=0, select bank0
  1654     020A  1303               	bcf	3,6	;RP1=0, select bank0
  1655     020B  00AF               	movwf	descomponer@pos
  1656     020C  3000               	movlw	0
  1657     020D  00B0               	movwf	descomponer@pos+1
  1658     020E  085E               	movf	_cont,w
  1659     020F  00CE               	movwf	??_main
  1660     0210  01CF               	clrf	??_main+1
  1661     0211  084E               	movf	??_main,w
  1662     0212  00B1               	movwf	descomponer@num
  1663     0213  084F               	movf	??_main+1,w
  1664     0214  00B2               	movwf	descomponer@num+1
  1665     0215  120A  118A  2561  120A  118A  	fcall	_descomponer
  1666     021A  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1667     021F  1283               	bcf	3,5	;RP0=0, select bank0
  1668     0220  1303               	bcf	3,6	;RP1=0, select bank0
  1669     0221  00DB               	movwf	_decimas
  1670     0222                     l2356:
  1671                           
  1672                           ;main.c: 134:         Lcd_Set_Cursor(2,14);
  1673     0222  300E               	movlw	14
  1674     0223  00A9               	movwf	Lcd_Set_Cursor@b
  1675     0224  3002               	movlw	2
  1676     0225  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1677     022A                     l2358:
  1678                           
  1679                           ;main.c: 135:         Lcd_Write_Char(decimas);
  1680     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1681     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1682     022C  085B               	movf	_decimas,w
  1683     022D  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1684     0232                     l2360:
  1685                           
  1686                           ;main.c: 136:         centesimas = inttochar(descomponer(0, cont));
  1687     0232  3000               	movlw	0
  1688     0233  1283               	bcf	3,5	;RP0=0, select bank0
  1689     0234  1303               	bcf	3,6	;RP1=0, select bank0
  1690     0235  00AF               	movwf	descomponer@pos
  1691     0236  00B0               	movwf	descomponer@pos+1
  1692     0237  085E               	movf	_cont,w
  1693     0238  00CE               	movwf	??_main
  1694     0239  01CF               	clrf	??_main+1
  1695     023A  084E               	movf	??_main,w
  1696     023B  00B1               	movwf	descomponer@num
  1697     023C  084F               	movf	??_main+1,w
  1698     023D  00B2               	movwf	descomponer@num+1
  1699     023E  120A  118A  2561  120A  118A  	fcall	_descomponer
  1700     0243  120A  118A  26DA  120A  118A  	fcall	_inttochar
  1701     0248  1283               	bcf	3,5	;RP0=0, select bank0
  1702     0249  1303               	bcf	3,6	;RP1=0, select bank0
  1703     024A  00DA               	movwf	_centesimas
  1704     024B                     l2362:
  1705                           
  1706                           ;main.c: 137:         Lcd_Set_Cursor(2,15);
  1707     024B  300F               	movlw	15
  1708     024C  00A9               	movwf	Lcd_Set_Cursor@b
  1709     024D  3002               	movlw	2
  1710     024E  120A  158A  26B9  120A  118A  	fcall	_Lcd_Set_Cursor
  1711     0253                     l2364:
  1712                           
  1713                           ;main.c: 138:         Lcd_Write_Char(centesimas);
  1714     0253  1283               	bcf	3,5	;RP0=0, select bank0
  1715     0254  1303               	bcf	3,6	;RP1=0, select bank0
  1716     0255  085A               	movf	_centesimas,w
  1717     0256  120A  158A  2653  120A  118A  	fcall	_Lcd_Write_Char
  1718     025B  286A               	goto	l2288
  1719     025C  120A  118A  280E   	ljmp	start
  1720     025F                     __end_of_main:
  1721                           
  1722                           	psect	text1
  1723     0495                     __ptext1:	
  1724 ;; *************** function _setupINTOSC *****************
  1725 ;; Defined at:
  1726 ;;		line 10 in file "oscilador.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  IRCF            1    wreg     unsigned char 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  IRCF            1    6[BANK0 ] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         0       0       0       0       0
  1741 ;;      Locals:         0       1       0       0       0
  1742 ;;      Temps:          0       0       0       0       0
  1743 ;;      Totals:         0       1       0       0       0
  1744 ;;Total ram usage:        1 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 2
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754     0495                     _setupINTOSC:	
  1755                           ;psect for function _setupINTOSC
  1756                           
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1760                           ;setupINTOSC@IRCF stored from wreg
  1761     0495  1283               	bcf	3,5	;RP0=0, select bank0
  1762     0496  1303               	bcf	3,6	;RP1=0, select bank0
  1763     0497  00A6               	movwf	setupINTOSC@IRCF
  1764     0498                     l1914:
  1765                           
  1766                           ;oscilador.c: 11:     if (IRCF == 7){
  1767     0498  3007               	movlw	7
  1768     0499  0626               	xorwf	setupINTOSC@IRCF,w
  1769     049A  1D03               	btfss	3,2
  1770     049B  2C9D               	goto	u1891
  1771     049C  2C9E               	goto	u1890
  1772     049D                     u1891:
  1773     049D  2CA2               	goto	l82
  1774     049E                     u1890:
  1775     049E                     l1916:
  1776                           
  1777                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1778     049E  3070               	movlw	112
  1779     049F  1683               	bsf	3,5	;RP0=1, select bank1
  1780     04A0  1303               	bcf	3,6	;RP1=0, select bank1
  1781     04A1  048F               	iorwf	15,f	;volatile
  1782     04A2                     l82:	
  1783                           ;oscilador.c: 13:     }
  1784                           
  1785                           
  1786                           ;oscilador.c: 14:     if (IRCF == 6){
  1787     04A2  3006               	movlw	6
  1788     04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1789     04A4  0626               	xorwf	setupINTOSC@IRCF,w
  1790     04A5  1D03               	btfss	3,2
  1791     04A6  2CA8               	goto	u1901
  1792     04A7  2CA9               	goto	u1900
  1793     04A8                     u1901:
  1794     04A8  2CAF               	goto	l83
  1795     04A9                     u1900:
  1796     04A9                     l1918:
  1797                           
  1798                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1799     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1800     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1801     04AB  080F               	movf	15,w	;volatile
  1802     04AC  398F               	andlw	-113
  1803     04AD  3860               	iorlw	96
  1804     04AE  008F               	movwf	15	;volatile
  1805     04AF                     l83:	
  1806                           ;oscilador.c: 16:     }
  1807                           
  1808                           
  1809                           ;oscilador.c: 17:     if (IRCF == 5){
  1810     04AF  3005               	movlw	5
  1811     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1812     04B1  0626               	xorwf	setupINTOSC@IRCF,w
  1813     04B2  1D03               	btfss	3,2
  1814     04B3  2CB5               	goto	u1911
  1815     04B4  2CB6               	goto	u1910
  1816     04B5                     u1911:
  1817     04B5  2CBC               	goto	l84
  1818     04B6                     u1910:
  1819     04B6                     l1920:
  1820                           
  1821                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1822     04B6  1683               	bsf	3,5	;RP0=1, select bank1
  1823     04B7  1303               	bcf	3,6	;RP1=0, select bank1
  1824     04B8  080F               	movf	15,w	;volatile
  1825     04B9  398F               	andlw	-113
  1826     04BA  3850               	iorlw	80
  1827     04BB  008F               	movwf	15	;volatile
  1828     04BC                     l84:	
  1829                           ;oscilador.c: 19:     }
  1830                           
  1831                           
  1832                           ;oscilador.c: 20:     if (IRCF == 4){
  1833     04BC  3004               	movlw	4
  1834     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1835     04BE  0626               	xorwf	setupINTOSC@IRCF,w
  1836     04BF  1D03               	btfss	3,2
  1837     04C0  2CC2               	goto	u1921
  1838     04C1  2CC3               	goto	u1920
  1839     04C2                     u1921:
  1840     04C2  2CC9               	goto	l85
  1841     04C3                     u1920:
  1842     04C3                     l1922:
  1843                           
  1844                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1845     04C3  1683               	bsf	3,5	;RP0=1, select bank1
  1846     04C4  1303               	bcf	3,6	;RP1=0, select bank1
  1847     04C5  080F               	movf	15,w	;volatile
  1848     04C6  398F               	andlw	-113
  1849     04C7  3840               	iorlw	64
  1850     04C8  008F               	movwf	15	;volatile
  1851     04C9                     l85:	
  1852                           ;oscilador.c: 22:     }
  1853                           
  1854                           
  1855                           ;oscilador.c: 23:     if (IRCF == 3){
  1856     04C9  3003               	movlw	3
  1857     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1858     04CB  0626               	xorwf	setupINTOSC@IRCF,w
  1859     04CC  1D03               	btfss	3,2
  1860     04CD  2CCF               	goto	u1931
  1861     04CE  2CD0               	goto	u1930
  1862     04CF                     u1931:
  1863     04CF  2CD6               	goto	l86
  1864     04D0                     u1930:
  1865     04D0                     l1924:
  1866                           
  1867                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1868     04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1869     04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1870     04D2  080F               	movf	15,w	;volatile
  1871     04D3  398F               	andlw	-113
  1872     04D4  3830               	iorlw	48
  1873     04D5  008F               	movwf	15	;volatile
  1874     04D6                     l86:	
  1875                           ;oscilador.c: 25:     }
  1876                           
  1877                           
  1878                           ;oscilador.c: 26:     if (IRCF == 2){
  1879     04D6  3002               	movlw	2
  1880     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1881     04D8  0626               	xorwf	setupINTOSC@IRCF,w
  1882     04D9  1D03               	btfss	3,2
  1883     04DA  2CDC               	goto	u1941
  1884     04DB  2CDD               	goto	u1940
  1885     04DC                     u1941:
  1886     04DC  2CE3               	goto	l87
  1887     04DD                     u1940:
  1888     04DD                     l1926:
  1889                           
  1890                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1891     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1892     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1893     04DF  080F               	movf	15,w	;volatile
  1894     04E0  398F               	andlw	-113
  1895     04E1  3820               	iorlw	32
  1896     04E2  008F               	movwf	15	;volatile
  1897     04E3                     l87:	
  1898                           ;oscilador.c: 28:     }
  1899                           
  1900                           
  1901                           ;oscilador.c: 29:     if (IRCF == 1){
  1902     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1903     04E4  0326               	decf	setupINTOSC@IRCF,w
  1904     04E5  1D03               	btfss	3,2
  1905     04E6  2CE8               	goto	u1951
  1906     04E7  2CE9               	goto	u1950
  1907     04E8                     u1951:
  1908     04E8  2CEF               	goto	l88
  1909     04E9                     u1950:
  1910     04E9                     l1928:
  1911                           
  1912                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1913     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  1914     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  1915     04EB  080F               	movf	15,w	;volatile
  1916     04EC  398F               	andlw	-113
  1917     04ED  3810               	iorlw	16
  1918     04EE  008F               	movwf	15	;volatile
  1919     04EF                     l88:	
  1920                           ;oscilador.c: 31:     }
  1921                           
  1922                           
  1923                           ;oscilador.c: 32:     if (IRCF == 0){
  1924     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1925     04F0  0826               	movf	setupINTOSC@IRCF,w
  1926     04F1  1D03               	btfss	3,2
  1927     04F2  2CF4               	goto	u1961
  1928     04F3  2CF5               	goto	u1960
  1929     04F4                     u1961:
  1930     04F4  2CF9               	goto	l1932
  1931     04F5                     u1960:
  1932     04F5                     l1930:
  1933                           
  1934                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1935     04F5  308F               	movlw	-113
  1936     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  1937     04F7  1303               	bcf	3,6	;RP1=0, select bank1
  1938     04F8  058F               	andwf	15,f	;volatile
  1939     04F9                     l1932:
  1940                           
  1941                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1942     04F9  1683               	bsf	3,5	;RP0=1, select bank1
  1943     04FA  1303               	bcf	3,6	;RP1=0, select bank1
  1944     04FB  140F               	bsf	15,0	;volatile
  1945     04FC                     l90:
  1946     04FC  0008               	return
  1947     04FD                     __end_of_setupINTOSC:
  1948                           
  1949                           	psect	text2
  1950     0774                     __ptext2:	
  1951 ;; *************** function _mapeo *****************
  1952 ;; Defined at:
  1953 ;;		line 110 in file "conversiones.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  valor           1    wreg     unsigned char 
  1956 ;;  inmin           1   34[BANK0 ] unsigned char 
  1957 ;;  inmax           1   35[BANK0 ] unsigned char 
  1958 ;;  outmin          1   36[BANK0 ] unsigned char 
  1959 ;;  outmax          2   37[BANK0 ] unsigned int 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  valor           1   45[BANK0 ] unsigned char 
  1962 ;;  resultado       2   43[BANK0 ] unsigned int 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2   34[BANK0 ] unsigned int 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       5       0       0       0
  1973 ;;      Locals:         0       3       0       0       0
  1974 ;;      Temps:          0       4       0       0       0
  1975 ;;      Totals:         0      12       0       0       0
  1976 ;;Total ram usage:       12 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 3
  1979 ;; This function calls:
  1980 ;;		___aldiv
  1981 ;;		___lmul
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987     0774                     _mapeo:	
  1988                           ;psect for function _mapeo
  1989                           
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _mapeo: [wreg+status,2+status,0+pclath+cstack]
  1993                           ;mapeo@valor stored from wreg
  1994     0774  1283               	bcf	3,5	;RP0=0, select bank0
  1995     0775  1303               	bcf	3,6	;RP1=0, select bank0
  1996     0776  00CD               	movwf	mapeo@valor
  1997     0777                     l2068:
  1998                           
  1999                           ;conversiones.c: 111:     uint16_t resultado;;conversiones.c: 112:     resultado = (((ou
      +                          tmax-outmin)* (long long)(valor-inmin))/inmax)+outmin;
  2000     0777  0843               	movf	mapeo@inmax,w
  2001     0778  00C7               	movwf	??_mapeo
  2002     0779  01C8               	clrf	??_mapeo+1
  2003     077A  01C9               	clrf	??_mapeo+2
  2004     077B  01CA               	clrf	??_mapeo+3
  2005     077C  084A               	movf	??_mapeo+3,w
  2006     077D  00B6               	movwf	___aldiv@divisor+3
  2007     077E  0849               	movf	??_mapeo+2,w
  2008     077F  00B5               	movwf	___aldiv@divisor+2
  2009     0780  0848               	movf	??_mapeo+1,w
  2010     0781  00B4               	movwf	___aldiv@divisor+1
  2011     0782  0847               	movf	??_mapeo,w
  2012     0783  00B3               	movwf	___aldiv@divisor
  2013     0784  0844               	movf	mapeo@outmin,w
  2014     0785  0245               	subwf	mapeo@outmax,w
  2015     0786  00A6               	movwf	___lmul@multiplier
  2016     0787  0846               	movf	mapeo@outmax+1,w
  2017     0788  1C03               	skipc
  2018     0789  0346               	decf	mapeo@outmax+1,w
  2019     078A  00A7               	movwf	___lmul@multiplier+1
  2020     078B  01A8               	clrf	___lmul@multiplier+2
  2021     078C  01A9               	clrf	___lmul@multiplier+3
  2022     078D  0842               	movf	mapeo@inmin,w
  2023     078E  024D               	subwf	mapeo@valor,w
  2024     078F  00AA               	movwf	___lmul@multiplicand
  2025     0790  01AB               	clrf	___lmul@multiplicand+1
  2026     0791  1C03               	skipc
  2027     0792  03AB               	decf	___lmul@multiplicand+1,f
  2028     0793  01AC               	clrf	___lmul@multiplicand+2
  2029     0794  1BAB               	btfsc	___lmul@multiplicand+1,7
  2030     0795  03AC               	decf	___lmul@multiplicand+2,f
  2031     0796  082C               	movf	___lmul@multiplicand+2,w
  2032     0797  00AD               	movwf	___lmul@multiplicand+3
  2033     0798  120A  118A  272C  120A  118A  	fcall	___lmul
  2034     079D  1283               	bcf	3,5	;RP0=0, select bank0
  2035     079E  1303               	bcf	3,6	;RP1=0, select bank0
  2036     079F  0829               	movf	?___lmul+3,w
  2037     07A0  00BA               	movwf	___aldiv@dividend+3
  2038     07A1  0828               	movf	?___lmul+2,w
  2039     07A2  00B9               	movwf	___aldiv@dividend+2
  2040     07A3  0827               	movf	?___lmul+1,w
  2041     07A4  00B8               	movwf	___aldiv@dividend+1
  2042     07A5  0826               	movf	?___lmul,w
  2043     07A6  00B7               	movwf	___aldiv@dividend
  2044     07A7  120A  118A  2317  120A  118A  	fcall	___aldiv
  2045     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2046     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2047     07AE  0844               	movf	mapeo@outmin,w
  2048     07AF  0733               	addwf	?___aldiv,w
  2049     07B0  00CB               	movwf	mapeo@resultado
  2050     07B1  3000               	movlw	0
  2051     07B2  1803               	skipnc
  2052     07B3  3001               	movlw	1
  2053     07B4  0734               	addwf	?___aldiv+1,w
  2054     07B5  00CC               	movwf	mapeo@resultado+1
  2055     07B6                     l2070:
  2056                           
  2057                           ;conversiones.c: 113:     return resultado;
  2058     07B6  084C               	movf	mapeo@resultado+1,w
  2059     07B7  00C3               	movwf	?_mapeo+1
  2060     07B8  084B               	movf	mapeo@resultado,w
  2061     07B9  00C2               	movwf	?_mapeo
  2062     07BA                     l268:
  2063     07BA  0008               	return
  2064     07BB                     __end_of_mapeo:
  2065                           
  2066                           	psect	text3
  2067     072C                     __ptext3:	
  2068 ;; *************** function ___lmul *****************
  2069 ;; Defined at:
  2070 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  multiplier      4    6[BANK0 ] unsigned long 
  2073 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  product         4   15[BANK0 ] unsigned long 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  4    6[BANK0 ] unsigned long 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       8       0       0       0
  2086 ;;      Locals:         0       4       0       0       0
  2087 ;;      Temps:          0       1       0       0       0
  2088 ;;      Totals:         0      13       0       0       0
  2089 ;;Total ram usage:       13 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 2
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_mapeo
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099     072C                     ___lmul:	
  2100                           ;psect for function ___lmul
  2101                           
  2102     072C                     l1726:	
  2103                           ;incstack = 0
  2104                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2105                           
  2106     072C  3000               	movlw	0
  2107     072D  1283               	bcf	3,5	;RP0=0, select bank0
  2108     072E  1303               	bcf	3,6	;RP1=0, select bank0
  2109     072F  00B2               	movwf	___lmul@product+3
  2110     0730  3000               	movlw	0
  2111     0731  00B1               	movwf	___lmul@product+2
  2112     0732  3000               	movlw	0
  2113     0733  00B0               	movwf	___lmul@product+1
  2114     0734  3000               	movlw	0
  2115     0735  00AF               	movwf	___lmul@product
  2116     0736                     l1728:
  2117     0736  1C26               	btfss	___lmul@multiplier,0
  2118     0737  2F39               	goto	u1421
  2119     0738  2F3A               	goto	u1420
  2120     0739                     u1421:
  2121     0739  2F51               	goto	l1732
  2122     073A                     u1420:
  2123     073A                     l1730:
  2124     073A  082A               	movf	___lmul@multiplicand,w
  2125     073B  07AF               	addwf	___lmul@product,f
  2126     073C  082B               	movf	___lmul@multiplicand+1,w
  2127     073D  1103               	clrz
  2128     073E  1803               	skipnc
  2129     073F  3E01               	addlw	1
  2130     0740  1903               	skipnz
  2131     0741  2F43               	goto	u1431
  2132     0742  07B0               	addwf	___lmul@product+1,f
  2133     0743                     u1431:
  2134     0743  082C               	movf	___lmul@multiplicand+2,w
  2135     0744  1103               	clrz
  2136     0745  1803               	skipnc
  2137     0746  3E01               	addlw	1
  2138     0747  1903               	skipnz
  2139     0748  2F4A               	goto	u1432
  2140     0749  07B1               	addwf	___lmul@product+2,f
  2141     074A                     u1432:
  2142     074A  082D               	movf	___lmul@multiplicand+3,w
  2143     074B  1103               	clrz
  2144     074C  1803               	skipnc
  2145     074D  3E01               	addlw	1
  2146     074E  1903               	skipnz
  2147     074F  2F51               	goto	u1433
  2148     0750  07B2               	addwf	___lmul@product+3,f
  2149     0751                     u1433:
  2150     0751                     l1732:
  2151     0751  3001               	movlw	1
  2152     0752  00AE               	movwf	??___lmul
  2153     0753                     u1445:
  2154     0753  1003               	clrc
  2155     0754  0DAA               	rlf	___lmul@multiplicand,f
  2156     0755  0DAB               	rlf	___lmul@multiplicand+1,f
  2157     0756  0DAC               	rlf	___lmul@multiplicand+2,f
  2158     0757  0DAD               	rlf	___lmul@multiplicand+3,f
  2159     0758  0BAE               	decfsz	??___lmul,f
  2160     0759  2F53               	goto	u1445
  2161     075A                     l1734:
  2162     075A  3001               	movlw	1
  2163     075B                     u1455:
  2164     075B  1003               	clrc
  2165     075C  0CA9               	rrf	___lmul@multiplier+3,f
  2166     075D  0CA8               	rrf	___lmul@multiplier+2,f
  2167     075E  0CA7               	rrf	___lmul@multiplier+1,f
  2168     075F  0CA6               	rrf	___lmul@multiplier,f
  2169     0760  3EFF               	addlw	-1
  2170     0761  1D03               	skipz
  2171     0762  2F5B               	goto	u1455
  2172     0763  0829               	movf	___lmul@multiplier+3,w
  2173     0764  0428               	iorwf	___lmul@multiplier+2,w
  2174     0765  0427               	iorwf	___lmul@multiplier+1,w
  2175     0766  0426               	iorwf	___lmul@multiplier,w
  2176     0767  1D03               	skipz
  2177     0768  2F6A               	goto	u1461
  2178     0769  2F6B               	goto	u1460
  2179     076A                     u1461:
  2180     076A  2F36               	goto	l1728
  2181     076B                     u1460:
  2182     076B                     l1736:
  2183     076B  0832               	movf	___lmul@product+3,w
  2184     076C  00A9               	movwf	?___lmul+3
  2185     076D  0831               	movf	___lmul@product+2,w
  2186     076E  00A8               	movwf	?___lmul+2
  2187     076F  0830               	movf	___lmul@product+1,w
  2188     0770  00A7               	movwf	?___lmul+1
  2189     0771  082F               	movf	___lmul@product,w
  2190     0772  00A6               	movwf	?___lmul
  2191     0773                     l416:
  2192     0773  0008               	return
  2193     0774                     __end_of___lmul:
  2194                           
  2195                           	psect	text4
  2196     0317                     __ptext4:	
  2197 ;; *************** function ___aldiv *****************
  2198 ;; Defined at:
  2199 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  divisor         4   19[BANK0 ] long 
  2202 ;;  dividend        4   23[BANK0 ] long 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  quotient        4   30[BANK0 ] long 
  2205 ;;  sign            1   29[BANK0 ] unsigned char 
  2206 ;;  counter         1   28[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  4   19[BANK0 ] long 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       8       0       0       0
  2217 ;;      Locals:         0       6       0       0       0
  2218 ;;      Temps:          0       1       0       0       0
  2219 ;;      Totals:         0      15       0       0       0
  2220 ;;Total ram usage:       15 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 2
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_mapeo
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230     0317                     ___aldiv:	
  2231                           ;psect for function ___aldiv
  2232                           
  2233     0317                     l1740:	
  2234                           ;incstack = 0
  2235                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2236                           
  2237     0317  1283               	bcf	3,5	;RP0=0, select bank0
  2238     0318  1303               	bcf	3,6	;RP1=0, select bank0
  2239     0319  01BD               	clrf	___aldiv@sign
  2240     031A                     l1742:
  2241     031A  1FB6               	btfss	___aldiv@divisor+3,7
  2242     031B  2B1D               	goto	u1471
  2243     031C  2B1E               	goto	u1470
  2244     031D                     u1471:
  2245     031D  2B2B               	goto	l467
  2246     031E                     u1470:
  2247     031E                     l1744:
  2248     031E  09B3               	comf	___aldiv@divisor,f
  2249     031F  09B4               	comf	___aldiv@divisor+1,f
  2250     0320  09B5               	comf	___aldiv@divisor+2,f
  2251     0321  09B6               	comf	___aldiv@divisor+3,f
  2252     0322  0AB3               	incf	___aldiv@divisor,f
  2253     0323  1903               	skipnz
  2254     0324  0AB4               	incf	___aldiv@divisor+1,f
  2255     0325  1903               	skipnz
  2256     0326  0AB5               	incf	___aldiv@divisor+2,f
  2257     0327  1903               	skipnz
  2258     0328  0AB6               	incf	___aldiv@divisor+3,f
  2259     0329  01BD               	clrf	___aldiv@sign
  2260     032A  0ABD               	incf	___aldiv@sign,f
  2261     032B                     l467:
  2262     032B  1FBA               	btfss	___aldiv@dividend+3,7
  2263     032C  2B2E               	goto	u1481
  2264     032D  2B2F               	goto	u1480
  2265     032E                     u1481:
  2266     032E  2B3E               	goto	l1750
  2267     032F                     u1480:
  2268     032F                     l1746:
  2269     032F  09B7               	comf	___aldiv@dividend,f
  2270     0330  09B8               	comf	___aldiv@dividend+1,f
  2271     0331  09B9               	comf	___aldiv@dividend+2,f
  2272     0332  09BA               	comf	___aldiv@dividend+3,f
  2273     0333  0AB7               	incf	___aldiv@dividend,f
  2274     0334  1903               	skipnz
  2275     0335  0AB8               	incf	___aldiv@dividend+1,f
  2276     0336  1903               	skipnz
  2277     0337  0AB9               	incf	___aldiv@dividend+2,f
  2278     0338  1903               	skipnz
  2279     0339  0ABA               	incf	___aldiv@dividend+3,f
  2280     033A                     l1748:
  2281     033A  3001               	movlw	1
  2282     033B  00BB               	movwf	??___aldiv
  2283     033C  083B               	movf	??___aldiv,w
  2284     033D  06BD               	xorwf	___aldiv@sign,f
  2285     033E                     l1750:
  2286     033E  3000               	movlw	0
  2287     033F  00C1               	movwf	___aldiv@quotient+3
  2288     0340  3000               	movlw	0
  2289     0341  00C0               	movwf	___aldiv@quotient+2
  2290     0342  3000               	movlw	0
  2291     0343  00BF               	movwf	___aldiv@quotient+1
  2292     0344  3000               	movlw	0
  2293     0345  00BE               	movwf	___aldiv@quotient
  2294     0346                     l1752:
  2295     0346  0836               	movf	___aldiv@divisor+3,w
  2296     0347  0435               	iorwf	___aldiv@divisor+2,w
  2297     0348  0434               	iorwf	___aldiv@divisor+1,w
  2298     0349  0433               	iorwf	___aldiv@divisor,w
  2299     034A  1903               	skipnz
  2300     034B  2B4D               	goto	u1491
  2301     034C  2B4E               	goto	u1490
  2302     034D                     u1491:
  2303     034D  2B9B               	goto	l1772
  2304     034E                     u1490:
  2305     034E                     l1754:
  2306     034E  01BC               	clrf	___aldiv@counter
  2307     034F  0ABC               	incf	___aldiv@counter,f
  2308     0350  2B5E               	goto	l1758
  2309     0351                     l1756:
  2310     0351  3001               	movlw	1
  2311     0352  00BB               	movwf	??___aldiv
  2312     0353                     u1505:
  2313     0353  1003               	clrc
  2314     0354  0DB3               	rlf	___aldiv@divisor,f
  2315     0355  0DB4               	rlf	___aldiv@divisor+1,f
  2316     0356  0DB5               	rlf	___aldiv@divisor+2,f
  2317     0357  0DB6               	rlf	___aldiv@divisor+3,f
  2318     0358  0BBB               	decfsz	??___aldiv,f
  2319     0359  2B53               	goto	u1505
  2320     035A  3001               	movlw	1
  2321     035B  00BB               	movwf	??___aldiv
  2322     035C  083B               	movf	??___aldiv,w
  2323     035D  07BC               	addwf	___aldiv@counter,f
  2324     035E                     l1758:
  2325     035E  1FB6               	btfss	___aldiv@divisor+3,7
  2326     035F  2B61               	goto	u1511
  2327     0360  2B62               	goto	u1510
  2328     0361                     u1511:
  2329     0361  2B51               	goto	l1756
  2330     0362                     u1510:
  2331     0362                     l1760:
  2332     0362  3001               	movlw	1
  2333     0363  00BB               	movwf	??___aldiv
  2334     0364                     u1525:
  2335     0364  1003               	clrc
  2336     0365  0DBE               	rlf	___aldiv@quotient,f
  2337     0366  0DBF               	rlf	___aldiv@quotient+1,f
  2338     0367  0DC0               	rlf	___aldiv@quotient+2,f
  2339     0368  0DC1               	rlf	___aldiv@quotient+3,f
  2340     0369  0BBB               	decfsz	??___aldiv,f
  2341     036A  2B64               	goto	u1525
  2342     036B                     l1762:
  2343     036B  0836               	movf	___aldiv@divisor+3,w
  2344     036C  023A               	subwf	___aldiv@dividend+3,w
  2345     036D  1D03               	skipz
  2346     036E  2B79               	goto	u1535
  2347     036F  0835               	movf	___aldiv@divisor+2,w
  2348     0370  0239               	subwf	___aldiv@dividend+2,w
  2349     0371  1D03               	skipz
  2350     0372  2B79               	goto	u1535
  2351     0373  0834               	movf	___aldiv@divisor+1,w
  2352     0374  0238               	subwf	___aldiv@dividend+1,w
  2353     0375  1D03               	skipz
  2354     0376  2B79               	goto	u1535
  2355     0377  0833               	movf	___aldiv@divisor,w
  2356     0378  0237               	subwf	___aldiv@dividend,w
  2357     0379                     u1535:
  2358     0379  1C03               	skipc
  2359     037A  2B7C               	goto	u1531
  2360     037B  2B7D               	goto	u1530
  2361     037C                     u1531:
  2362     037C  2B8C               	goto	l1768
  2363     037D                     u1530:
  2364     037D                     l1764:
  2365     037D  0833               	movf	___aldiv@divisor,w
  2366     037E  02B7               	subwf	___aldiv@dividend,f
  2367     037F  0834               	movf	___aldiv@divisor+1,w
  2368     0380  1C03               	skipc
  2369     0381  0F34               	incfsz	___aldiv@divisor+1,w
  2370     0382  02B8               	subwf	___aldiv@dividend+1,f
  2371     0383  0835               	movf	___aldiv@divisor+2,w
  2372     0384  1C03               	skipc
  2373     0385  0F35               	incfsz	___aldiv@divisor+2,w
  2374     0386  02B9               	subwf	___aldiv@dividend+2,f
  2375     0387  0836               	movf	___aldiv@divisor+3,w
  2376     0388  1C03               	skipc
  2377     0389  0F36               	incfsz	___aldiv@divisor+3,w
  2378     038A  02BA               	subwf	___aldiv@dividend+3,f
  2379     038B                     l1766:
  2380     038B  143E               	bsf	___aldiv@quotient,0
  2381     038C                     l1768:
  2382     038C  3001               	movlw	1
  2383     038D                     u1545:
  2384     038D  1003               	clrc
  2385     038E  0CB6               	rrf	___aldiv@divisor+3,f
  2386     038F  0CB5               	rrf	___aldiv@divisor+2,f
  2387     0390  0CB4               	rrf	___aldiv@divisor+1,f
  2388     0391  0CB3               	rrf	___aldiv@divisor,f
  2389     0392  3EFF               	addlw	-1
  2390     0393  1D03               	skipz
  2391     0394  2B8D               	goto	u1545
  2392     0395                     l1770:
  2393     0395  3001               	movlw	1
  2394     0396  02BC               	subwf	___aldiv@counter,f
  2395     0397  1D03               	btfss	3,2
  2396     0398  2B9A               	goto	u1551
  2397     0399  2B9B               	goto	u1550
  2398     039A                     u1551:
  2399     039A  2B62               	goto	l1760
  2400     039B                     u1550:
  2401     039B                     l1772:
  2402     039B  083D               	movf	___aldiv@sign,w
  2403     039C  1903               	btfsc	3,2
  2404     039D  2B9F               	goto	u1561
  2405     039E  2BA0               	goto	u1560
  2406     039F                     u1561:
  2407     039F  2BAB               	goto	l1776
  2408     03A0                     u1560:
  2409     03A0                     l1774:
  2410     03A0  09BE               	comf	___aldiv@quotient,f
  2411     03A1  09BF               	comf	___aldiv@quotient+1,f
  2412     03A2  09C0               	comf	___aldiv@quotient+2,f
  2413     03A3  09C1               	comf	___aldiv@quotient+3,f
  2414     03A4  0ABE               	incf	___aldiv@quotient,f
  2415     03A5  1903               	skipnz
  2416     03A6  0ABF               	incf	___aldiv@quotient+1,f
  2417     03A7  1903               	skipnz
  2418     03A8  0AC0               	incf	___aldiv@quotient+2,f
  2419     03A9  1903               	skipnz
  2420     03AA  0AC1               	incf	___aldiv@quotient+3,f
  2421     03AB                     l1776:
  2422     03AB  0841               	movf	___aldiv@quotient+3,w
  2423     03AC  00B6               	movwf	?___aldiv+3
  2424     03AD  0840               	movf	___aldiv@quotient+2,w
  2425     03AE  00B5               	movwf	?___aldiv+2
  2426     03AF  083F               	movf	___aldiv@quotient+1,w
  2427     03B0  00B4               	movwf	?___aldiv+1
  2428     03B1  083E               	movf	___aldiv@quotient,w
  2429     03B2  00B3               	movwf	?___aldiv
  2430     03B3                     l477:
  2431     03B3  0008               	return
  2432     03B4                     __end_of___aldiv:
  2433                           
  2434                           	psect	text5
  2435     06DA                     __ptext5:	
  2436 ;; *************** function _inttochar *****************
  2437 ;; Defined at:
  2438 ;;		line 12 in file "conversiones.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  num             1    wreg     unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  num             1    6[BANK0 ] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      unsigned char 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2452 ;;      Params:         0       0       0       0       0
  2453 ;;      Locals:         0       1       0       0       0
  2454 ;;      Temps:          0       0       0       0       0
  2455 ;;      Totals:         0       1       0       0       0
  2456 ;;Total ram usage:        1 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 2
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     06DA                     _inttochar:	
  2467                           ;psect for function _inttochar
  2468                           
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2472                           ;inttochar@num stored from wreg
  2473     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  2474     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  2475     06DC  00A6               	movwf	inttochar@num
  2476     06DD                     l2098:
  2477                           
  2478                           ;conversiones.c: 13:     if(num == 0){
  2479     06DD  0826               	movf	inttochar@num,w
  2480     06DE  1D03               	btfss	3,2
  2481     06DF  2EE1               	goto	u2161
  2482     06E0  2EE2               	goto	u2160
  2483     06E1                     u2161:
  2484     06E1  2EE4               	goto	l2106
  2485     06E2                     u2160:
  2486     06E2                     l2100:
  2487                           
  2488                           ;conversiones.c: 14:         return '0';
  2489     06E2  3030               	movlw	48
  2490     06E3  2F2B               	goto	l214
  2491     06E4                     l2106:
  2492     06E4  0326               	decf	inttochar@num,w
  2493     06E5  1D03               	btfss	3,2
  2494     06E6  2EE8               	goto	u2171
  2495     06E7  2EE9               	goto	u2170
  2496     06E8                     u2171:
  2497     06E8  2EEB               	goto	l2114
  2498     06E9                     u2170:
  2499     06E9                     l2108:
  2500                           
  2501                           ;conversiones.c: 17:         return '1';
  2502     06E9  3031               	movlw	49
  2503     06EA  2F2B               	goto	l214
  2504     06EB                     l2114:
  2505     06EB  3002               	movlw	2
  2506     06EC  0626               	xorwf	inttochar@num,w
  2507     06ED  1D03               	btfss	3,2
  2508     06EE  2EF0               	goto	u2181
  2509     06EF  2EF1               	goto	u2180
  2510     06F0                     u2181:
  2511     06F0  2EF3               	goto	l2122
  2512     06F1                     u2180:
  2513     06F1                     l2116:
  2514                           
  2515                           ;conversiones.c: 20:         return '2';
  2516     06F1  3032               	movlw	50
  2517     06F2  2F2B               	goto	l214
  2518     06F3                     l2122:
  2519     06F3  3003               	movlw	3
  2520     06F4  0626               	xorwf	inttochar@num,w
  2521     06F5  1D03               	btfss	3,2
  2522     06F6  2EF8               	goto	u2191
  2523     06F7  2EF9               	goto	u2190
  2524     06F8                     u2191:
  2525     06F8  2EFB               	goto	l2130
  2526     06F9                     u2190:
  2527     06F9                     l2124:
  2528                           
  2529                           ;conversiones.c: 23:         return '3';
  2530     06F9  3033               	movlw	51
  2531     06FA  2F2B               	goto	l214
  2532     06FB                     l2130:
  2533     06FB  3004               	movlw	4
  2534     06FC  0626               	xorwf	inttochar@num,w
  2535     06FD  1D03               	btfss	3,2
  2536     06FE  2F00               	goto	u2201
  2537     06FF  2F01               	goto	u2200
  2538     0700                     u2201:
  2539     0700  2F03               	goto	l2138
  2540     0701                     u2200:
  2541     0701                     l2132:
  2542                           
  2543                           ;conversiones.c: 26:         return '4';
  2544     0701  3034               	movlw	52
  2545     0702  2F2B               	goto	l214
  2546     0703                     l2138:
  2547     0703  3005               	movlw	5
  2548     0704  0626               	xorwf	inttochar@num,w
  2549     0705  1D03               	btfss	3,2
  2550     0706  2F08               	goto	u2211
  2551     0707  2F09               	goto	u2210
  2552     0708                     u2211:
  2553     0708  2F0B               	goto	l2146
  2554     0709                     u2210:
  2555     0709                     l2140:
  2556                           
  2557                           ;conversiones.c: 29:         return '5';
  2558     0709  3035               	movlw	53
  2559     070A  2F2B               	goto	l214
  2560     070B                     l2146:
  2561     070B  3006               	movlw	6
  2562     070C  0626               	xorwf	inttochar@num,w
  2563     070D  1D03               	btfss	3,2
  2564     070E  2F10               	goto	u2221
  2565     070F  2F11               	goto	u2220
  2566     0710                     u2221:
  2567     0710  2F13               	goto	l2154
  2568     0711                     u2220:
  2569     0711                     l2148:
  2570                           
  2571                           ;conversiones.c: 32:         return '6';
  2572     0711  3036               	movlw	54
  2573     0712  2F2B               	goto	l214
  2574     0713                     l2154:
  2575     0713  3007               	movlw	7
  2576     0714  0626               	xorwf	inttochar@num,w
  2577     0715  1D03               	btfss	3,2
  2578     0716  2F18               	goto	u2231
  2579     0717  2F19               	goto	u2230
  2580     0718                     u2231:
  2581     0718  2F1B               	goto	l2162
  2582     0719                     u2230:
  2583     0719                     l2156:
  2584                           
  2585                           ;conversiones.c: 35:         return '7';
  2586     0719  3037               	movlw	55
  2587     071A  2F2B               	goto	l214
  2588     071B                     l2162:
  2589     071B  3008               	movlw	8
  2590     071C  0626               	xorwf	inttochar@num,w
  2591     071D  1D03               	btfss	3,2
  2592     071E  2F20               	goto	u2241
  2593     071F  2F21               	goto	u2240
  2594     0720                     u2241:
  2595     0720  2F23               	goto	l2170
  2596     0721                     u2240:
  2597     0721                     l2164:
  2598                           
  2599                           ;conversiones.c: 38:         return '8';
  2600     0721  3038               	movlw	56
  2601     0722  2F2B               	goto	l214
  2602     0723                     l2170:
  2603     0723  3009               	movlw	9
  2604     0724  0626               	xorwf	inttochar@num,w
  2605     0725  1D03               	btfss	3,2
  2606     0726  2F28               	goto	u2251
  2607     0727  2F29               	goto	u2250
  2608     0728                     u2251:
  2609     0728  2F2B               	goto	l227
  2610     0729                     u2250:
  2611     0729                     l2172:
  2612                           
  2613                           ;conversiones.c: 41:         return '9';
  2614     0729  3039               	movlw	57
  2615     072A  2F2B               	goto	l214
  2616     072B                     l227:
  2617     072B                     l214:
  2618     072B  0008               	return
  2619     072C                     __end_of_inttochar:
  2620                           
  2621                           	psect	text6
  2622     0561                     __ptext6:	
  2623 ;; *************** function _descomponer *****************
  2624 ;; Defined at:
  2625 ;;		line 45 in file "conversiones.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  pos             2   15[BANK0 ] int 
  2628 ;;  num             2   17[BANK0 ] unsigned int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  dec             1   23[BANK0 ] unsigned char 
  2631 ;;  uni             1   22[BANK0 ] unsigned char 
  2632 ;;  cent            1   21[BANK0 ] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      unsigned char 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       4       0       0       0
  2643 ;;      Locals:         0       3       0       0       0
  2644 ;;      Temps:          0       2       0       0       0
  2645 ;;      Totals:         0       9       0       0       0
  2646 ;;Total ram usage:        9 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 3
  2649 ;; This function calls:
  2650 ;;		___awdiv
  2651 ;;		___awmod
  2652 ;;		___lwdiv
  2653 ;;		___lwmod
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     0561                     _descomponer:	
  2660                           ;psect for function _descomponer
  2661                           
  2662     0561                     l2074:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2665                           
  2666                           
  2667                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  2668     0561  3064               	movlw	100
  2669     0562  1283               	bcf	3,5	;RP0=0, select bank0
  2670     0563  1303               	bcf	3,6	;RP1=0, select bank0
  2671     0564  00A6               	movwf	___lwdiv@divisor
  2672     0565  3000               	movlw	0
  2673     0566  00A7               	movwf	___lwdiv@divisor+1
  2674     0567  0832               	movf	descomponer@num+1,w
  2675     0568  00A9               	movwf	___lwdiv@dividend+1
  2676     0569  0831               	movf	descomponer@num,w
  2677     056A  00A8               	movwf	___lwdiv@dividend
  2678     056B  120A  158A  27BA  120A  118A  	fcall	___lwdiv
  2679     0570  1283               	bcf	3,5	;RP0=0, select bank0
  2680     0571  1303               	bcf	3,6	;RP1=0, select bank0
  2681     0572  0826               	movf	?___lwdiv,w
  2682     0573  00B5               	movwf	descomponer@cent
  2683                           
  2684                           ;conversiones.c: 50:     dec = (num%100);
  2685     0574  3064               	movlw	100
  2686     0575  00A6               	movwf	___lwmod@divisor
  2687     0576  3000               	movlw	0
  2688     0577  00A7               	movwf	___lwmod@divisor+1
  2689     0578  0832               	movf	descomponer@num+1,w
  2690     0579  00A9               	movwf	___lwmod@dividend+1
  2691     057A  0831               	movf	descomponer@num,w
  2692     057B  00A8               	movwf	___lwmod@dividend
  2693     057C  120A  158A  2740  120A  118A  	fcall	___lwmod
  2694     0581  1283               	bcf	3,5	;RP0=0, select bank0
  2695     0582  1303               	bcf	3,6	;RP1=0, select bank0
  2696     0583  0826               	movf	?___lwmod,w
  2697     0584  00B7               	movwf	descomponer@dec
  2698                           
  2699                           ;conversiones.c: 51:     uni = (dec%10);
  2700     0585  300A               	movlw	10
  2701     0586  00A6               	movwf	___awmod@divisor
  2702     0587  3000               	movlw	0
  2703     0588  00A7               	movwf	___awmod@divisor+1
  2704     0589  0837               	movf	descomponer@dec,w
  2705     058A  00B3               	movwf	??_descomponer
  2706     058B  01B4               	clrf	??_descomponer+1
  2707     058C  0833               	movf	??_descomponer,w
  2708     058D  00A8               	movwf	___awmod@dividend
  2709     058E  0834               	movf	??_descomponer+1,w
  2710     058F  00A9               	movwf	___awmod@dividend+1
  2711     0590  120A  118A  2627  120A  118A  	fcall	___awmod
  2712     0595  1283               	bcf	3,5	;RP0=0, select bank0
  2713     0596  1303               	bcf	3,6	;RP1=0, select bank0
  2714     0597  0826               	movf	?___awmod,w
  2715     0598  00B6               	movwf	descomponer@uni
  2716     0599                     l2076:
  2717                           
  2718                           ;conversiones.c: 52:     if(pos == 2){
  2719     0599  3002               	movlw	2
  2720     059A  062F               	xorwf	descomponer@pos,w
  2721     059B  0430               	iorwf	descomponer@pos+1,w
  2722     059C  1D03               	btfss	3,2
  2723     059D  2D9F               	goto	u2131
  2724     059E  2DA0               	goto	u2130
  2725     059F                     u2131:
  2726     059F  2DA2               	goto	l2084
  2727     05A0                     u2130:
  2728     05A0                     l2078:
  2729                           
  2730                           ;conversiones.c: 53:         return cent;
  2731     05A0  0835               	movf	descomponer@cent,w
  2732     05A1  2DC3               	goto	l236
  2733     05A2                     l2084:
  2734     05A2  032F               	decf	descomponer@pos,w
  2735     05A3  0430               	iorwf	descomponer@pos+1,w
  2736     05A4  1D03               	btfss	3,2
  2737     05A5  2DA7               	goto	u2141
  2738     05A6  2DA8               	goto	u2140
  2739     05A7                     u2141:
  2740     05A7  2DBC               	goto	l2092
  2741     05A8                     u2140:
  2742     05A8                     l2086:
  2743                           
  2744                           ;conversiones.c: 56:         return (dec/10);
  2745     05A8  300A               	movlw	10
  2746     05A9  00A6               	movwf	___awdiv@divisor
  2747     05AA  3000               	movlw	0
  2748     05AB  00A7               	movwf	___awdiv@divisor+1
  2749     05AC  0837               	movf	descomponer@dec,w
  2750     05AD  00B3               	movwf	??_descomponer
  2751     05AE  01B4               	clrf	??_descomponer+1
  2752     05AF  0833               	movf	??_descomponer,w
  2753     05B0  00A8               	movwf	___awdiv@dividend
  2754     05B1  0834               	movf	??_descomponer+1,w
  2755     05B2  00A9               	movwf	___awdiv@dividend+1
  2756     05B3  120A  118A  242C  120A  118A  	fcall	___awdiv
  2757     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2758     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2759     05BA  0826               	movf	?___awdiv,w
  2760     05BB  2DC3               	goto	l236
  2761     05BC                     l2092:
  2762     05BC  082F               	movf	descomponer@pos,w
  2763     05BD  0430               	iorwf	descomponer@pos+1,w
  2764     05BE  1D03               	btfss	3,2
  2765     05BF  2DC1               	goto	u2151
  2766     05C0  2DC2               	goto	u2150
  2767     05C1                     u2151:
  2768     05C1  2DC3               	goto	l236
  2769     05C2                     u2150:
  2770     05C2                     l2094:
  2771                           
  2772                           ;conversiones.c: 59:         return uni;
  2773     05C2  0836               	movf	descomponer@uni,w
  2774     05C3                     l236:
  2775     05C3  0008               	return
  2776     05C4                     __end_of_descomponer:
  2777                           
  2778                           	psect	text7
  2779     0F40                     __ptext7:	
  2780 ;; *************** function ___lwmod *****************
  2781 ;; Defined at:
  2782 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  divisor         2    6[BANK0 ] unsigned int 
  2785 ;;  dividend        2    8[BANK0 ] unsigned int 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  counter         1   11[BANK0 ] unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  2    6[BANK0 ] unsigned int 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2797 ;;      Params:         0       4       0       0       0
  2798 ;;      Locals:         0       1       0       0       0
  2799 ;;      Temps:          0       1       0       0       0
  2800 ;;      Totals:         0       6       0       0       0
  2801 ;;Total ram usage:        6 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; Hardware stack levels required when called: 2
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_descomponer
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811     0F40                     ___lwmod:	
  2812                           ;psect for function ___lwmod
  2813                           
  2814     0F40                     l1888:	
  2815                           ;incstack = 0
  2816                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2817                           
  2818     0F40  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0F41  1303               	bcf	3,6	;RP1=0, select bank0
  2820     0F42  0826               	movf	___lwmod@divisor,w
  2821     0F43  0427               	iorwf	___lwmod@divisor+1,w
  2822     0F44  1903               	btfsc	3,2
  2823     0F45  2F47               	goto	u1831
  2824     0F46  2F48               	goto	u1830
  2825     0F47                     u1831:
  2826     0F47  2F77               	goto	l1906
  2827     0F48                     u1830:
  2828     0F48                     l1890:
  2829     0F48  01AB               	clrf	___lwmod@counter
  2830     0F49  0AAB               	incf	___lwmod@counter,f
  2831     0F4A  2F56               	goto	l1896
  2832     0F4B                     l1892:
  2833     0F4B  3001               	movlw	1
  2834     0F4C                     u1845:
  2835     0F4C  1003               	clrc
  2836     0F4D  0DA6               	rlf	___lwmod@divisor,f
  2837     0F4E  0DA7               	rlf	___lwmod@divisor+1,f
  2838     0F4F  3EFF               	addlw	-1
  2839     0F50  1D03               	skipz
  2840     0F51  2F4C               	goto	u1845
  2841     0F52                     l1894:
  2842     0F52  3001               	movlw	1
  2843     0F53  00AA               	movwf	??___lwmod
  2844     0F54  082A               	movf	??___lwmod,w
  2845     0F55  07AB               	addwf	___lwmod@counter,f
  2846     0F56                     l1896:
  2847     0F56  1FA7               	btfss	___lwmod@divisor+1,7
  2848     0F57  2F59               	goto	u1851
  2849     0F58  2F5A               	goto	u1850
  2850     0F59                     u1851:
  2851     0F59  2F4B               	goto	l1892
  2852     0F5A                     u1850:
  2853     0F5A                     l1898:
  2854     0F5A  0827               	movf	___lwmod@divisor+1,w
  2855     0F5B  0229               	subwf	___lwmod@dividend+1,w
  2856     0F5C  1D03               	skipz
  2857     0F5D  2F60               	goto	u1865
  2858     0F5E  0826               	movf	___lwmod@divisor,w
  2859     0F5F  0228               	subwf	___lwmod@dividend,w
  2860     0F60                     u1865:
  2861     0F60  1C03               	skipc
  2862     0F61  2F63               	goto	u1861
  2863     0F62  2F64               	goto	u1860
  2864     0F63                     u1861:
  2865     0F63  2F6A               	goto	l1902
  2866     0F64                     u1860:
  2867     0F64                     l1900:
  2868     0F64  0826               	movf	___lwmod@divisor,w
  2869     0F65  02A8               	subwf	___lwmod@dividend,f
  2870     0F66  0827               	movf	___lwmod@divisor+1,w
  2871     0F67  1C03               	skipc
  2872     0F68  03A9               	decf	___lwmod@dividend+1,f
  2873     0F69  02A9               	subwf	___lwmod@dividend+1,f
  2874     0F6A                     l1902:
  2875     0F6A  3001               	movlw	1
  2876     0F6B                     u1875:
  2877     0F6B  1003               	clrc
  2878     0F6C  0CA7               	rrf	___lwmod@divisor+1,f
  2879     0F6D  0CA6               	rrf	___lwmod@divisor,f
  2880     0F6E  3EFF               	addlw	-1
  2881     0F6F  1D03               	skipz
  2882     0F70  2F6B               	goto	u1875
  2883     0F71                     l1904:
  2884     0F71  3001               	movlw	1
  2885     0F72  02AB               	subwf	___lwmod@counter,f
  2886     0F73  1D03               	btfss	3,2
  2887     0F74  2F76               	goto	u1881
  2888     0F75  2F77               	goto	u1880
  2889     0F76                     u1881:
  2890     0F76  2F5A               	goto	l1898
  2891     0F77                     u1880:
  2892     0F77                     l1906:
  2893     0F77  0829               	movf	___lwmod@dividend+1,w
  2894     0F78  00A7               	movwf	?___lwmod+1
  2895     0F79  0828               	movf	___lwmod@dividend,w
  2896     0F7A  00A6               	movwf	?___lwmod
  2897     0F7B                     l684:
  2898     0F7B  0008               	return
  2899     0F7C                     __end_of___lwmod:
  2900                           
  2901                           	psect	text8
  2902     0FBA                     __ptext8:	
  2903 ;; *************** function ___lwdiv *****************
  2904 ;; Defined at:
  2905 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  divisor         2    6[BANK0 ] unsigned int 
  2908 ;;  dividend        2    8[BANK0 ] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  quotient        2   11[BANK0 ] unsigned int 
  2911 ;;  counter         1   13[BANK0 ] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2    6[BANK0 ] unsigned int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       4       0       0       0
  2922 ;;      Locals:         0       3       0       0       0
  2923 ;;      Temps:          0       1       0       0       0
  2924 ;;      Totals:         0       8       0       0       0
  2925 ;;Total ram usage:        8 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 2
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_descomponer
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935     0FBA                     ___lwdiv:	
  2936                           ;psect for function ___lwdiv
  2937                           
  2938     0FBA                     l1862:	
  2939                           ;incstack = 0
  2940                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2941                           
  2942     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2943     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2944     0FBC  01AB               	clrf	___lwdiv@quotient
  2945     0FBD  01AC               	clrf	___lwdiv@quotient+1
  2946     0FBE                     l1864:
  2947     0FBE  0826               	movf	___lwdiv@divisor,w
  2948     0FBF  0427               	iorwf	___lwdiv@divisor+1,w
  2949     0FC0  1903               	btfsc	3,2
  2950     0FC1  2FC3               	goto	u1761
  2951     0FC2  2FC4               	goto	u1760
  2952     0FC3                     u1761:
  2953     0FC3  2FFB               	goto	l1884
  2954     0FC4                     u1760:
  2955     0FC4                     l1866:
  2956     0FC4  01AD               	clrf	___lwdiv@counter
  2957     0FC5  0AAD               	incf	___lwdiv@counter,f
  2958     0FC6  2FD2               	goto	l1872
  2959     0FC7                     l1868:
  2960     0FC7  3001               	movlw	1
  2961     0FC8                     u1775:
  2962     0FC8  1003               	clrc
  2963     0FC9  0DA6               	rlf	___lwdiv@divisor,f
  2964     0FCA  0DA7               	rlf	___lwdiv@divisor+1,f
  2965     0FCB  3EFF               	addlw	-1
  2966     0FCC  1D03               	skipz
  2967     0FCD  2FC8               	goto	u1775
  2968     0FCE                     l1870:
  2969     0FCE  3001               	movlw	1
  2970     0FCF  00AA               	movwf	??___lwdiv
  2971     0FD0  082A               	movf	??___lwdiv,w
  2972     0FD1  07AD               	addwf	___lwdiv@counter,f
  2973     0FD2                     l1872:
  2974     0FD2  1FA7               	btfss	___lwdiv@divisor+1,7
  2975     0FD3  2FD5               	goto	u1781
  2976     0FD4  2FD6               	goto	u1780
  2977     0FD5                     u1781:
  2978     0FD5  2FC7               	goto	l1868
  2979     0FD6                     u1780:
  2980     0FD6                     l1874:
  2981     0FD6  3001               	movlw	1
  2982     0FD7                     u1795:
  2983     0FD7  1003               	clrc
  2984     0FD8  0DAB               	rlf	___lwdiv@quotient,f
  2985     0FD9  0DAC               	rlf	___lwdiv@quotient+1,f
  2986     0FDA  3EFF               	addlw	-1
  2987     0FDB  1D03               	skipz
  2988     0FDC  2FD7               	goto	u1795
  2989     0FDD  0827               	movf	___lwdiv@divisor+1,w
  2990     0FDE  0229               	subwf	___lwdiv@dividend+1,w
  2991     0FDF  1D03               	skipz
  2992     0FE0  2FE3               	goto	u1805
  2993     0FE1  0826               	movf	___lwdiv@divisor,w
  2994     0FE2  0228               	subwf	___lwdiv@dividend,w
  2995     0FE3                     u1805:
  2996     0FE3  1C03               	skipc
  2997     0FE4  2FE6               	goto	u1801
  2998     0FE5  2FE7               	goto	u1800
  2999     0FE6                     u1801:
  3000     0FE6  2FEE               	goto	l1880
  3001     0FE7                     u1800:
  3002     0FE7                     l1876:
  3003     0FE7  0826               	movf	___lwdiv@divisor,w
  3004     0FE8  02A8               	subwf	___lwdiv@dividend,f
  3005     0FE9  0827               	movf	___lwdiv@divisor+1,w
  3006     0FEA  1C03               	skipc
  3007     0FEB  03A9               	decf	___lwdiv@dividend+1,f
  3008     0FEC  02A9               	subwf	___lwdiv@dividend+1,f
  3009     0FED                     l1878:
  3010     0FED  142B               	bsf	___lwdiv@quotient,0
  3011     0FEE                     l1880:
  3012     0FEE  3001               	movlw	1
  3013     0FEF                     u1815:
  3014     0FEF  1003               	clrc
  3015     0FF0  0CA7               	rrf	___lwdiv@divisor+1,f
  3016     0FF1  0CA6               	rrf	___lwdiv@divisor,f
  3017     0FF2  3EFF               	addlw	-1
  3018     0FF3  1D03               	skipz
  3019     0FF4  2FEF               	goto	u1815
  3020     0FF5                     l1882:
  3021     0FF5  3001               	movlw	1
  3022     0FF6  02AD               	subwf	___lwdiv@counter,f
  3023     0FF7  1D03               	btfss	3,2
  3024     0FF8  2FFA               	goto	u1821
  3025     0FF9  2FFB               	goto	u1820
  3026     0FFA                     u1821:
  3027     0FFA  2FD6               	goto	l1874
  3028     0FFB                     u1820:
  3029     0FFB                     l1884:
  3030     0FFB  082C               	movf	___lwdiv@quotient+1,w
  3031     0FFC  00A7               	movwf	?___lwdiv+1
  3032     0FFD  082B               	movf	___lwdiv@quotient,w
  3033     0FFE  00A6               	movwf	?___lwdiv
  3034     0FFF                     l674:
  3035     0FFF  0008               	return
  3036     1000                     __end_of___lwdiv:
  3037                           
  3038                           	psect	text9
  3039     0627                     __ptext9:	
  3040 ;; *************** function ___awmod *****************
  3041 ;; Defined at:
  3042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  divisor         2    6[BANK0 ] int 
  3045 ;;  dividend        2    8[BANK0 ] int 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  sign            1   12[BANK0 ] unsigned char 
  3048 ;;  counter         1   11[BANK0 ] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  2    6[BANK0 ] int 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3058 ;;      Params:         0       4       0       0       0
  3059 ;;      Locals:         0       2       0       0       0
  3060 ;;      Temps:          0       1       0       0       0
  3061 ;;      Totals:         0       7       0       0       0
  3062 ;;Total ram usage:        7 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 2
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_descomponer
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072     0627                     ___awmod:	
  3073                           ;psect for function ___awmod
  3074                           
  3075     0627                     l1824:	
  3076                           ;incstack = 0
  3077                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3078                           
  3079     0627  1283               	bcf	3,5	;RP0=0, select bank0
  3080     0628  1303               	bcf	3,6	;RP1=0, select bank0
  3081     0629  01AC               	clrf	___awmod@sign
  3082     062A                     l1826:
  3083     062A  1FA9               	btfss	___awmod@dividend+1,7
  3084     062B  2E2D               	goto	u1671
  3085     062C  2E2E               	goto	u1670
  3086     062D                     u1671:
  3087     062D  2E35               	goto	l1832
  3088     062E                     u1670:
  3089     062E                     l1828:
  3090     062E  09A8               	comf	___awmod@dividend,f
  3091     062F  09A9               	comf	___awmod@dividend+1,f
  3092     0630  0AA8               	incf	___awmod@dividend,f
  3093     0631  1903               	skipnz
  3094     0632  0AA9               	incf	___awmod@dividend+1,f
  3095     0633                     l1830:
  3096     0633  01AC               	clrf	___awmod@sign
  3097     0634  0AAC               	incf	___awmod@sign,f
  3098     0635                     l1832:
  3099     0635  1FA7               	btfss	___awmod@divisor+1,7
  3100     0636  2E38               	goto	u1681
  3101     0637  2E39               	goto	u1680
  3102     0638                     u1681:
  3103     0638  2E3E               	goto	l1836
  3104     0639                     u1680:
  3105     0639                     l1834:
  3106     0639  09A6               	comf	___awmod@divisor,f
  3107     063A  09A7               	comf	___awmod@divisor+1,f
  3108     063B  0AA6               	incf	___awmod@divisor,f
  3109     063C  1903               	skipnz
  3110     063D  0AA7               	incf	___awmod@divisor+1,f
  3111     063E                     l1836:
  3112     063E  0826               	movf	___awmod@divisor,w
  3113     063F  0427               	iorwf	___awmod@divisor+1,w
  3114     0640  1903               	btfsc	3,2
  3115     0641  2E43               	goto	u1691
  3116     0642  2E44               	goto	u1690
  3117     0643                     u1691:
  3118     0643  2E73               	goto	l1854
  3119     0644                     u1690:
  3120     0644                     l1838:
  3121     0644  01AB               	clrf	___awmod@counter
  3122     0645  0AAB               	incf	___awmod@counter,f
  3123     0646  2E52               	goto	l1844
  3124     0647                     l1840:
  3125     0647  3001               	movlw	1
  3126     0648                     u1705:
  3127     0648  1003               	clrc
  3128     0649  0DA6               	rlf	___awmod@divisor,f
  3129     064A  0DA7               	rlf	___awmod@divisor+1,f
  3130     064B  3EFF               	addlw	-1
  3131     064C  1D03               	skipz
  3132     064D  2E48               	goto	u1705
  3133     064E                     l1842:
  3134     064E  3001               	movlw	1
  3135     064F  00AA               	movwf	??___awmod
  3136     0650  082A               	movf	??___awmod,w
  3137     0651  07AB               	addwf	___awmod@counter,f
  3138     0652                     l1844:
  3139     0652  1FA7               	btfss	___awmod@divisor+1,7
  3140     0653  2E55               	goto	u1711
  3141     0654  2E56               	goto	u1710
  3142     0655                     u1711:
  3143     0655  2E47               	goto	l1840
  3144     0656                     u1710:
  3145     0656                     l1846:
  3146     0656  0827               	movf	___awmod@divisor+1,w
  3147     0657  0229               	subwf	___awmod@dividend+1,w
  3148     0658  1D03               	skipz
  3149     0659  2E5C               	goto	u1725
  3150     065A  0826               	movf	___awmod@divisor,w
  3151     065B  0228               	subwf	___awmod@dividend,w
  3152     065C                     u1725:
  3153     065C  1C03               	skipc
  3154     065D  2E5F               	goto	u1721
  3155     065E  2E60               	goto	u1720
  3156     065F                     u1721:
  3157     065F  2E66               	goto	l1850
  3158     0660                     u1720:
  3159     0660                     l1848:
  3160     0660  0826               	movf	___awmod@divisor,w
  3161     0661  02A8               	subwf	___awmod@dividend,f
  3162     0662  0827               	movf	___awmod@divisor+1,w
  3163     0663  1C03               	skipc
  3164     0664  03A9               	decf	___awmod@dividend+1,f
  3165     0665  02A9               	subwf	___awmod@dividend+1,f
  3166     0666                     l1850:
  3167     0666  3001               	movlw	1
  3168     0667                     u1735:
  3169     0667  1003               	clrc
  3170     0668  0CA7               	rrf	___awmod@divisor+1,f
  3171     0669  0CA6               	rrf	___awmod@divisor,f
  3172     066A  3EFF               	addlw	-1
  3173     066B  1D03               	skipz
  3174     066C  2E67               	goto	u1735
  3175     066D                     l1852:
  3176     066D  3001               	movlw	1
  3177     066E  02AB               	subwf	___awmod@counter,f
  3178     066F  1D03               	btfss	3,2
  3179     0670  2E72               	goto	u1741
  3180     0671  2E73               	goto	u1740
  3181     0672                     u1741:
  3182     0672  2E56               	goto	l1846
  3183     0673                     u1740:
  3184     0673                     l1854:
  3185     0673  082C               	movf	___awmod@sign,w
  3186     0674  1903               	btfsc	3,2
  3187     0675  2E77               	goto	u1751
  3188     0676  2E78               	goto	u1750
  3189     0677                     u1751:
  3190     0677  2E7D               	goto	l1858
  3191     0678                     u1750:
  3192     0678                     l1856:
  3193     0678  09A8               	comf	___awmod@dividend,f
  3194     0679  09A9               	comf	___awmod@dividend+1,f
  3195     067A  0AA8               	incf	___awmod@dividend,f
  3196     067B  1903               	skipnz
  3197     067C  0AA9               	incf	___awmod@dividend+1,f
  3198     067D                     l1858:
  3199     067D  0829               	movf	___awmod@dividend+1,w
  3200     067E  00A7               	movwf	?___awmod+1
  3201     067F  0828               	movf	___awmod@dividend,w
  3202     0680  00A6               	movwf	?___awmod
  3203     0681                     l568:
  3204     0681  0008               	return
  3205     0682                     __end_of___awmod:
  3206                           
  3207                           	psect	text10
  3208     042C                     __ptext10:	
  3209 ;; *************** function ___awdiv *****************
  3210 ;; Defined at:
  3211 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  divisor         2    6[BANK0 ] int 
  3214 ;;  dividend        2    8[BANK0 ] int 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  quotient        2   13[BANK0 ] int 
  3217 ;;  sign            1   12[BANK0 ] unsigned char 
  3218 ;;  counter         1   11[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  2    6[BANK0 ] int 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       4       0       0       0
  3229 ;;      Locals:         0       4       0       0       0
  3230 ;;      Temps:          0       1       0       0       0
  3231 ;;      Totals:         0       9       0       0       0
  3232 ;;Total ram usage:        9 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 2
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_descomponer
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242     042C                     ___awdiv:	
  3243                           ;psect for function ___awdiv
  3244                           
  3245     042C                     l1780:	
  3246                           ;incstack = 0
  3247                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3248                           
  3249     042C  1283               	bcf	3,5	;RP0=0, select bank0
  3250     042D  1303               	bcf	3,6	;RP1=0, select bank0
  3251     042E  01AC               	clrf	___awdiv@sign
  3252     042F                     l1782:
  3253     042F  1FA7               	btfss	___awdiv@divisor+1,7
  3254     0430  2C32               	goto	u1571
  3255     0431  2C33               	goto	u1570
  3256     0432                     u1571:
  3257     0432  2C3A               	goto	l1788
  3258     0433                     u1570:
  3259     0433                     l1784:
  3260     0433  09A6               	comf	___awdiv@divisor,f
  3261     0434  09A7               	comf	___awdiv@divisor+1,f
  3262     0435  0AA6               	incf	___awdiv@divisor,f
  3263     0436  1903               	skipnz
  3264     0437  0AA7               	incf	___awdiv@divisor+1,f
  3265     0438                     l1786:
  3266     0438  01AC               	clrf	___awdiv@sign
  3267     0439  0AAC               	incf	___awdiv@sign,f
  3268     043A                     l1788:
  3269     043A  1FA9               	btfss	___awdiv@dividend+1,7
  3270     043B  2C3D               	goto	u1581
  3271     043C  2C3E               	goto	u1580
  3272     043D                     u1581:
  3273     043D  2C47               	goto	l1794
  3274     043E                     u1580:
  3275     043E                     l1790:
  3276     043E  09A8               	comf	___awdiv@dividend,f
  3277     043F  09A9               	comf	___awdiv@dividend+1,f
  3278     0440  0AA8               	incf	___awdiv@dividend,f
  3279     0441  1903               	skipnz
  3280     0442  0AA9               	incf	___awdiv@dividend+1,f
  3281     0443                     l1792:
  3282     0443  3001               	movlw	1
  3283     0444  00AA               	movwf	??___awdiv
  3284     0445  082A               	movf	??___awdiv,w
  3285     0446  06AC               	xorwf	___awdiv@sign,f
  3286     0447                     l1794:
  3287     0447  01AD               	clrf	___awdiv@quotient
  3288     0448  01AE               	clrf	___awdiv@quotient+1
  3289     0449                     l1796:
  3290     0449  0826               	movf	___awdiv@divisor,w
  3291     044A  0427               	iorwf	___awdiv@divisor+1,w
  3292     044B  1903               	btfsc	3,2
  3293     044C  2C4E               	goto	u1591
  3294     044D  2C4F               	goto	u1590
  3295     044E                     u1591:
  3296     044E  2C86               	goto	l1816
  3297     044F                     u1590:
  3298     044F                     l1798:
  3299     044F  01AB               	clrf	___awdiv@counter
  3300     0450  0AAB               	incf	___awdiv@counter,f
  3301     0451  2C5D               	goto	l1804
  3302     0452                     l1800:
  3303     0452  3001               	movlw	1
  3304     0453                     u1605:
  3305     0453  1003               	clrc
  3306     0454  0DA6               	rlf	___awdiv@divisor,f
  3307     0455  0DA7               	rlf	___awdiv@divisor+1,f
  3308     0456  3EFF               	addlw	-1
  3309     0457  1D03               	skipz
  3310     0458  2C53               	goto	u1605
  3311     0459                     l1802:
  3312     0459  3001               	movlw	1
  3313     045A  00AA               	movwf	??___awdiv
  3314     045B  082A               	movf	??___awdiv,w
  3315     045C  07AB               	addwf	___awdiv@counter,f
  3316     045D                     l1804:
  3317     045D  1FA7               	btfss	___awdiv@divisor+1,7
  3318     045E  2C60               	goto	u1611
  3319     045F  2C61               	goto	u1610
  3320     0460                     u1611:
  3321     0460  2C52               	goto	l1800
  3322     0461                     u1610:
  3323     0461                     l1806:
  3324     0461  3001               	movlw	1
  3325     0462                     u1625:
  3326     0462  1003               	clrc
  3327     0463  0DAD               	rlf	___awdiv@quotient,f
  3328     0464  0DAE               	rlf	___awdiv@quotient+1,f
  3329     0465  3EFF               	addlw	-1
  3330     0466  1D03               	skipz
  3331     0467  2C62               	goto	u1625
  3332     0468  0827               	movf	___awdiv@divisor+1,w
  3333     0469  0229               	subwf	___awdiv@dividend+1,w
  3334     046A  1D03               	skipz
  3335     046B  2C6E               	goto	u1635
  3336     046C  0826               	movf	___awdiv@divisor,w
  3337     046D  0228               	subwf	___awdiv@dividend,w
  3338     046E                     u1635:
  3339     046E  1C03               	skipc
  3340     046F  2C71               	goto	u1631
  3341     0470  2C72               	goto	u1630
  3342     0471                     u1631:
  3343     0471  2C79               	goto	l1812
  3344     0472                     u1630:
  3345     0472                     l1808:
  3346     0472  0826               	movf	___awdiv@divisor,w
  3347     0473  02A8               	subwf	___awdiv@dividend,f
  3348     0474  0827               	movf	___awdiv@divisor+1,w
  3349     0475  1C03               	skipc
  3350     0476  03A9               	decf	___awdiv@dividend+1,f
  3351     0477  02A9               	subwf	___awdiv@dividend+1,f
  3352     0478                     l1810:
  3353     0478  142D               	bsf	___awdiv@quotient,0
  3354     0479                     l1812:
  3355     0479  3001               	movlw	1
  3356     047A                     u1645:
  3357     047A  1003               	clrc
  3358     047B  0CA7               	rrf	___awdiv@divisor+1,f
  3359     047C  0CA6               	rrf	___awdiv@divisor,f
  3360     047D  3EFF               	addlw	-1
  3361     047E  1D03               	skipz
  3362     047F  2C7A               	goto	u1645
  3363     0480                     l1814:
  3364     0480  3001               	movlw	1
  3365     0481  02AB               	subwf	___awdiv@counter,f
  3366     0482  1D03               	btfss	3,2
  3367     0483  2C85               	goto	u1651
  3368     0484  2C86               	goto	u1650
  3369     0485                     u1651:
  3370     0485  2C61               	goto	l1806
  3371     0486                     u1650:
  3372     0486                     l1816:
  3373     0486  082C               	movf	___awdiv@sign,w
  3374     0487  1903               	btfsc	3,2
  3375     0488  2C8A               	goto	u1661
  3376     0489  2C8B               	goto	u1660
  3377     048A                     u1661:
  3378     048A  2C90               	goto	l1820
  3379     048B                     u1660:
  3380     048B                     l1818:
  3381     048B  09AD               	comf	___awdiv@quotient,f
  3382     048C  09AE               	comf	___awdiv@quotient+1,f
  3383     048D  0AAD               	incf	___awdiv@quotient,f
  3384     048E  1903               	skipnz
  3385     048F  0AAE               	incf	___awdiv@quotient+1,f
  3386     0490                     l1820:
  3387     0490  082E               	movf	___awdiv@quotient+1,w
  3388     0491  00A7               	movwf	?___awdiv+1
  3389     0492  082D               	movf	___awdiv@quotient,w
  3390     0493  00A6               	movwf	?___awdiv
  3391     0494                     l555:
  3392     0494  0008               	return
  3393     0495                     __end_of___awdiv:
  3394                           
  3395                           	psect	text11
  3396     0E84                     __ptext11:	
  3397 ;; *************** function _configpuertos *****************
  3398 ;; Defined at:
  3399 ;;		line 9 in file "confpuertos.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 2
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427     0E84                     _configpuertos:	
  3428                           ;psect for function _configpuertos
  3429                           
  3430     0E84                     l1934:	
  3431                           ;incstack = 0
  3432                           ; Regs used in _configpuertos: [wreg+status,2]
  3433                           
  3434                           
  3435                           ;confpuertos.c: 11:     TRISB = 0b11000000;
  3436     0E84  30C0               	movlw	192
  3437     0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3438     0E86  1303               	bcf	3,6	;RP1=0, select bank1
  3439     0E87  0086               	movwf	6	;volatile
  3440                           
  3441                           ;confpuertos.c: 12:     PORTB = 0b11000000;
  3442     0E88  30C0               	movlw	192
  3443     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  3444     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  3445     0E8B  0086               	movwf	6	;volatile
  3446     0E8C                     l1936:
  3447                           
  3448                           ;confpuertos.c: 13:     INTCONbits.GIE = 1;
  3449     0E8C  178B               	bsf	11,7	;volatile
  3450     0E8D                     l1938:
  3451                           
  3452                           ;confpuertos.c: 14:     ANSELH = 0;
  3453     0E8D  1683               	bsf	3,5	;RP0=1, select bank3
  3454     0E8E  1703               	bsf	3,6	;RP1=1, select bank3
  3455     0E8F  0189               	clrf	9	;volatile
  3456     0E90                     l1940:
  3457                           
  3458                           ;confpuertos.c: 18:     TRISD = 0;
  3459     0E90  1683               	bsf	3,5	;RP0=1, select bank1
  3460     0E91  1303               	bcf	3,6	;RP1=0, select bank1
  3461     0E92  0188               	clrf	8	;volatile
  3462     0E93                     l1942:
  3463                           
  3464                           ;confpuertos.c: 19:     PORTD = 0;
  3465     0E93  1283               	bcf	3,5	;RP0=0, select bank0
  3466     0E94  1303               	bcf	3,6	;RP1=0, select bank0
  3467     0E95  0188               	clrf	8	;volatile
  3468     0E96                     l1944:
  3469                           
  3470                           ;confpuertos.c: 20:     TRISC = 0b10000000;
  3471     0E96  3080               	movlw	128
  3472     0E97  1683               	bsf	3,5	;RP0=1, select bank1
  3473     0E98  1303               	bcf	3,6	;RP1=0, select bank1
  3474     0E99  0087               	movwf	7	;volatile
  3475                           
  3476                           ;confpuertos.c: 21:     PORTC = 0;
  3477     0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3478     0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  3479     0E9C  0187               	clrf	7	;volatile
  3480     0E9D                     l210:
  3481     0E9D  0008               	return
  3482     0E9E                     __end_of_configpuertos:
  3483                           
  3484                           	psect	text12
  3485     03B4                     __ptext12:	
  3486 ;; *************** function ___fltol *****************
  3487 ;; Defined at:
  3488 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  f1              4    6[BANK0 ] void 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  exp1            1   15[BANK0 ] unsigned char 
  3493 ;;  sign1           1   14[BANK0 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  4    6[BANK0 ] long 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       4       0       0       0
  3504 ;;      Locals:         0       2       0       0       0
  3505 ;;      Temps:          0       4       0       0       0
  3506 ;;      Totals:         0      10       0       0       0
  3507 ;;Total ram usage:       10 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 2
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517     03B4                     ___fltol:	
  3518                           ;psect for function ___fltol
  3519                           
  3520     03B4                     l2176:	
  3521                           ;incstack = 0
  3522                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3523                           
  3524     03B4  1003               	clrc
  3525     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3526     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3527     03B7  0D28               	rlf	___fltol@f1+2,w
  3528     03B8  0D29               	rlf	___fltol@f1+3,w
  3529     03B9  00AF               	movwf	___fltol@exp1
  3530     03BA  082F               	movf	___fltol@exp1,w
  3531     03BB  1D03               	btfss	3,2
  3532     03BC  2BBE               	goto	u2261
  3533     03BD  2BBF               	goto	u2260
  3534     03BE                     u2261:
  3535     03BE  2BC8               	goto	l2182
  3536     03BF                     u2260:
  3537     03BF                     l2178:
  3538     03BF  3000               	movlw	0
  3539     03C0  00A9               	movwf	?___fltol+3
  3540     03C1  3000               	movlw	0
  3541     03C2  00A8               	movwf	?___fltol+2
  3542     03C3  3000               	movlw	0
  3543     03C4  00A7               	movwf	?___fltol+1
  3544     03C5  3000               	movlw	0
  3545     03C6  00A6               	movwf	?___fltol
  3546     03C7  2C2B               	goto	l588
  3547     03C8                     l2182:
  3548     03C8  0826               	movf	___fltol@f1,w
  3549     03C9  00AA               	movwf	??___fltol
  3550     03CA  0827               	movf	___fltol@f1+1,w
  3551     03CB  00AB               	movwf	??___fltol+1
  3552     03CC  0828               	movf	___fltol@f1+2,w
  3553     03CD  00AC               	movwf	??___fltol+2
  3554     03CE  0829               	movf	___fltol@f1+3,w
  3555     03CF  00AD               	movwf	??___fltol+3
  3556     03D0  301F               	movlw	31
  3557     03D1                     u2275:
  3558     03D1  1003               	clrc
  3559     03D2  0CAD               	rrf	??___fltol+3,f
  3560     03D3  0CAC               	rrf	??___fltol+2,f
  3561     03D4  0CAB               	rrf	??___fltol+1,f
  3562     03D5  0CAA               	rrf	??___fltol,f
  3563     03D6                     u2270:
  3564     03D6  3EFF               	addlw	-1
  3565     03D7  1D03               	skipz
  3566     03D8  2BD1               	goto	u2275
  3567     03D9  082A               	movf	??___fltol,w
  3568     03DA  00AE               	movwf	___fltol@sign1
  3569     03DB                     l2184:
  3570     03DB  17A8               	bsf	___fltol@f1+2,7
  3571     03DC                     l2186:
  3572     03DC  30FF               	movlw	255
  3573     03DD  05A6               	andwf	___fltol@f1,f
  3574     03DE  30FF               	movlw	255
  3575     03DF  05A7               	andwf	___fltol@f1+1,f
  3576     03E0  30FF               	movlw	255
  3577     03E1  05A8               	andwf	___fltol@f1+2,f
  3578     03E2  3000               	movlw	0
  3579     03E3  05A9               	andwf	___fltol@f1+3,f
  3580     03E4                     l2188:
  3581     03E4  3096               	movlw	150
  3582     03E5  02AF               	subwf	___fltol@exp1,f
  3583     03E6                     l2190:
  3584     03E6  1FAF               	btfss	___fltol@exp1,7
  3585     03E7  2BE9               	goto	u2281
  3586     03E8  2BEA               	goto	u2280
  3587     03E9                     u2281:
  3588     03E9  2C04               	goto	l2200
  3589     03EA                     u2280:
  3590     03EA                     l2192:
  3591     03EA  082F               	movf	___fltol@exp1,w
  3592     03EB  3A80               	xorlw	128
  3593     03EC  3E97               	addlw	151
  3594     03ED  1803               	skipnc
  3595     03EE  2BF0               	goto	u2291
  3596     03EF  2BF1               	goto	u2290
  3597     03F0                     u2291:
  3598     03F0  2BF2               	goto	l2198
  3599     03F1                     u2290:
  3600     03F1  2BBF               	goto	l2178
  3601     03F2                     l2198:
  3602     03F2  3001               	movlw	1
  3603     03F3                     u2305:
  3604     03F3  1003               	clrc
  3605     03F4  0CA9               	rrf	___fltol@f1+3,f
  3606     03F5  0CA8               	rrf	___fltol@f1+2,f
  3607     03F6  0CA7               	rrf	___fltol@f1+1,f
  3608     03F7  0CA6               	rrf	___fltol@f1,f
  3609     03F8  3EFF               	addlw	-1
  3610     03F9  1D03               	skipz
  3611     03FA  2BF3               	goto	u2305
  3612     03FB  3001               	movlw	1
  3613     03FC  00AA               	movwf	??___fltol
  3614     03FD  082A               	movf	??___fltol,w
  3615     03FE  07AF               	addwf	___fltol@exp1,f
  3616     03FF  1D03               	btfss	3,2
  3617     0400  2C02               	goto	u2311
  3618     0401  2C03               	goto	u2310
  3619     0402                     u2311:
  3620     0402  2BF2               	goto	l2198
  3621     0403                     u2310:
  3622     0403  2C1B               	goto	l2208
  3623     0404                     l2200:
  3624     0404  3020               	movlw	32
  3625     0405  022F               	subwf	___fltol@exp1,w
  3626     0406  1C03               	skipc
  3627     0407  2C09               	goto	u2321
  3628     0408  2C0A               	goto	u2320
  3629     0409                     u2321:
  3630     0409  2C16               	goto	l595
  3631     040A                     u2320:
  3632     040A  2BBF               	goto	l2178
  3633     040B                     l2206:
  3634     040B  3001               	movlw	1
  3635     040C  00AA               	movwf	??___fltol
  3636     040D                     u2335:
  3637     040D  1003               	clrc
  3638     040E  0DA6               	rlf	___fltol@f1,f
  3639     040F  0DA7               	rlf	___fltol@f1+1,f
  3640     0410  0DA8               	rlf	___fltol@f1+2,f
  3641     0411  0DA9               	rlf	___fltol@f1+3,f
  3642     0412  0BAA               	decfsz	??___fltol,f
  3643     0413  2C0D               	goto	u2335
  3644     0414  3001               	movlw	1
  3645     0415  02AF               	subwf	___fltol@exp1,f
  3646     0416                     l595:
  3647     0416  082F               	movf	___fltol@exp1,w
  3648     0417  1D03               	btfss	3,2
  3649     0418  2C1A               	goto	u2341
  3650     0419  2C1B               	goto	u2340
  3651     041A                     u2341:
  3652     041A  2C0B               	goto	l2206
  3653     041B                     u2340:
  3654     041B                     l2208:
  3655     041B  082E               	movf	___fltol@sign1,w
  3656     041C  1903               	btfsc	3,2
  3657     041D  2C1F               	goto	u2351
  3658     041E  2C20               	goto	u2350
  3659     041F                     u2351:
  3660     041F  2C2B               	goto	l598
  3661     0420                     u2350:
  3662     0420                     l2210:
  3663     0420  09A6               	comf	___fltol@f1,f
  3664     0421  09A7               	comf	___fltol@f1+1,f
  3665     0422  09A8               	comf	___fltol@f1+2,f
  3666     0423  09A9               	comf	___fltol@f1+3,f
  3667     0424  0AA6               	incf	___fltol@f1,f
  3668     0425  1903               	skipnz
  3669     0426  0AA7               	incf	___fltol@f1+1,f
  3670     0427  1903               	skipnz
  3671     0428  0AA8               	incf	___fltol@f1+2,f
  3672     0429  1903               	skipnz
  3673     042A  0AA9               	incf	___fltol@f1+3,f
  3674     042B                     l598:
  3675     042B                     l588:
  3676     042B  0008               	return
  3677     042C                     __end_of___fltol:
  3678                           
  3679                           	psect	text13
  3680     0682                     __ptext13:	
  3681 ;; *************** function _UART_mode_config *****************
  3682 ;; Defined at:
  3683 ;;		line 10 in file "setupUART.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  mode            1    wreg     unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  mode            1    6[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       1       0       0       0
  3699 ;;      Temps:          0       0       0       0       0
  3700 ;;      Totals:         0       1       0       0       0
  3701 ;;Total ram usage:        1 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 2
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711     0682                     _UART_mode_config:	
  3712                           ;psect for function _UART_mode_config
  3713                           
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in _UART_mode_config: [wreg+status,2+status,0]
  3717                           ;UART_mode_config@mode stored from wreg
  3718     0682  1283               	bcf	3,5	;RP0=0, select bank0
  3719     0683  1303               	bcf	3,6	;RP1=0, select bank0
  3720     0684  00A6               	movwf	UART_mode_config@mode
  3721     0685                     l1956:
  3722                           
  3723                           ;setupUART.c: 12:     if(mode == 0){
  3724     0685  0826               	movf	UART_mode_config@mode,w
  3725     0686  1D03               	btfss	3,2
  3726     0687  2E89               	goto	u2001
  3727     0688  2E8A               	goto	u2000
  3728     0689                     u2001:
  3729     0689  2E92               	goto	l1960
  3730     068A                     u2000:
  3731     068A                     l1958:
  3732                           
  3733                           ;setupUART.c: 13:         BAUDCTLbits.BRG16 = 0;
  3734     068A  1683               	bsf	3,5	;RP0=1, select bank3
  3735     068B  1703               	bsf	3,6	;RP1=1, select bank3
  3736     068C  1187               	bcf	7,3	;volatile
  3737                           
  3738                           ;setupUART.c: 14:         TXSTAbits.BRGH = 0;
  3739     068D  1683               	bsf	3,5	;RP0=1, select bank1
  3740     068E  1303               	bcf	3,6	;RP1=0, select bank1
  3741     068F  1118               	bcf	24,2	;volatile
  3742                           
  3743                           ;setupUART.c: 15:         TXSTAbits.SYNC = 0;
  3744     0690  1218               	bcf	24,4	;volatile
  3745                           
  3746                           ;setupUART.c: 16:     }
  3747     0691  2ED7               	goto	l292
  3748     0692                     l1960:
  3749     0692  0326               	decf	UART_mode_config@mode,w
  3750     0693  1D03               	btfss	3,2
  3751     0694  2E96               	goto	u2011
  3752     0695  2E97               	goto	u2010
  3753     0696                     u2011:
  3754     0696  2E9F               	goto	l1964
  3755     0697                     u2010:
  3756     0697                     l1962:
  3757                           
  3758                           ;setupUART.c: 18:         BAUDCTLbits.BRG16 = 0;
  3759     0697  1683               	bsf	3,5	;RP0=1, select bank3
  3760     0698  1703               	bsf	3,6	;RP1=1, select bank3
  3761     0699  1187               	bcf	7,3	;volatile
  3762                           
  3763                           ;setupUART.c: 19:         TXSTAbits.BRGH = 1;
  3764     069A  1683               	bsf	3,5	;RP0=1, select bank1
  3765     069B  1303               	bcf	3,6	;RP1=0, select bank1
  3766     069C  1518               	bsf	24,2	;volatile
  3767                           
  3768                           ;setupUART.c: 20:         TXSTAbits.SYNC = 0;
  3769     069D  1218               	bcf	24,4	;volatile
  3770                           
  3771                           ;setupUART.c: 21:     }
  3772     069E  2ED7               	goto	l292
  3773     069F                     l1964:
  3774     069F  3002               	movlw	2
  3775     06A0  0626               	xorwf	UART_mode_config@mode,w
  3776     06A1  1D03               	btfss	3,2
  3777     06A2  2EA4               	goto	u2021
  3778     06A3  2EA5               	goto	u2020
  3779     06A4                     u2021:
  3780     06A4  2EAD               	goto	l1968
  3781     06A5                     u2020:
  3782     06A5                     l1966:
  3783                           
  3784                           ;setupUART.c: 23:         BAUDCTLbits.BRG16 = 1;
  3785     06A5  1683               	bsf	3,5	;RP0=1, select bank3
  3786     06A6  1703               	bsf	3,6	;RP1=1, select bank3
  3787     06A7  1587               	bsf	7,3	;volatile
  3788                           
  3789                           ;setupUART.c: 24:         TXSTAbits.BRGH = 0;
  3790     06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3791     06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3792     06AA  1118               	bcf	24,2	;volatile
  3793                           
  3794                           ;setupUART.c: 25:         TXSTAbits.SYNC = 0;
  3795     06AB  1218               	bcf	24,4	;volatile
  3796                           
  3797                           ;setupUART.c: 26:     }
  3798     06AC  2ED7               	goto	l292
  3799     06AD                     l1968:
  3800     06AD  3003               	movlw	3
  3801     06AE  0626               	xorwf	UART_mode_config@mode,w
  3802     06AF  1D03               	btfss	3,2
  3803     06B0  2EB2               	goto	u2031
  3804     06B1  2EB3               	goto	u2030
  3805     06B2                     u2031:
  3806     06B2  2EBB               	goto	l1972
  3807     06B3                     u2030:
  3808     06B3                     l1970:
  3809                           
  3810                           ;setupUART.c: 28:         BAUDCTLbits.BRG16 = 1;
  3811     06B3  1683               	bsf	3,5	;RP0=1, select bank3
  3812     06B4  1703               	bsf	3,6	;RP1=1, select bank3
  3813     06B5  1587               	bsf	7,3	;volatile
  3814                           
  3815                           ;setupUART.c: 29:         TXSTAbits.BRGH = 1;
  3816     06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3817     06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3818     06B8  1518               	bsf	24,2	;volatile
  3819                           
  3820                           ;setupUART.c: 30:         TXSTAbits.SYNC = 0;
  3821     06B9  1218               	bcf	24,4	;volatile
  3822                           
  3823                           ;setupUART.c: 31:     }
  3824     06BA  2ED7               	goto	l292
  3825     06BB                     l1972:
  3826     06BB  3004               	movlw	4
  3827     06BC  0626               	xorwf	UART_mode_config@mode,w
  3828     06BD  1D03               	btfss	3,2
  3829     06BE  2EC0               	goto	u2041
  3830     06BF  2EC1               	goto	u2040
  3831     06C0                     u2041:
  3832     06C0  2EC9               	goto	l1976
  3833     06C1                     u2040:
  3834     06C1                     l1974:
  3835                           
  3836                           ;setupUART.c: 33:         BAUDCTLbits.BRG16 = 0;
  3837     06C1  1683               	bsf	3,5	;RP0=1, select bank3
  3838     06C2  1703               	bsf	3,6	;RP1=1, select bank3
  3839     06C3  1187               	bcf	7,3	;volatile
  3840                           
  3841                           ;setupUART.c: 34:         TXSTAbits.BRGH = 1;
  3842     06C4  1683               	bsf	3,5	;RP0=1, select bank1
  3843     06C5  1303               	bcf	3,6	;RP1=0, select bank1
  3844     06C6  1518               	bsf	24,2	;volatile
  3845                           
  3846                           ;setupUART.c: 35:         TXSTAbits.SYNC = 1;
  3847     06C7  1618               	bsf	24,4	;volatile
  3848                           
  3849                           ;setupUART.c: 36:     }
  3850     06C8  2ED7               	goto	l292
  3851     06C9                     l1976:
  3852     06C9  3005               	movlw	5
  3853     06CA  0626               	xorwf	UART_mode_config@mode,w
  3854     06CB  1D03               	btfss	3,2
  3855     06CC  2ECE               	goto	u2051
  3856     06CD  2ECF               	goto	u2050
  3857     06CE                     u2051:
  3858     06CE  2ED7               	goto	l296
  3859     06CF                     u2050:
  3860     06CF                     l1978:
  3861                           
  3862                           ;setupUART.c: 38:         BAUDCTLbits.BRG16 = 1;
  3863     06CF  1683               	bsf	3,5	;RP0=1, select bank3
  3864     06D0  1703               	bsf	3,6	;RP1=1, select bank3
  3865     06D1  1587               	bsf	7,3	;volatile
  3866                           
  3867                           ;setupUART.c: 39:         TXSTAbits.BRGH = 0;
  3868     06D2  1683               	bsf	3,5	;RP0=1, select bank1
  3869     06D3  1303               	bcf	3,6	;RP1=0, select bank1
  3870     06D4  1118               	bcf	24,2	;volatile
  3871                           
  3872                           ;setupUART.c: 40:         TXSTAbits.SYNC = 1;
  3873     06D5  1618               	bsf	24,4	;volatile
  3874     06D6  2ED7               	goto	l292
  3875     06D7                     l296:
  3876     06D7                     l292:
  3877                           
  3878                           ;setupUART.c: 43:     RCSTAbits.SPEN = 1;
  3879     06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3880     06D8  1798               	bsf	24,7	;volatile
  3881     06D9                     l302:
  3882     06D9  0008               	return
  3883     06DA                     __end_of_UART_mode_config:
  3884                           
  3885                           	psect	text14
  3886     0E9E                     __ptext14:	
  3887 ;; *************** function _UART_RX_config *****************
  3888 ;; Defined at:
  3889 ;;		line 47 in file "setupUART.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  baudrate        2    6[BANK0 ] unsigned int 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       2       0       0       0
  3904 ;;      Locals:         0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0
  3906 ;;      Totals:         0       2       0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 2
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917     0E9E                     _UART_RX_config:	
  3918                           ;psect for function _UART_RX_config
  3919                           
  3920     0E9E                     l1980:	
  3921                           ;incstack = 0
  3922                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0]
  3923                           
  3924                           
  3925                           ;setupUART.c: 48:     if (baudrate == 9600){
  3926     0E9E  3080               	movlw	128
  3927     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  3928     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  3929     0EA1  0626               	xorwf	UART_RX_config@baudrate,w
  3930     0EA2  3025               	movlw	37
  3931     0EA3  1903               	skipnz
  3932     0EA4  0627               	xorwf	UART_RX_config@baudrate+1,w
  3933     0EA5  1D03               	btfss	3,2
  3934     0EA6  2EA8               	goto	u2061
  3935     0EA7  2EA9               	goto	u2060
  3936     0EA8                     u2061:
  3937     0EA8  2EAE               	goto	l1986
  3938     0EA9                     u2060:
  3939     0EA9                     l1982:
  3940                           
  3941                           ;setupUART.c: 49:         SPBRG = 25;
  3942     0EA9  3019               	movlw	25
  3943     0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3944     0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  3945     0EAC  0099               	movwf	25	;volatile
  3946     0EAD                     l1984:
  3947                           
  3948                           ;setupUART.c: 50:         SPBRGH = 0;
  3949     0EAD  019A               	clrf	26	;volatile
  3950     0EAE                     l1986:
  3951                           
  3952                           ;setupUART.c: 52:     RCSTAbits.CREN = 1;
  3953     0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  3954     0EAF  1618               	bsf	24,4	;volatile
  3955     0EB0                     l1988:
  3956                           
  3957                           ;setupUART.c: 53:     PIE1bits.RCIE = 1;
  3958     0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  3959     0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  3960     0EB2  168C               	bsf	12,5	;volatile
  3961     0EB3                     l1990:
  3962                           
  3963                           ;setupUART.c: 54:     PIR1bits.RCIF = 0;
  3964     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3965     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3966     0EB5  128C               	bcf	12,5	;volatile
  3967     0EB6                     l1992:
  3968                           
  3969                           ;setupUART.c: 55:     INTCONbits.PEIE = 1;
  3970     0EB6  170B               	bsf	11,6	;volatile
  3971     0EB7                     l1994:
  3972                           
  3973                           ;setupUART.c: 56:     INTCONbits.GIE = 1;
  3974     0EB7  178B               	bsf	11,7	;volatile
  3975     0EB8                     l306:
  3976     0EB8  0008               	return
  3977     0EB9                     __end_of_UART_RX_config:
  3978                           
  3979                           	psect	text15
  3980     0EDB                     __ptext15:	
  3981 ;; *************** function _Lcd_Write_String *****************
  3982 ;; Defined at:
  3983 ;;		line 117 in file "LCD.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  a               1    wreg     PTR unsigned char 
  3986 ;;		 -> STR_1(16), 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  a               1   11[BANK0 ] PTR unsigned char 
  3989 ;;		 -> STR_1(16), 
  3990 ;;  i               2    9[BANK0 ] int 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4000 ;;      Params:         0       0       0       0       0
  4001 ;;      Locals:         0       3       0       0       0
  4002 ;;      Temps:          0       0       0       0       0
  4003 ;;      Totals:         0       3       0       0       0
  4004 ;;Total ram usage:        3 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 4
  4007 ;; This function calls:
  4008 ;;		_Lcd_Write_Char
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014     0EDB                     _Lcd_Write_String:	
  4015                           ;psect for function _Lcd_Write_String
  4016                           
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4020                           ;Lcd_Write_String@a stored from wreg
  4021     0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4022     0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  4023     0EDD  00AB               	movwf	Lcd_Write_String@a
  4024     0EDE                     l2036:
  4025                           
  4026                           ;LCD.c: 118:     int i;;LCD.c: 119:     for (i = 0; a[i] != '\0'; i++)
  4027     0EDE  01A9               	clrf	Lcd_Write_String@i
  4028     0EDF  01AA               	clrf	Lcd_Write_String@i+1
  4029     0EE0  2EF6               	goto	l2042
  4030     0EE1                     l2038:
  4031                           
  4032                           ;LCD.c: 120:         Lcd_Write_Char(a[i]);
  4033     0EE1  0829               	movf	Lcd_Write_String@i,w
  4034     0EE2  072B               	addwf	Lcd_Write_String@a,w
  4035     0EE3  0084               	movwf	4
  4036     0EE4  120A  158A  2000  120A  158A  	fcall	stringdir
  4037     0EE9  120A  158A  2653  120A  158A  	fcall	_Lcd_Write_Char
  4038     0EEE                     l2040:
  4039     0EEE  3001               	movlw	1
  4040     0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  4041     0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  4042     0EF1  07A9               	addwf	Lcd_Write_String@i,f
  4043     0EF2  1803               	skipnc
  4044     0EF3  0AAA               	incf	Lcd_Write_String@i+1,f
  4045     0EF4  3000               	movlw	0
  4046     0EF5  07AA               	addwf	Lcd_Write_String@i+1,f
  4047     0EF6                     l2042:
  4048     0EF6  0829               	movf	Lcd_Write_String@i,w
  4049     0EF7  072B               	addwf	Lcd_Write_String@a,w
  4050     0EF8  0084               	movwf	4
  4051     0EF9  120A  158A  2000  120A  158A  	fcall	stringdir
  4052     0EFE  3A00               	xorlw	0
  4053     0EFF  1D03               	skipz
  4054     0F00  2F02               	goto	u2091
  4055     0F01  2F03               	goto	u2090
  4056     0F02                     u2091:
  4057     0F02  2EE1               	goto	l2038
  4058     0F03                     u2090:
  4059     0F03                     l185:
  4060     0F03  0008               	return
  4061     0F04                     __end_of_Lcd_Write_String:
  4062                           
  4063                           	psect	text16
  4064     0E53                     __ptext16:	
  4065 ;; *************** function _Lcd_Write_Char *****************
  4066 ;; Defined at:
  4067 ;;		line 106 in file "LCD.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  a               1    wreg     unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  a               1    8[BANK0 ] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, pclath, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4081 ;;      Params:         0       0       0       0       0
  4082 ;;      Locals:         0       1       0       0       0
  4083 ;;      Temps:          0       1       0       0       0
  4084 ;;      Totals:         0       2       0       0       0
  4085 ;;Total ram usage:        2 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 3
  4088 ;; This function calls:
  4089 ;;		_Lcd_Port
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;;		_Lcd_Write_String
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096     0E53                     _Lcd_Write_Char:	
  4097                           ;psect for function _Lcd_Write_Char
  4098                           
  4099                           
  4100                           ;incstack = 0
  4101                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4102                           ;Lcd_Write_Char@a stored from wreg
  4103     0E53  1283               	bcf	3,5	;RP0=0, select bank0
  4104     0E54  1303               	bcf	3,6	;RP1=0, select bank0
  4105     0E55  00A8               	movwf	Lcd_Write_Char@a
  4106     0E56                     l1706:
  4107                           
  4108                           ;LCD.c: 110:     PORTBbits.RB0 = 1;
  4109     0E56  1406               	bsf	6,0	;volatile
  4110     0E57                     l1708:
  4111                           
  4112                           ;LCD.c: 111:     Lcd_Port(a);
  4113     0E57  0828               	movf	Lcd_Write_Char@a,w
  4114     0E58  120A  158A  2704  120A  158A  	fcall	_Lcd_Port
  4115     0E5D                     l1710:
  4116                           
  4117                           ;LCD.c: 112:     RB1 = 1;
  4118     0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  4119     0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  4120     0E5F  1486               	bsf	6,1	;volatile
  4121     0E60                     l1712:
  4122                           
  4123                           ;LCD.c: 113:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  4124     0E60  3002               	movlw	2
  4125     0E61  1283               	bcf	3,5	;RP0=0, select bank0
  4126     0E62  1303               	bcf	3,6	;RP1=0, select bank0
  4127     0E63  00A7               	movwf	??_Lcd_Write_Char
  4128     0E64                     u2567:
  4129     0E64  0BA7               	decfsz	??_Lcd_Write_Char,f
  4130     0E65  2E64               	goto	u2567
  4131     0E66  0000               	nop
  4132     0E67                     l1714:
  4133                           
  4134                           ;LCD.c: 114:     RB1 = 0;
  4135     0E67  1283               	bcf	3,5	;RP0=0, select bank0
  4136     0E68  1303               	bcf	3,6	;RP1=0, select bank0
  4137     0E69  1086               	bcf	6,1	;volatile
  4138     0E6A                     l179:
  4139     0E6A  0008               	return
  4140     0E6B                     __end_of_Lcd_Write_Char:
  4141                           
  4142                           	psect	text17
  4143     0EB9                     __ptext17:	
  4144 ;; *************** function _Lcd_Set_Cursor *****************
  4145 ;; Defined at:
  4146 ;;		line 67 in file "LCD.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  a               1    wreg     unsigned char 
  4149 ;;  b               1    9[BANK0 ] unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  a               1   10[BANK0 ] unsigned char 
  4152 ;;  temp            1   11[BANK0 ] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, pclath, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4162 ;;      Params:         0       1       0       0       0
  4163 ;;      Locals:         0       2       0       0       0
  4164 ;;      Temps:          0       0       0       0       0
  4165 ;;      Totals:         0       3       0       0       0
  4166 ;;Total ram usage:        3 bytes
  4167 ;; Hardware stack levels used: 1
  4168 ;; Hardware stack levels required when called: 4
  4169 ;; This function calls:
  4170 ;;		_Lcd_Cmd
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176     0EB9                     _Lcd_Set_Cursor:	
  4177                           ;psect for function _Lcd_Set_Cursor
  4178                           
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4182                           ;Lcd_Set_Cursor@a stored from wreg
  4183     0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  4184     0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  4185     0EBB  00AA               	movwf	Lcd_Set_Cursor@a
  4186     0EBC                     l2024:
  4187                           
  4188                           ;LCD.c: 68:     char temp;;LCD.c: 69:     if (a == 1) {
  4189     0EBC  032A               	decf	Lcd_Set_Cursor@a,w
  4190     0EBD  1D03               	btfss	3,2
  4191     0EBE  2EC0               	goto	u2071
  4192     0EBF  2EC1               	goto	u2070
  4193     0EC0                     u2071:
  4194     0EC0  2ECB               	goto	l2030
  4195     0EC1                     u2070:
  4196     0EC1                     l2026:
  4197                           
  4198                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  4199     0EC1  0829               	movf	Lcd_Set_Cursor@b,w
  4200     0EC2  3E7F               	addlw	127
  4201     0EC3  00AB               	movwf	Lcd_Set_Cursor@temp
  4202     0EC4                     l2028:
  4203                           
  4204                           ;LCD.c: 75:         Lcd_Cmd(temp);
  4205     0EC4  082B               	movf	Lcd_Set_Cursor@temp,w
  4206     0EC5  120A  158A  266B  120A  158A  	fcall	_Lcd_Cmd
  4207                           
  4208                           ;LCD.c: 76:     } else if (a == 2) {
  4209     0ECA  2EDA               	goto	l173
  4210     0ECB                     l2030:
  4211     0ECB  3002               	movlw	2
  4212     0ECC  062A               	xorwf	Lcd_Set_Cursor@a,w
  4213     0ECD  1D03               	btfss	3,2
  4214     0ECE  2ED0               	goto	u2081
  4215     0ECF  2ED1               	goto	u2080
  4216     0ED0                     u2081:
  4217     0ED0  2EDA               	goto	l173
  4218     0ED1                     u2080:
  4219     0ED1                     l2032:
  4220                           
  4221                           ;LCD.c: 77:         temp = 0xC0 + b - 1;
  4222     0ED1  0829               	movf	Lcd_Set_Cursor@b,w
  4223     0ED2  3EBF               	addlw	191
  4224     0ED3  00AB               	movwf	Lcd_Set_Cursor@temp
  4225     0ED4                     l2034:
  4226                           
  4227                           ;LCD.c: 82:         Lcd_Cmd(temp);
  4228     0ED4  082B               	movf	Lcd_Set_Cursor@temp,w
  4229     0ED5  120A  158A  266B  120A  158A  	fcall	_Lcd_Cmd
  4230     0EDA                     l173:
  4231     0EDA  0008               	return
  4232     0EDB                     __end_of_Lcd_Set_Cursor:
  4233                           
  4234                           	psect	text18
  4235     04FD                     __ptext18:	
  4236 ;; *************** function _Lcd_Init *****************
  4237 ;; Defined at:
  4238 ;;		line 86 in file "LCD.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0
  4254 ;;      Temps:          0       2       0       0       0
  4255 ;;      Totals:         0       2       0       0       0
  4256 ;;Total ram usage:        2 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 4
  4259 ;; This function calls:
  4260 ;;		_Lcd_Cmd
  4261 ;;		_Lcd_Port
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267     04FD                     _Lcd_Init:	
  4268                           ;psect for function _Lcd_Init
  4269                           
  4270     04FD                     l1996:	
  4271                           ;incstack = 0
  4272                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4273                           
  4274                           
  4275                           ;LCD.c: 87:     Lcd_Port(0x00);
  4276     04FD  3000               	movlw	0
  4277     04FE  120A  158A  2704  120A  118A  	fcall	_Lcd_Port
  4278     0503                     l1998:
  4279                           
  4280                           ;LCD.c: 88:     _delay((unsigned long)((110)*(1000000/4000.0)));
  4281     0503  3024               	movlw	36
  4282     0504  1283               	bcf	3,5	;RP0=0, select bank0
  4283     0505  1303               	bcf	3,6	;RP1=0, select bank0
  4284     0506  00AA               	movwf	??_Lcd_Init+1
  4285     0507  30B5               	movlw	181
  4286     0508  00A9               	movwf	??_Lcd_Init
  4287     0509                     u2577:
  4288     0509  0BA9               	decfsz	??_Lcd_Init,f
  4289     050A  2D09               	goto	u2577
  4290     050B  0BAA               	decfsz	??_Lcd_Init+1,f
  4291     050C  2D09               	goto	u2577
  4292     050D                     l2000:
  4293                           
  4294                           ;LCD.c: 89:     Lcd_Cmd(0x30);
  4295     050D  3030               	movlw	48
  4296     050E  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4297                           
  4298                           ;LCD.c: 90:     _delay((unsigned long)((5)*(1000000/4000.0)));
  4299     0513  30F9               	movlw	249
  4300     0514  1283               	bcf	3,5	;RP0=0, select bank0
  4301     0515  1303               	bcf	3,6	;RP1=0, select bank0
  4302     0516  00A9               	movwf	??_Lcd_Init
  4303     0517                     u2587:
  4304     0517  2D18               	nop2
  4305     0518  0BA9               	decfsz	??_Lcd_Init,f
  4306     0519  2D17               	goto	u2587
  4307     051A  2D1B               	nop2
  4308     051B                     l2002:
  4309                           
  4310                           ;LCD.c: 91:     Lcd_Cmd(0x30);
  4311     051B  3030               	movlw	48
  4312     051C  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4313     0521                     l2004:
  4314                           
  4315                           ;LCD.c: 92:     _delay((unsigned long)((20)*(1000000/4000000.0)));
  4316     0521  2D22               	nop2	;2 cycle nop
  4317     0522  2D23               	nop2	;2 cycle nop
  4318     0523  0000               	nop
  4319     0524                     l2006:
  4320                           
  4321                           ;LCD.c: 93:     Lcd_Cmd(0x30);
  4322     0524  3030               	movlw	48
  4323     0525  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4324     052A                     l2008:
  4325                           
  4326                           ;LCD.c: 94:     _delay((unsigned long)((20)*(1000000/4000000.0)));
  4327     052A  2D2B               	nop2	;2 cycle nop
  4328     052B  2D2C               	nop2	;2 cycle nop
  4329     052C  0000               	nop
  4330     052D                     l2010:
  4331                           
  4332                           ;LCD.c: 96:     Lcd_Cmd(0x38);
  4333     052D  3038               	movlw	56
  4334     052E  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4335     0533                     l2012:
  4336                           
  4337                           ;LCD.c: 97:     _delay((unsigned long)((55)*(1000000/4000000.0)));
  4338     0533  3003               	movlw	3
  4339     0534  1283               	bcf	3,5	;RP0=0, select bank0
  4340     0535  1303               	bcf	3,6	;RP1=0, select bank0
  4341     0536  00A9               	movwf	??_Lcd_Init
  4342     0537                     u2597:
  4343     0537  0BA9               	decfsz	??_Lcd_Init,f
  4344     0538  2D37               	goto	u2597
  4345     0539  0000               	nop
  4346                           
  4347                           ;LCD.c: 98:     Lcd_Cmd(0x08);
  4348     053A  3008               	movlw	8
  4349     053B  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4350     0540                     l2014:
  4351                           
  4352                           ;LCD.c: 99:     _delay((unsigned long)((55)*(1000000/4000000.0)));
  4353     0540  3003               	movlw	3
  4354     0541  1283               	bcf	3,5	;RP0=0, select bank0
  4355     0542  1303               	bcf	3,6	;RP1=0, select bank0
  4356     0543  00A9               	movwf	??_Lcd_Init
  4357     0544                     u2607:
  4358     0544  0BA9               	decfsz	??_Lcd_Init,f
  4359     0545  2D44               	goto	u2607
  4360     0546  0000               	nop
  4361     0547                     l2016:
  4362                           
  4363                           ;LCD.c: 100:     Lcd_Cmd(0x01);
  4364     0547  3001               	movlw	1
  4365     0548  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4366                           
  4367                           ;LCD.c: 101:     _delay((unsigned long)((55)*(1000000/4000000.0)));
  4368     054D  3003               	movlw	3
  4369     054E  1283               	bcf	3,5	;RP0=0, select bank0
  4370     054F  1303               	bcf	3,6	;RP1=0, select bank0
  4371     0550  00A9               	movwf	??_Lcd_Init
  4372     0551                     u2617:
  4373     0551  0BA9               	decfsz	??_Lcd_Init,f
  4374     0552  2D51               	goto	u2617
  4375     0553  0000               	nop
  4376     0554                     l2018:
  4377                           
  4378                           ;LCD.c: 102:     Lcd_Cmd(0x06);
  4379     0554  3006               	movlw	6
  4380     0555  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4381     055A                     l2020:
  4382                           
  4383                           ;LCD.c: 103:     Lcd_Cmd(0x0C);
  4384     055A  300C               	movlw	12
  4385     055B  120A  158A  266B  120A  118A  	fcall	_Lcd_Cmd
  4386     0560                     l176:
  4387     0560  0008               	return
  4388     0561                     __end_of_Lcd_Init:
  4389                           
  4390                           	psect	text19
  4391     0E4C                     __ptext19:	
  4392 ;; *************** function _Lcd_Clear *****************
  4393 ;; Defined at:
  4394 ;;		line 63 in file "LCD.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4408 ;;      Params:         0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0
  4411 ;;      Totals:         0       0       0       0       0
  4412 ;;Total ram usage:        0 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 4
  4415 ;; This function calls:
  4416 ;;		_Lcd_Cmd
  4417 ;; This function is called by:
  4418 ;;		_main
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422     0E4C                     _Lcd_Clear:	
  4423                           ;psect for function _Lcd_Clear
  4424                           
  4425     0E4C                     l2022:	
  4426                           ;incstack = 0
  4427                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4428                           
  4429                           
  4430                           ;LCD.c: 64:     Lcd_Cmd(0x01);
  4431     0E4C  3001               	movlw	1
  4432     0E4D  120A  158A  266B  120A  158A  	fcall	_Lcd_Cmd
  4433     0E52                     l167:
  4434     0E52  0008               	return
  4435     0E53                     __end_of_Lcd_Clear:
  4436                           
  4437                           	psect	text20
  4438     0E6B                     __ptext20:	
  4439 ;; *************** function _Lcd_Cmd *****************
  4440 ;; Defined at:
  4441 ;;		line 55 in file "LCD.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  a               1    wreg     unsigned char 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  a               1    8[BANK0 ] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0, pclath, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4455 ;;      Params:         0       0       0       0       0
  4456 ;;      Locals:         0       1       0       0       0
  4457 ;;      Temps:          0       1       0       0       0
  4458 ;;      Totals:         0       2       0       0       0
  4459 ;;Total ram usage:        2 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; Hardware stack levels required when called: 3
  4462 ;; This function calls:
  4463 ;;		_Lcd_Port
  4464 ;; This function is called by:
  4465 ;;		_Lcd_Clear
  4466 ;;		_Lcd_Set_Cursor
  4467 ;;		_Lcd_Init
  4468 ;;		_Lcd_Shift_Right
  4469 ;;		_Lcd_Shift_Left
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473     0E6B                     _Lcd_Cmd:	
  4474                           ;psect for function _Lcd_Cmd
  4475                           
  4476                           
  4477                           ;incstack = 0
  4478                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4479                           ;Lcd_Cmd@a stored from wreg
  4480     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  4481     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  4482     0E6D  00A8               	movwf	Lcd_Cmd@a
  4483     0E6E                     l1716:
  4484                           
  4485                           ;LCD.c: 56:     PORTBbits.RB0 = 0;
  4486     0E6E  1006               	bcf	6,0	;volatile
  4487     0E6F                     l1718:
  4488                           
  4489                           ;LCD.c: 57:     Lcd_Port(a);
  4490     0E6F  0828               	movf	Lcd_Cmd@a,w
  4491     0E70  120A  158A  2704  120A  158A  	fcall	_Lcd_Port
  4492     0E75                     l1720:
  4493                           
  4494                           ;LCD.c: 58:     RB1 = 1;
  4495     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4496     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  4497     0E77  1486               	bsf	6,1	;volatile
  4498     0E78                     l1722:
  4499                           
  4500                           ;LCD.c: 59:     _delay((unsigned long)((4)*(1000000/4000.0)));
  4501     0E78  30C7               	movlw	199
  4502     0E79  1283               	bcf	3,5	;RP0=0, select bank0
  4503     0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  4504     0E7B  00A7               	movwf	??_Lcd_Cmd
  4505     0E7C                     u2627:
  4506     0E7C  2E7D               	nop2
  4507     0E7D  0BA7               	decfsz	??_Lcd_Cmd,f
  4508     0E7E  2E7C               	goto	u2627
  4509     0E7F  2E80               	nop2
  4510     0E80                     l1724:
  4511                           
  4512                           ;LCD.c: 60:     RB1 = 0;
  4513     0E80  1283               	bcf	3,5	;RP0=0, select bank0
  4514     0E81  1303               	bcf	3,6	;RP1=0, select bank0
  4515     0E82  1086               	bcf	6,1	;volatile
  4516     0E83                     l164:
  4517     0E83  0008               	return
  4518     0E84                     __end_of_Lcd_Cmd:
  4519                           
  4520                           	psect	text21
  4521     0F04                     __ptext21:	
  4522 ;; *************** function _Lcd_Port *****************
  4523 ;; Defined at:
  4524 ;;		line 13 in file "LCD.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  a               1    wreg     unsigned char 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  a               1    6[BANK0 ] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         0       0       0       0       0
  4539 ;;      Locals:         0       1       0       0       0
  4540 ;;      Temps:          0       0       0       0       0
  4541 ;;      Totals:         0       1       0       0       0
  4542 ;;Total ram usage:        1 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 2
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_Lcd_Cmd
  4549 ;;		_Lcd_Init
  4550 ;;		_Lcd_Write_Char
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554     0F04                     _Lcd_Port:	
  4555                           ;psect for function _Lcd_Port
  4556                           
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in _Lcd_Port: [wreg]
  4560                           ;Lcd_Port@a stored from wreg
  4561     0F04  1283               	bcf	3,5	;RP0=0, select bank0
  4562     0F05  1303               	bcf	3,6	;RP1=0, select bank0
  4563     0F06  00A6               	movwf	Lcd_Port@a
  4564     0F07                     l1688:
  4565                           
  4566                           ;LCD.c: 14:     if (a & 1)
  4567     0F07  1C26               	btfss	Lcd_Port@a,0
  4568     0F08  2F0A               	goto	u1341
  4569     0F09  2F0B               	goto	u1340
  4570     0F0A                     u1341:
  4571     0F0A  2F0D               	goto	l145
  4572     0F0B                     u1340:
  4573     0F0B                     l1690:
  4574                           
  4575                           ;LCD.c: 15:         PORTDbits.RD0 = 1;
  4576     0F0B  1408               	bsf	8,0	;volatile
  4577     0F0C  2F0E               	goto	l146
  4578     0F0D                     l145:	
  4579                           ;LCD.c: 16:     else
  4580                           
  4581                           
  4582                           ;LCD.c: 17:         PORTDbits.RD0 = 0;
  4583     0F0D  1008               	bcf	8,0	;volatile
  4584     0F0E                     l146:
  4585                           
  4586                           ;LCD.c: 19:     if (a & 2)
  4587     0F0E  1CA6               	btfss	Lcd_Port@a,1
  4588     0F0F  2F11               	goto	u1351
  4589     0F10  2F12               	goto	u1350
  4590     0F11                     u1351:
  4591     0F11  2F14               	goto	l147
  4592     0F12                     u1350:
  4593     0F12                     l1692:
  4594                           
  4595                           ;LCD.c: 20:         RD1 = 1;
  4596     0F12  1488               	bsf	8,1	;volatile
  4597     0F13  2F15               	goto	l148
  4598     0F14                     l147:	
  4599                           ;LCD.c: 21:     else
  4600                           
  4601                           
  4602                           ;LCD.c: 22:         RD1 = 0;
  4603     0F14  1088               	bcf	8,1	;volatile
  4604     0F15                     l148:
  4605                           
  4606                           ;LCD.c: 24:     if (a & 4)
  4607     0F15  1D26               	btfss	Lcd_Port@a,2
  4608     0F16  2F18               	goto	u1361
  4609     0F17  2F19               	goto	u1360
  4610     0F18                     u1361:
  4611     0F18  2F1B               	goto	l149
  4612     0F19                     u1360:
  4613     0F19                     l1694:
  4614                           
  4615                           ;LCD.c: 25:         RD2 = 1;
  4616     0F19  1508               	bsf	8,2	;volatile
  4617     0F1A  2F1C               	goto	l150
  4618     0F1B                     l149:	
  4619                           ;LCD.c: 26:     else
  4620                           
  4621                           
  4622                           ;LCD.c: 27:         RD2 = 0;
  4623     0F1B  1108               	bcf	8,2	;volatile
  4624     0F1C                     l150:
  4625                           
  4626                           ;LCD.c: 29:     if (a & 8)
  4627     0F1C  1DA6               	btfss	Lcd_Port@a,3
  4628     0F1D  2F1F               	goto	u1371
  4629     0F1E  2F20               	goto	u1370
  4630     0F1F                     u1371:
  4631     0F1F  2F22               	goto	l151
  4632     0F20                     u1370:
  4633     0F20                     l1696:
  4634                           
  4635                           ;LCD.c: 30:         RD3 = 1;
  4636     0F20  1588               	bsf	8,3	;volatile
  4637     0F21  2F23               	goto	l152
  4638     0F22                     l151:	
  4639                           ;LCD.c: 31:     else
  4640                           
  4641                           
  4642                           ;LCD.c: 32:         RD3 = 0;
  4643     0F22  1188               	bcf	8,3	;volatile
  4644     0F23                     l152:
  4645                           
  4646                           ;LCD.c: 34:     if (a & 16)
  4647     0F23  1E26               	btfss	Lcd_Port@a,4
  4648     0F24  2F26               	goto	u1381
  4649     0F25  2F27               	goto	u1380
  4650     0F26                     u1381:
  4651     0F26  2F29               	goto	l153
  4652     0F27                     u1380:
  4653     0F27                     l1698:
  4654                           
  4655                           ;LCD.c: 35:         RD4 = 1;
  4656     0F27  1608               	bsf	8,4	;volatile
  4657     0F28  2F2A               	goto	l154
  4658     0F29                     l153:	
  4659                           ;LCD.c: 36:     else
  4660                           
  4661                           
  4662                           ;LCD.c: 37:         RD4 = 0;
  4663     0F29  1208               	bcf	8,4	;volatile
  4664     0F2A                     l154:
  4665                           
  4666                           ;LCD.c: 39:     if (a & 32)
  4667     0F2A  1EA6               	btfss	Lcd_Port@a,5
  4668     0F2B  2F2D               	goto	u1391
  4669     0F2C  2F2E               	goto	u1390
  4670     0F2D                     u1391:
  4671     0F2D  2F30               	goto	l155
  4672     0F2E                     u1390:
  4673     0F2E                     l1700:
  4674                           
  4675                           ;LCD.c: 40:         RD5 = 1;
  4676     0F2E  1688               	bsf	8,5	;volatile
  4677     0F2F  2F31               	goto	l156
  4678     0F30                     l155:	
  4679                           ;LCD.c: 41:     else
  4680                           
  4681                           
  4682                           ;LCD.c: 42:         RD5 = 0;
  4683     0F30  1288               	bcf	8,5	;volatile
  4684     0F31                     l156:
  4685                           
  4686                           ;LCD.c: 44:     if (a & 64)
  4687     0F31  1F26               	btfss	Lcd_Port@a,6
  4688     0F32  2F34               	goto	u1401
  4689     0F33  2F35               	goto	u1400
  4690     0F34                     u1401:
  4691     0F34  2F37               	goto	l157
  4692     0F35                     u1400:
  4693     0F35                     l1702:
  4694                           
  4695                           ;LCD.c: 45:         RD6 = 1;
  4696     0F35  1708               	bsf	8,6	;volatile
  4697     0F36  2F38               	goto	l158
  4698     0F37                     l157:	
  4699                           ;LCD.c: 46:     else
  4700                           
  4701                           
  4702                           ;LCD.c: 47:         RD6 = 0;
  4703     0F37  1308               	bcf	8,6	;volatile
  4704     0F38                     l158:
  4705                           
  4706                           ;LCD.c: 49:     if (a & 128)
  4707     0F38  1FA6               	btfss	Lcd_Port@a,7
  4708     0F39  2F3B               	goto	u1411
  4709     0F3A  2F3C               	goto	u1410
  4710     0F3B                     u1411:
  4711     0F3B  2F3E               	goto	l159
  4712     0F3C                     u1410:
  4713     0F3C                     l1704:
  4714                           
  4715                           ;LCD.c: 50:         RD7 = 1;
  4716     0F3C  1788               	bsf	8,7	;volatile
  4717     0F3D  2F3F               	goto	l161
  4718     0F3E                     l159:	
  4719                           ;LCD.c: 51:     else
  4720                           
  4721                           
  4722                           ;LCD.c: 52:         RD7 = 0;
  4723     0F3E  1388               	bcf	8,7	;volatile
  4724     0F3F                     l161:
  4725     0F3F  0008               	return
  4726     0F40                     __end_of_Lcd_Port:
  4727                           
  4728                           	psect	text22
  4729     0F7C                     __ptext22:	
  4730 ;; *************** function _ADC_read *****************
  4731 ;; Defined at:
  4732 ;;		line 44 in file "setupADC.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  channel         2    6[BANK0 ] int 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         0       2       0       0       0
  4747 ;;      Locals:         0       0       0       0       0
  4748 ;;      Temps:          0       1       0       0       0
  4749 ;;      Totals:         0       3       0       0       0
  4750 ;;Total ram usage:        3 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 2
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760     0F7C                     _ADC_read:	
  4761                           ;psect for function _ADC_read
  4762                           
  4763     0F7C                     l2044:	
  4764                           ;incstack = 0
  4765                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  4766                           
  4767                           
  4768                           ;setupADC.c: 45:     if(channel ==0){
  4769     0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  4770     0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  4771     0F7E  0826               	movf	ADC_read@channel,w
  4772     0F7F  0427               	iorwf	ADC_read@channel+1,w
  4773     0F80  1D03               	btfss	3,2
  4774     0F81  2F83               	goto	u2101
  4775     0F82  2F84               	goto	u2100
  4776     0F83                     u2101:
  4777     0F83  2F90               	goto	l2052
  4778     0F84                     u2100:
  4779     0F84                     l2046:
  4780                           
  4781                           ;setupADC.c: 46:         ADCON0bits.CHS = 0b0000;
  4782     0F84  30C3               	movlw	-61
  4783     0F85  059F               	andwf	31,f	;volatile
  4784     0F86                     l2048:
  4785                           
  4786                           ;setupADC.c: 47:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  4787     0F86  3007               	movlw	7
  4788     0F87  1283               	bcf	3,5	;RP0=0, select bank0
  4789     0F88  1303               	bcf	3,6	;RP1=0, select bank0
  4790     0F89  00A8               	movwf	??_ADC_read
  4791     0F8A                     u2637:
  4792     0F8A  0BA8               	decfsz	??_ADC_read,f
  4793     0F8B  2F8A               	goto	u2637
  4794     0F8C  0000               	nop
  4795     0F8D                     l2050:
  4796                           
  4797                           ;setupADC.c: 48:         ADCON0bits.GO = 1;
  4798     0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4799     0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4800     0F8F  149F               	bsf	31,1	;volatile
  4801     0F90                     l2052:
  4802                           
  4803                           ;setupADC.c: 50:     if(channel ==1){
  4804     0F90  0326               	decf	ADC_read@channel,w
  4805     0F91  0427               	iorwf	ADC_read@channel+1,w
  4806     0F92  1D03               	btfss	3,2
  4807     0F93  2F95               	goto	u2111
  4808     0F94  2F96               	goto	u2110
  4809     0F95                     u2111:
  4810     0F95  2FA4               	goto	l2060
  4811     0F96                     u2110:
  4812     0F96                     l2054:
  4813                           
  4814                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  4815     0F96  081F               	movf	31,w	;volatile
  4816     0F97  39C3               	andlw	-61
  4817     0F98  3804               	iorlw	4
  4818     0F99  009F               	movwf	31	;volatile
  4819     0F9A                     l2056:
  4820                           
  4821                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  4822     0F9A  3007               	movlw	7
  4823     0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  4824     0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  4825     0F9D  00A8               	movwf	??_ADC_read
  4826     0F9E                     u2647:
  4827     0F9E  0BA8               	decfsz	??_ADC_read,f
  4828     0F9F  2F9E               	goto	u2647
  4829     0FA0  0000               	nop
  4830     0FA1                     l2058:
  4831                           
  4832                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  4833     0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  4834     0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  4835     0FA3  149F               	bsf	31,1	;volatile
  4836     0FA4                     l2060:
  4837                           
  4838                           ;setupADC.c: 55:     if(channel ==2){
  4839     0FA4  3002               	movlw	2
  4840     0FA5  0626               	xorwf	ADC_read@channel,w
  4841     0FA6  0427               	iorwf	ADC_read@channel+1,w
  4842     0FA7  1D03               	btfss	3,2
  4843     0FA8  2FAA               	goto	u2121
  4844     0FA9  2FAB               	goto	u2120
  4845     0FAA                     u2121:
  4846     0FAA  2FB9               	goto	l120
  4847     0FAB                     u2120:
  4848     0FAB                     l2062:
  4849                           
  4850                           ;setupADC.c: 56:         ADCON0bits.CHS = 0b0010;
  4851     0FAB  081F               	movf	31,w	;volatile
  4852     0FAC  39C3               	andlw	-61
  4853     0FAD  3808               	iorlw	8
  4854     0FAE  009F               	movwf	31	;volatile
  4855     0FAF                     l2064:
  4856                           
  4857                           ;setupADC.c: 57:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  4858     0FAF  3007               	movlw	7
  4859     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4860     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4861     0FB2  00A8               	movwf	??_ADC_read
  4862     0FB3                     u2657:
  4863     0FB3  0BA8               	decfsz	??_ADC_read,f
  4864     0FB4  2FB3               	goto	u2657
  4865     0FB5  0000               	nop
  4866     0FB6                     l2066:
  4867                           
  4868                           ;setupADC.c: 58:         ADCON0bits.GO = 1;
  4869     0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  4870     0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  4871     0FB8  149F               	bsf	31,1	;volatile
  4872     0FB9                     l120:
  4873     0FB9  0008               	return
  4874     0FBA                     __end_of_ADC_read:
  4875                           
  4876                           	psect	text23
  4877     07BB                     __ptext23:	
  4878 ;; *************** function _ADC_config *****************
  4879 ;; Defined at:
  4880 ;;		line 11 in file "setupADC.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  channel         2    6[BANK0 ] int 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4894 ;;      Params:         0       2       0       0       0
  4895 ;;      Locals:         0       0       0       0       0
  4896 ;;      Temps:          0       1       0       0       0
  4897 ;;      Totals:         0       3       0       0       0
  4898 ;;Total ram usage:        3 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 2
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_main
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908     07BB                     _ADC_config:	
  4909                           ;psect for function _ADC_config
  4910                           
  4911     07BB                     l1946:	
  4912                           ;incstack = 0
  4913                           ; Regs used in _ADC_config: [wreg]
  4914                           
  4915                           
  4916                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  4917     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4918     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  4919     07BD  1C26               	btfss	ADC_config@channel,0
  4920     07BE  2FC0               	goto	u1971
  4921     07BF  2FC1               	goto	u1970
  4922     07C0                     u1971:
  4923     07C0  2FC8               	goto	l111
  4924     07C1                     u1970:
  4925     07C1                     l1948:
  4926                           
  4927                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  4928     07C1  1005               	bcf	5,0	;volatile
  4929                           
  4930                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  4931     07C2  1683               	bsf	3,5	;RP0=1, select bank1
  4932     07C3  1303               	bcf	3,6	;RP1=0, select bank1
  4933     07C4  1405               	bsf	5,0	;volatile
  4934                           
  4935                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  4936     07C5  1683               	bsf	3,5	;RP0=1, select bank3
  4937     07C6  1703               	bsf	3,6	;RP1=1, select bank3
  4938     07C7  1408               	bsf	8,0	;volatile
  4939     07C8                     l111:	
  4940                           ;setupADC.c: 16:     }
  4941                           
  4942                           
  4943                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  4944     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4945     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4946     07CA  1CA6               	btfss	ADC_config@channel,1
  4947     07CB  2FCD               	goto	u1981
  4948     07CC  2FCE               	goto	u1980
  4949     07CD                     u1981:
  4950     07CD  2FD5               	goto	l112
  4951     07CE                     u1980:
  4952     07CE                     l1950:
  4953                           
  4954                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  4955     07CE  1085               	bcf	5,1	;volatile
  4956                           
  4957                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  4958     07CF  1683               	bsf	3,5	;RP0=1, select bank1
  4959     07D0  1303               	bcf	3,6	;RP1=0, select bank1
  4960     07D1  1485               	bsf	5,1	;volatile
  4961                           
  4962                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  4963     07D2  1683               	bsf	3,5	;RP0=1, select bank3
  4964     07D3  1703               	bsf	3,6	;RP1=1, select bank3
  4965     07D4  1488               	bsf	8,1	;volatile
  4966     07D5                     l112:	
  4967                           ;setupADC.c: 22:     }
  4968                           
  4969                           
  4970                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  4971     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  4972     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  4973     07D7  1D26               	btfss	ADC_config@channel,2
  4974     07D8  2FDA               	goto	u1991
  4975     07D9  2FDB               	goto	u1990
  4976     07DA                     u1991:
  4977     07DA  2FE2               	goto	l113
  4978     07DB                     u1990:
  4979     07DB                     l1952:
  4980                           
  4981                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  4982     07DB  1105               	bcf	5,2	;volatile
  4983                           
  4984                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  4985     07DC  1683               	bsf	3,5	;RP0=1, select bank1
  4986     07DD  1303               	bcf	3,6	;RP1=0, select bank1
  4987     07DE  1505               	bsf	5,2	;volatile
  4988                           
  4989                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  4990     07DF  1683               	bsf	3,5	;RP0=1, select bank3
  4991     07E0  1703               	bsf	3,6	;RP1=1, select bank3
  4992     07E1  1508               	bsf	8,2	;volatile
  4993     07E2                     l113:	
  4994                           ;setupADC.c: 27:     }
  4995                           
  4996                           
  4997                           ;setupADC.c: 29:     INTCONbits.PEIE = 1;
  4998     07E2  170B               	bsf	11,6	;volatile
  4999                           
  5000                           ;setupADC.c: 30:     PIE1bits.ADIE = 1;
  5001     07E3  1683               	bsf	3,5	;RP0=1, select bank1
  5002     07E4  1303               	bcf	3,6	;RP1=0, select bank1
  5003     07E5  170C               	bsf	12,6	;volatile
  5004                           
  5005                           ;setupADC.c: 31:     PIR1bits.ADIF = 0;
  5006     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  5007     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  5008     07E8  130C               	bcf	12,6	;volatile
  5009                           
  5010                           ;setupADC.c: 33:     ADCON0bits.ADCS1 = 0;
  5011     07E9  139F               	bcf	31,7	;volatile
  5012                           
  5013                           ;setupADC.c: 34:     ADCON0bits.ADCS0 = 1;
  5014     07EA  171F               	bsf	31,6	;volatile
  5015                           
  5016                           ;setupADC.c: 36:     ADCON1bits.VCFG1 = 0;
  5017     07EB  1683               	bsf	3,5	;RP0=1, select bank1
  5018     07EC  1303               	bcf	3,6	;RP1=0, select bank1
  5019     07ED  129F               	bcf	31,5	;volatile
  5020                           
  5021                           ;setupADC.c: 37:     ADCON1bits.VCFG0 = 0;
  5022     07EE  121F               	bcf	31,4	;volatile
  5023                           
  5024                           ;setupADC.c: 39:     ADCON1bits.ADFM = 0;
  5025     07EF  139F               	bcf	31,7	;volatile
  5026                           
  5027                           ;setupADC.c: 41:     ADCON0bits.ADON = 1;
  5028     07F0  1283               	bcf	3,5	;RP0=0, select bank0
  5029     07F1  1303               	bcf	3,6	;RP1=0, select bank0
  5030     07F2  141F               	bsf	31,0	;volatile
  5031     07F3                     l1954:
  5032                           
  5033                           ;setupADC.c: 42:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  5034     07F3  3007               	movlw	7
  5035     07F4  1283               	bcf	3,5	;RP0=0, select bank0
  5036     07F5  1303               	bcf	3,6	;RP1=0, select bank0
  5037     07F6  00A8               	movwf	??_ADC_config
  5038     07F7                     u2667:
  5039     07F7  0BA8               	decfsz	??_ADC_config,f
  5040     07F8  2FF7               	goto	u2667
  5041     07F9  0000               	nop
  5042     07FA                     l114:
  5043     07FA  0008               	return
  5044     07FB                     __end_of_ADC_config:
  5045                           
  5046                           	psect	text24
  5047     05C4                     __ptext24:	
  5048 ;; *************** function _isr *****************
  5049 ;; Defined at:
  5050 ;;		line 57 in file "main.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0, pclath, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0
  5066 ;;      Temps:          0       6       0       0       0
  5067 ;;      Totals:         0       6       0       0       0
  5068 ;;Total ram usage:        6 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 1
  5071 ;; This function calls:
  5072 ;;		_UART_read_char
  5073 ;;		___xxtofl
  5074 ;; This function is called by:
  5075 ;;		Interrupt level 1
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079     05C4                     _isr:	
  5080                           ;psect for function _isr
  5081                           
  5082     05C4                     i1l2256:
  5083                           
  5084                           ;main.c: 59:     if(PIR1bits.ADIF){
  5085     05C4  1F0C               	btfss	12,6	;volatile
  5086     05C5  2DC7               	goto	u250_21
  5087     05C6  2DC8               	goto	u250_20
  5088     05C7                     u250_21:
  5089     05C7  2E00               	goto	i1l2268
  5090     05C8                     u250_20:
  5091     05C8                     i1l2258:
  5092                           
  5093                           ;main.c: 60:         if(ADCON0bits.CHS == 0){
  5094     05C8  0C1F               	rrf	31,w	;volatile
  5095     05C9  00A0               	movwf	??_isr
  5096     05CA  0C20               	rrf	??_isr,w
  5097     05CB  390F               	andlw	15
  5098     05CC  3A00               	xorlw	0
  5099     05CD  1D03               	skipz
  5100     05CE  2DD0               	goto	u251_21
  5101     05CF  2DD1               	goto	u251_20
  5102     05D0                     u251_21:
  5103     05D0  2DEF               	goto	i1l2262
  5104     05D1                     u251_20:
  5105     05D1                     i1l2260:
  5106                           
  5107                           ;main.c: 61:             lecADC0 = ADRESH;
  5108     05D1  081E               	movf	30,w	;volatile
  5109     05D2  00A0               	movwf	??_isr
  5110     05D3  01A1               	clrf	??_isr+1
  5111     05D4  01A2               	clrf	??_isr+2
  5112     05D5  01A3               	clrf	??_isr+3
  5113     05D6  0823               	movf	??_isr+3,w
  5114     05D7  00F3               	movwf	___xxtofl@val+3
  5115     05D8  0822               	movf	??_isr+2,w
  5116     05D9  00F2               	movwf	___xxtofl@val+2
  5117     05DA  0821               	movf	??_isr+1,w
  5118     05DB  00F1               	movwf	___xxtofl@val+1
  5119     05DC  0820               	movf	??_isr,w
  5120     05DD  00F0               	movwf	___xxtofl@val
  5121     05DE  3000               	movlw	0
  5122     05DF  120A  118A  225F  120A  118A  	fcall	___xxtofl
  5123     05E4  0873               	movf	?___xxtofl+3,w
  5124     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  5125     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  5126     05E7  00D3               	movwf	_lecADC0+3
  5127     05E8  0872               	movf	?___xxtofl+2,w
  5128     05E9  00D2               	movwf	_lecADC0+2
  5129     05EA  0871               	movf	?___xxtofl+1,w
  5130     05EB  00D1               	movwf	_lecADC0+1
  5131     05EC  0870               	movf	?___xxtofl,w
  5132     05ED  00D0               	movwf	_lecADC0
  5133                           
  5134                           ;main.c: 62:         }
  5135     05EE  2DFF               	goto	i1l2266
  5136     05EF                     i1l2262:
  5137     05EF  0C1F               	rrf	31,w	;volatile
  5138     05F0  00A0               	movwf	??_isr
  5139     05F1  0C20               	rrf	??_isr,w
  5140     05F2  390F               	andlw	15
  5141     05F3  3A01               	xorlw	1
  5142     05F4  1D03               	skipz
  5143     05F5  2DF7               	goto	u252_21
  5144     05F6  2DF8               	goto	u252_20
  5145     05F7                     u252_21:
  5146     05F7  2DFF               	goto	i1l2266
  5147     05F8                     u252_20:
  5148     05F8                     i1l2264:
  5149                           
  5150                           ;main.c: 64:             lecADC1 = ADRESH;
  5151     05F8  081E               	movf	30,w	;volatile
  5152     05F9  00A0               	movwf	??_isr
  5153     05FA  01A1               	clrf	??_isr+1
  5154     05FB  0820               	movf	??_isr,w
  5155     05FC  00D8               	movwf	_lecADC1
  5156     05FD  0821               	movf	??_isr+1,w
  5157     05FE  00D9               	movwf	_lecADC1+1
  5158     05FF                     i1l2266:
  5159                           
  5160                           ;main.c: 66:         ADIF = 0;
  5161     05FF  130C               	bcf	12,6	;volatile
  5162     0600                     i1l2268:
  5163                           
  5164                           ;main.c: 69:     if(PIR1bits.RCIF){
  5165     0600  1E8C               	btfss	12,5	;volatile
  5166     0601  2E03               	goto	u253_21
  5167     0602  2E04               	goto	u253_20
  5168     0603                     u253_21:
  5169     0603  2E20               	goto	i1l69
  5170     0604                     u253_20:
  5171     0604                     i1l2270:
  5172                           
  5173                           ;main.c: 70:         indicador = UART_read_char();
  5174     0604  120A  118A  27FB  120A  118A  	fcall	_UART_read_char
  5175     0609  1283               	bcf	3,5	;RP0=0, select bank0
  5176     060A  1303               	bcf	3,6	;RP1=0, select bank0
  5177     060B  00DD               	movwf	_indicador
  5178     060C                     i1l2272:
  5179                           
  5180                           ;main.c: 71:         if (indicador == '+'){
  5181     060C  302B               	movlw	43
  5182     060D  065D               	xorwf	_indicador,w
  5183     060E  1D03               	btfss	3,2
  5184     060F  2E11               	goto	u254_21
  5185     0610  2E12               	goto	u254_20
  5186     0611                     u254_21:
  5187     0611  2E16               	goto	i1l2276
  5188     0612                     u254_20:
  5189     0612                     i1l2274:
  5190                           
  5191                           ;main.c: 72:             cont = cont + 1;
  5192     0612  085E               	movf	_cont,w
  5193     0613  3E01               	addlw	1
  5194     0614  00DE               	movwf	_cont
  5195                           
  5196                           ;main.c: 73:         }
  5197     0615  2E1F               	goto	i1l2280
  5198     0616                     i1l2276:
  5199     0616  302D               	movlw	45
  5200     0617  065D               	xorwf	_indicador,w
  5201     0618  1D03               	btfss	3,2
  5202     0619  2E1B               	goto	u255_21
  5203     061A  2E1C               	goto	u255_20
  5204     061B                     u255_21:
  5205     061B  2E1F               	goto	i1l2280
  5206     061C                     u255_20:
  5207     061C                     i1l2278:
  5208                           
  5209                           ;main.c: 75:             cont = cont - 1;
  5210     061C  085E               	movf	_cont,w
  5211     061D  3EFF               	addlw	255
  5212     061E  00DE               	movwf	_cont
  5213     061F                     i1l2280:
  5214                           
  5215                           ;main.c: 78:         PIR1bits.RCIF = 0;
  5216     061F  128C               	bcf	12,5	;volatile
  5217     0620                     i1l69:
  5218     0620  0825               	movf	??_isr+5,w
  5219     0621  008A               	movwf	10
  5220     0622  0E24               	swapf	??_isr+4,w
  5221     0623  0083               	movwf	3
  5222     0624  0EFE               	swapf	btemp,f
  5223     0625  0E7E               	swapf	btemp,w
  5224     0626  0009               	retfie
  5225     0627                     __end_of_isr:
  5226                           
  5227                           	psect	intentry
  5228     0004                     __pintentry:	
  5229                           ;incstack = 0
  5230                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5231                           
  5232     0004                     interrupt_function:
  5233     007E                     saved_w	set	btemp
  5234     0004  00FE               	movwf	btemp
  5235     0005  0E03               	swapf	3,w
  5236     0006  1283               	bcf	3,5	;RP0=0, select bank0
  5237     0007  1303               	bcf	3,6	;RP1=0, select bank0
  5238     0008  00A4               	movwf	??_isr+4
  5239     0009  080A               	movf	10,w
  5240     000A  00A5               	movwf	??_isr+5
  5241     000B  120A  118A  2DC4   	ljmp	_isr
  5242                           
  5243                           	psect	text25
  5244     025F                     __ptext25:	
  5245 ;; *************** function ___xxtofl *****************
  5246 ;; Defined at:
  5247 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  sign            1    wreg     unsigned char 
  5250 ;;  val             4    0[COMMON] long 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  sign            1    8[COMMON] unsigned char 
  5253 ;;  arg             4   10[COMMON] unsigned long 
  5254 ;;  exp             1    9[COMMON] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  4    0[COMMON] unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5264 ;;      Params:         4       0       0       0       0
  5265 ;;      Locals:         6       0       0       0       0
  5266 ;;      Temps:          4       0       0       0       0
  5267 ;;      Totals:        14       0       0       0       0
  5268 ;;Total ram usage:       14 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_isr
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277     025F                     ___xxtofl:	
  5278                           ;psect for function ___xxtofl
  5279                           
  5280                           
  5281                           ;incstack = 0
  5282                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5283                           ;___xxtofl@sign stored from wreg
  5284     025F  00F8               	movwf	___xxtofl@sign
  5285     0260                     i1l2212:
  5286     0260  0878               	movf	___xxtofl@sign,w
  5287     0261  1903               	btfsc	3,2
  5288     0262  2A64               	goto	u236_21
  5289     0263  2A65               	goto	u236_20
  5290     0264                     u236_21:
  5291     0264  2A79               	goto	i1l2218
  5292     0265                     u236_20:
  5293     0265                     i1l2214:
  5294     0265  1FF3               	btfss	___xxtofl@val+3,7
  5295     0266  2A68               	goto	u237_21
  5296     0267  2A69               	goto	u237_20
  5297     0268                     u237_21:
  5298     0268  2A79               	goto	i1l2218
  5299     0269                     u237_20:
  5300     0269                     i1l2216:
  5301     0269  0970               	comf	___xxtofl@val,w
  5302     026A  00FA               	movwf	___xxtofl@arg
  5303     026B  0971               	comf	___xxtofl@val+1,w
  5304     026C  00FB               	movwf	___xxtofl@arg+1
  5305     026D  0972               	comf	___xxtofl@val+2,w
  5306     026E  00FC               	movwf	___xxtofl@arg+2
  5307     026F  0973               	comf	___xxtofl@val+3,w
  5308     0270  00FD               	movwf	___xxtofl@arg+3
  5309     0271  0AFA               	incf	___xxtofl@arg,f
  5310     0272  1903               	skipnz
  5311     0273  0AFB               	incf	___xxtofl@arg+1,f
  5312     0274  1903               	skipnz
  5313     0275  0AFC               	incf	___xxtofl@arg+2,f
  5314     0276  1903               	skipnz
  5315     0277  0AFD               	incf	___xxtofl@arg+3,f
  5316     0278  2A81               	goto	i1l835
  5317     0279                     i1l2218:
  5318     0279  0873               	movf	___xxtofl@val+3,w
  5319     027A  00FD               	movwf	___xxtofl@arg+3
  5320     027B  0872               	movf	___xxtofl@val+2,w
  5321     027C  00FC               	movwf	___xxtofl@arg+2
  5322     027D  0871               	movf	___xxtofl@val+1,w
  5323     027E  00FB               	movwf	___xxtofl@arg+1
  5324     027F  0870               	movf	___xxtofl@val,w
  5325     0280  00FA               	movwf	___xxtofl@arg
  5326     0281                     i1l835:
  5327     0281  0873               	movf	___xxtofl@val+3,w
  5328     0282  0472               	iorwf	___xxtofl@val+2,w
  5329     0283  0471               	iorwf	___xxtofl@val+1,w
  5330     0284  0470               	iorwf	___xxtofl@val,w
  5331     0285  1D03               	skipz
  5332     0286  2A88               	goto	u238_21
  5333     0287  2A89               	goto	u238_20
  5334     0288                     u238_21:
  5335     0288  2A92               	goto	i1l2224
  5336     0289                     u238_20:
  5337     0289                     i1l2220:
  5338     0289  3000               	movlw	0
  5339     028A  00F3               	movwf	?___xxtofl+3
  5340     028B  3000               	movlw	0
  5341     028C  00F2               	movwf	?___xxtofl+2
  5342     028D  3000               	movlw	0
  5343     028E  00F1               	movwf	?___xxtofl+1
  5344     028F  3000               	movlw	0
  5345     0290  00F0               	movwf	?___xxtofl
  5346     0291  2B16               	goto	i1l837
  5347     0292                     i1l2224:
  5348     0292  3096               	movlw	150
  5349     0293  00F9               	movwf	___xxtofl@exp
  5350     0294  2AA2               	goto	i1l2228
  5351     0295                     i1l2226:
  5352     0295  3001               	movlw	1
  5353     0296  00F4               	movwf	??___xxtofl
  5354     0297  0874               	movf	??___xxtofl,w
  5355     0298  07F9               	addwf	___xxtofl@exp,f
  5356     0299  3001               	movlw	1
  5357     029A                     u239_25:
  5358     029A  1003               	clrc
  5359     029B  0CFD               	rrf	___xxtofl@arg+3,f
  5360     029C  0CFC               	rrf	___xxtofl@arg+2,f
  5361     029D  0CFB               	rrf	___xxtofl@arg+1,f
  5362     029E  0CFA               	rrf	___xxtofl@arg,f
  5363     029F  3EFF               	addlw	-1
  5364     02A0  1D03               	skipz
  5365     02A1  2A9A               	goto	u239_25
  5366     02A2                     i1l2228:
  5367     02A2  30FE               	movlw	254
  5368     02A3  057D               	andwf	___xxtofl@arg+3,w
  5369     02A4  1D03               	btfss	3,2
  5370     02A5  2AA7               	goto	u240_21
  5371     02A6  2AA8               	goto	u240_20
  5372     02A7                     u240_21:
  5373     02A7  2A95               	goto	i1l2226
  5374     02A8                     u240_20:
  5375     02A8  2AC4               	goto	i1l841
  5376     02A9                     i1l2230:
  5377     02A9  3001               	movlw	1
  5378     02AA  00F4               	movwf	??___xxtofl
  5379     02AB  0874               	movf	??___xxtofl,w
  5380     02AC  07F9               	addwf	___xxtofl@exp,f
  5381     02AD                     i1l2232:
  5382     02AD  3001               	movlw	1
  5383     02AE  07FA               	addwf	___xxtofl@arg,f
  5384     02AF  3000               	movlw	0
  5385     02B0  1803               	skipnc
  5386     02B1  3001               	movlw	1
  5387     02B2  07FB               	addwf	___xxtofl@arg+1,f
  5388     02B3  3000               	movlw	0
  5389     02B4  1803               	skipnc
  5390     02B5  3001               	movlw	1
  5391     02B6  07FC               	addwf	___xxtofl@arg+2,f
  5392     02B7  3000               	movlw	0
  5393     02B8  1803               	skipnc
  5394     02B9  3001               	movlw	1
  5395     02BA  07FD               	addwf	___xxtofl@arg+3,f
  5396     02BB                     i1l2234:
  5397     02BB  3001               	movlw	1
  5398     02BC                     u241_25:
  5399     02BC  1003               	clrc
  5400     02BD  0CFD               	rrf	___xxtofl@arg+3,f
  5401     02BE  0CFC               	rrf	___xxtofl@arg+2,f
  5402     02BF  0CFB               	rrf	___xxtofl@arg+1,f
  5403     02C0  0CFA               	rrf	___xxtofl@arg,f
  5404     02C1  3EFF               	addlw	-1
  5405     02C2  1D03               	skipz
  5406     02C3  2ABC               	goto	u241_25
  5407     02C4                     i1l841:
  5408     02C4  30FF               	movlw	255
  5409     02C5  057D               	andwf	___xxtofl@arg+3,w
  5410     02C6  1D03               	btfss	3,2
  5411     02C7  2AC9               	goto	u242_21
  5412     02C8  2ACA               	goto	u242_20
  5413     02C9                     u242_21:
  5414     02C9  2AA9               	goto	i1l2230
  5415     02CA                     u242_20:
  5416     02CA  2AD6               	goto	i1l2238
  5417     02CB                     i1l2236:
  5418     02CB  3001               	movlw	1
  5419     02CC  02F9               	subwf	___xxtofl@exp,f
  5420     02CD  3001               	movlw	1
  5421     02CE  00F4               	movwf	??___xxtofl
  5422     02CF                     u243_25:
  5423     02CF  1003               	clrc
  5424     02D0  0DFA               	rlf	___xxtofl@arg,f
  5425     02D1  0DFB               	rlf	___xxtofl@arg+1,f
  5426     02D2  0DFC               	rlf	___xxtofl@arg+2,f
  5427     02D3  0DFD               	rlf	___xxtofl@arg+3,f
  5428     02D4  0BF4               	decfsz	??___xxtofl,f
  5429     02D5  2ACF               	goto	u243_25
  5430     02D6                     i1l2238:
  5431     02D6  1BFC               	btfsc	___xxtofl@arg+2,7
  5432     02D7  2AD9               	goto	u244_21
  5433     02D8  2ADA               	goto	u244_20
  5434     02D9                     u244_21:
  5435     02D9  2AE0               	goto	i1l848
  5436     02DA                     u244_20:
  5437     02DA                     i1l2240:
  5438     02DA  3002               	movlw	2
  5439     02DB  0279               	subwf	___xxtofl@exp,w
  5440     02DC  1803               	skipnc
  5441     02DD  2ADF               	goto	u245_21
  5442     02DE  2AE0               	goto	u245_20
  5443     02DF                     u245_21:
  5444     02DF  2ACB               	goto	i1l2236
  5445     02E0                     u245_20:
  5446     02E0                     i1l848:
  5447     02E0  1879               	btfsc	___xxtofl@exp,0
  5448     02E1  2AE3               	goto	u246_21
  5449     02E2  2AE4               	goto	u246_20
  5450     02E3                     u246_21:
  5451     02E3  2AEC               	goto	i1l849
  5452     02E4                     u246_20:
  5453     02E4                     i1l2242:
  5454     02E4  30FF               	movlw	255
  5455     02E5  05FA               	andwf	___xxtofl@arg,f
  5456     02E6  30FF               	movlw	255
  5457     02E7  05FB               	andwf	___xxtofl@arg+1,f
  5458     02E8  307F               	movlw	127
  5459     02E9  05FC               	andwf	___xxtofl@arg+2,f
  5460     02EA  30FF               	movlw	255
  5461     02EB  05FD               	andwf	___xxtofl@arg+3,f
  5462     02EC                     i1l849:
  5463     02EC  1003               	clrc
  5464     02ED  0CF9               	rrf	___xxtofl@exp,f
  5465     02EE                     i1l2244:
  5466     02EE  0879               	movf	___xxtofl@exp,w
  5467     02EF  00F4               	movwf	??___xxtofl
  5468     02F0  01F5               	clrf	??___xxtofl+1
  5469     02F1  01F6               	clrf	??___xxtofl+2
  5470     02F2  01F7               	clrf	??___xxtofl+3
  5471     02F3  3018               	movlw	24
  5472     02F4                     u247_25:
  5473     02F4  1003               	clrc
  5474     02F5  0DF4               	rlf	??___xxtofl,f
  5475     02F6  0DF5               	rlf	??___xxtofl+1,f
  5476     02F7  0DF6               	rlf	??___xxtofl+2,f
  5477     02F8  0DF7               	rlf	??___xxtofl+3,f
  5478     02F9                     u247_20:
  5479     02F9  3EFF               	addlw	-1
  5480     02FA  1D03               	skipz
  5481     02FB  2AF4               	goto	u247_25
  5482     02FC  0874               	movf	??___xxtofl,w
  5483     02FD  04FA               	iorwf	___xxtofl@arg,f
  5484     02FE  0875               	movf	??___xxtofl+1,w
  5485     02FF  04FB               	iorwf	___xxtofl@arg+1,f
  5486     0300  0876               	movf	??___xxtofl+2,w
  5487     0301  04FC               	iorwf	___xxtofl@arg+2,f
  5488     0302  0877               	movf	??___xxtofl+3,w
  5489     0303  04FD               	iorwf	___xxtofl@arg+3,f
  5490     0304                     i1l2246:
  5491     0304  0878               	movf	___xxtofl@sign,w
  5492     0305  1903               	btfsc	3,2
  5493     0306  2B08               	goto	u248_21
  5494     0307  2B09               	goto	u248_20
  5495     0308                     u248_21:
  5496     0308  2B0E               	goto	i1l2252
  5497     0309                     u248_20:
  5498     0309                     i1l2248:
  5499     0309  1FF3               	btfss	___xxtofl@val+3,7
  5500     030A  2B0C               	goto	u249_21
  5501     030B  2B0D               	goto	u249_20
  5502     030C                     u249_21:
  5503     030C  2B0E               	goto	i1l2252
  5504     030D                     u249_20:
  5505     030D                     i1l2250:
  5506     030D  17FD               	bsf	___xxtofl@arg+3,7
  5507     030E                     i1l2252:
  5508     030E  087D               	movf	___xxtofl@arg+3,w
  5509     030F  00F3               	movwf	?___xxtofl+3
  5510     0310  087C               	movf	___xxtofl@arg+2,w
  5511     0311  00F2               	movwf	?___xxtofl+2
  5512     0312  087B               	movf	___xxtofl@arg+1,w
  5513     0313  00F1               	movwf	?___xxtofl+1
  5514     0314  087A               	movf	___xxtofl@arg,w
  5515     0315  00F0               	movwf	?___xxtofl
  5516     0316                     i1l837:
  5517     0316  0008               	return
  5518     0317                     __end_of___xxtofl:
  5519                           
  5520                           	psect	text26
  5521     07FB                     __ptext26:	
  5522 ;; *************** function _UART_read_char *****************
  5523 ;; Defined at:
  5524 ;;		line 72 in file "setupUART.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      unsigned char 
  5531 ;; Registers used:
  5532 ;;		wreg
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5538 ;;      Params:         0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0
  5541 ;;      Totals:         0       0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_isr
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551     07FB                     _UART_read_char:	
  5552                           ;psect for function _UART_read_char
  5553                           
  5554     07FB                     i1l1910:	
  5555                           ;incstack = 0
  5556                           ; Regs used in _UART_read_char: [wreg]
  5557                           
  5558                           
  5559                           ;setupUART.c: 73:     return RCREG;
  5560     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  5561     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  5562     07FD  081A               	movf	26,w	;volatile
  5563     07FE                     i1l316:
  5564     07FE  0008               	return
  5565     07FF                     __end_of_UART_read_char:
  5566     007E                     btemp	set	126	;btemp
  5567     007E                     wtemp0	set	126
  5568                           
  5569                           	psect	idloc
  5570                           
  5571                           ;Config register IDLOC0 @ 0x2000
  5572                           ;	unspecified, using default values
  5573     2000                     	org	8192
  5574     2000  3FFF               	dw	16383
  5575                           
  5576                           ;Config register IDLOC1 @ 0x2001
  5577                           ;	unspecified, using default values
  5578     2001                     	org	8193
  5579     2001  3FFF               	dw	16383
  5580                           
  5581                           ;Config register IDLOC2 @ 0x2002
  5582                           ;	unspecified, using default values
  5583     2002                     	org	8194
  5584     2002  3FFF               	dw	16383
  5585                           
  5586                           ;Config register IDLOC3 @ 0x2003
  5587                           ;	unspecified, using default values
  5588     2003                     	org	8195
  5589     2003  3FFF               	dw	16383
  5590                           
  5591                           	psect	config
  5592                           
  5593                           ;Config register CONFIG1 @ 0x2007
  5594                           ;	Oscillator Selection bits
  5595                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5596                           ;	Watchdog Timer Enable bit
  5597                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5598                           ;	Power-up Timer Enable bit
  5599                           ;	PWRTE = OFF, PWRT disabled
  5600                           ;	RE3/MCLR pin function select bit
  5601                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5602                           ;	Code Protection bit
  5603                           ;	CP = OFF, Program memory code protection is disabled
  5604                           ;	Data Code Protection bit
  5605                           ;	CPD = OFF, Data memory code protection is disabled
  5606                           ;	Brown Out Reset Selection bits
  5607                           ;	BOREN = OFF, BOR disabled
  5608                           ;	Internal External Switchover bit
  5609                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5610                           ;	Fail-Safe Clock Monitor Enabled bit
  5611                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5612                           ;	Low Voltage Programming Enable bit
  5613                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5614                           ;	In-Circuit Debugger Mode bit
  5615                           ;	DEBUG = 0x1, unprogramme  5616     2007                     	org	8199
  5617     2007  20D4               	dw	8404
  5618                           
  5619                           ;Config register CONFIG2 @ 0x2008
  5620                           ;	Brown-out Reset Selection bit
  5621                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5622                           ;	Flash Program Memory Self Write Enable bits
  5623                           ;	WRT = OFF, Write protection off
  5624     2008                     	org	8200
  5625     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl

Critical Paths under _main in BANK0

    _main->_mapeo
    _mapeo->___aldiv
    ___aldiv->___lmul
    _descomponer->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8331
                                             46 BANK0      2     2      0
                         _ADC_config
                           _ADC_read
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                     _UART_RX_config
                   _UART_mode_config
                            ___fltol
                      _configpuertos
                        _descomponer
                          _inttochar
                              _mapeo
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mapeo                                               12     7      5    1459
                                             34 BANK0     12     7      5
                            ___aldiv
                            ___fltol (ARG)
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             19 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _inttochar                                            1     1      0     220
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _descomponer                                          9     5      4    3094
                                             15 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              6 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _configpuertos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              6 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _UART_mode_config                                     1     1      0     132
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_RX_config                                       2     0      2      98
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     321
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              7 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1    1396
                                              9 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              9 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     198
                                              7 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2     218
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     142
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0     398
                                              0 BANK0      6     6      0
                     _UART_read_char
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _UART_RX_config
   _UART_mode_config
   ___fltol
   _configpuertos
   _descomponer
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _inttochar
   _mapeo
     ___aldiv
       ___lmul (ARG)
     ___fltol (ARG)
     ___lmul (ARG)
   _setupINTOSC

 _isr (ROOT)
   _UART_read_char
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      3F       5       78.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4D      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jan 30 11:58:33 2023

                       pc 0002                        l90 04FC                        l82 04A2  
                      l83 04AF                        l84 04BC                        l85 04C9  
                      l86 04D6                        l87 04E3                        l88 04EF  
            ___awdiv@sign 002C            ?_configpuertos 0070                        fsr 0004  
          mapeo@resultado 004B                       l111 07C8                       l112 07D5  
                     l120 0FB9                       l113 07E2                       l114 07FA  
                     l210 0E9D                       l150 0F1C                       l302 06D9  
                     l214 072B                       l151 0F22                       l152 0F23  
                     l161 0F3F                       l153 0F29                       l145 0F0D  
                     l154 0F2A                       l146 0F0E                       l306 0EB8  
                     l155 0F30                       l147 0F14                       l227 072B  
                     l156 0F31                       l148 0F15                       l164 0E83  
                     l236 05C3                       l157 0F37                       l149 0F1B  
                     l173 0EDA                       l158 0F38                       l159 0F3E  
                     l167 0E52                       l176 0560                       l416 0773  
                     l185 0F03                       l179 0E6A                       l292 06D7  
                     l268 07BA                       l296 06D7                       l555 0494  
                     l467 032B                       l477 03B3                       l568 0681  
                     l674 0FFF                       l595 0416                       l588 042B  
                     l684 0F7B                       l598 042B                       _RB1 0031  
                     _RD1 0041                       _RD2 0042                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       _isr 05C4                       fsr0 0004  
            ___awmod@sign 002C              ___fltol@exp1 002F                      l2000 050D  
                    l2010 052D                      l2002 051B                      l2020 055A  
                    l2012 0533                      l2004 0521                      l2100 06E2  
                    l2022 0E4C                      l2014 0540                      l2006 0524  
                    l2030 0ECB                      l2016 0547                      l2008 052A  
                    l2032 0ED1                      l2024 0EBC                      l2040 0EEE  
                    l2200 0404                      l2050 0F8D                      l2018 0554  
                    l2034 0ED4                      l2026 0EC1                      l2042 0EF6  
                    l2210 0420                      l2130 06FB                      l2122 06F3  
                    l2114 06EB                      l2106 06E4                      l2060 0FA4  
                    l2052 0F90                      l2044 0F7C                      l2028 0EC4  
                    l2036 0EDE                      l2140 0709                      l2132 0701  
                    l2124 06F9                      l2116 06F1                      l2108 06E9  
                    l2300 00C8                      l2062 0FAB                      l2054 0F96  
                    l2046 0F84                      l2038 0EE1                      l2206 040B  
                    l2070 07B6                      l2310 010B                      l2302 00CE  
                    l2064 0FAF                      l2056 0F9A                      l2048 0F86  
                    l2208 041B                      l2320 0136                      l2312 0113  
                    l2304 00E5                      l2066 0FB6                      l2058 0FA1  
                    l2074 0561                      l2170 0723                      l2162 071B  
                    l2154 0713                      l2146 070B                      l2138 0703  
                    l2330 017B                      l2322 014C                      l2314 011B  
                    l2306 00ED                      l1700 0F2E                      l2092 05BC  
                    l2084 05A2                      l2076 0599                      l2172 0729  
                    l2164 0721                      l2156 0719                      l2148 0711  
                    l2068 0777                      l2340 01BE                      l2332 0181  
                    l2324 0161                      l2316 0125                      l2308 00F5  
                    l1702 0F35                      l1710 0E5D                      l2190 03E6  
                    l2182 03C8                      l2094 05C2                      l2086 05A8  
                    l2078 05A0                      l2350 01F8                      l2342 01C6  
                    l2334 0198                      l2326 0169                      l2318 012B  
                    l1704 0F3C                      l1720 0E75                      l1712 0E60  
                    l2192 03EA                      l2184 03DB                      l2176 03B4  
                    l1800 0452                      l2360 0232                      l2352 0200  
                    l2344 01CE                      l2336 01A0                      l2328 0171  
                    l1722 0E78                      l1714 0E67                      l1706 0E56  
                    l2186 03DC                      l2178 03BF                      l1810 0478  
                    l1802 0459                      l2098 06DD                      l1730 073A  
                    l2362 024B                      l2354 0208                      l2346 01D8  
                    l2338 01A8                      l2290 0074                      l2282 0026  
                    l1724 0E80                      l1716 0E6E                      l1708 0E57  
                    l2188 03E4                      l1820 0490                      l1812 0479  
                    l1804 045D                      l1900 0F64                      l1740 0317  
                    l1732 0751                      l2364 0253                      l2356 0222  
                    l2348 01DE                      l2292 0099                      l2284 0061  
                    l1718 0E6F                      l2198 03F2                      l1814 0480  
                    l1806 0461                      l1830 0633                      l1902 0F6A  
                    l1750 033E                      l1742 031A                      l1734 075A  
                    l1726 072C                      l2358 022A                      l2294 00AE  
                    l2286 0067                      l1808 0472                      l1816 0486  
                    l1840 0647                      l1832 0635                      l1824 0627  
                    l1904 0F71                      l1760 0362                      l1752 0346  
                    l1744 031E                      l1736 076B                      l1728 0736  
                    l1920 04B6                      l2296 00B6                      l2288 006A  
                    l1690 0F0B                      l1818 048B                      l1850 0666  
                    l1842 064E                      l1834 0639                      l1826 062A  
                    l1906 0F77                      l1770 0395                      l1762 036B  
                    l1754 034E                      l1746 032F                      l1930 04F5  
                    l1922 04C3                      l1914 0498                      l2298 00BE  
                    l1692 0F12                      l1940 0E90                      l1780 042C  
                    l1852 066D                      l1844 0652                      l1836 063E  
                    l1828 062E                      l1764 037D                      l1756 0351  
                    l1772 039B                      l1748 033A                      l1932 04F9  
                    l1924 04D0                      l1916 049E                      l1950 07CE  
                    l1694 0F19                      l1942 0E93                      l1934 0E84  
                    l1790 043E                      l1782 042F                      l1846 0656  
                    l1838 0644                      l1854 0673                      l1870 0FCE  
                    l1862 0FBA                      l1774 03A0                      l1766 038B  
                    l1758 035E                      l1926 04DD                      l1918 04A9  
                    l1952 07DB                      l1696 0F20                      l1688 0F07  
                    l1960 0692                      l1944 0E96                      l1936 0E8C  
                    l1792 0443                      l1784 0433                      l1856 0678  
                    l1848 0660                      l1880 0FEE                      l1872 0FD2  
                    l1864 0FBE                      l1776 03AB                      l1768 038C  
                    l1928 04E9                      l1954 07F3                      l1946 07BB  
                    l1698 0F27                      l1970 06B3                      l1962 0697  
                    l1938 0E8D                      l1794 0447                      l1786 0438  
                    l1858 067D                      l1882 0FF5                      l1874 0FD6  
                    l1866 0FC4                      l1890 0F48                      l1948 07C1  
                    l1980 0E9E                      l1972 06BB                      l1964 069F  
                    l1956 0685                      l1796 0449                      l1788 043A  
                    l1876 0FE7                      l1868 0FC7                      l1884 0FFB  
                    l1892 0F4B                      l1990 0EB3                      l1982 0EA9  
                    l1974 06C1                      l1966 06A5                      l1958 068A  
                    l1798 044F                      l1878 0FED                      l1894 0F52  
                    l1992 0EB6                      l1984 0EAD                      l1976 06C9  
                    l1968 06AD                      l1896 0F56                      l1888 0F40  
                    l1994 0EB7                      l1986 0EAE                      l1978 06CF  
                    l1898 0F5A                      l1996 04FD                      l1988 0EB0  
                    l1998 0503                      _ADIF 0066                      ?_isr 0070  
                    STR_1 0806                      u2000 068A                      u2001 0689  
                    u2010 0697                      u2011 0696                      u2100 0F84  
                    u2020 06A5                      u2101 0F83                      u2021 06A4  
                    u2110 0F96                      u2030 06B3                      u2111 0F95  
                    u2031 06B2                      u2120 0FAB                      u1400 0F35  
                    u2040 06C1                      u2200 0701                      u2121 0FAA  
                    u1401 0F34                      u2041 06C0                      u2201 0700  
                    u1410 0F3C                      u2050 06CF                      u2130 05A0  
                    u2210 0709                      u1411 0F3B                      u2051 06CE  
                    u2131 059F                      u2211 0708                      u1340 0F0B  
                    u2060 0EA9                      u2140 05A8                      u2220 0711  
                    u1420 073A                      u1341 0F0A                      u2061 0EA8  
                    u2141 05A7                      u2221 0710                      u1421 0739  
                    u1350 0F12                      u2070 0EC1                      u2310 0403  
                    u2150 05C2                      u2230 0719                      u1510 0362  
                    u1351 0F11                      u2071 0EC0                      u2311 0402  
                    u2151 05C1                      u2231 0718                      u1511 0361  
                    u1431 0743                      u1360 0F19                      u2080 0ED1  
                    u2320 040A                      u2240 0721                      u2160 06E2  
                    u1432 074A                      u1361 0F18                      u2081 0ED0  
                    u2321 0409                      u2305 03F3                      u2241 0720  
                    u2161 06E1                      u1505 0353                      u1433 0751  
                    u1370 0F20                      u2090 0F03                      u1610 0461  
                    u2250 0729                      u2170 06E9                      u1530 037D  
                    u1371 0F1F                      u2091 0F02                      u1611 0460  
                    u2251 0728                      u2171 06E8                      u1531 037C  
                    u1380 0F27                      u2340 041B                      u2260 03BF  
                    u2180 06F1                      u1460 076B                      u1381 0F26  
                    u2341 041A                      u2261 03BE                      u1605 0453  
                    u2181 06F0                      u1525 0364                      u1461 076A  
                    u1445 0753                      u1390 0F2E                      u2350 0420  
                    u2270 03D6                      u1630 0472                      u1710 0656  
                    u2190 06F9                      u1550 039B                      u1470 031E  
                    u1391 0F2D                      u2351 041F                      u2335 040D  
                    u1631 0471                      u1711 0655                      u2191 06F8  
                    u1551 039A                      u1535 0379                      u1471 031D  
                    u1455 075B                      u2280 03EA                      u1720 0660  
                    u1800 0FE7                      u1560 03A0                      u1480 032F  
                    u2281 03E9                      u1625 0462                      u1721 065F  
                    u1705 0648                      u1801 0FE6                      u1561 039F  
                    u1545 038D                      u1481 032E                      u2290 03F1  
                    u1650 0486                      u1570 0433                      u1490 034E  
                    u2291 03F0                      u2275 03D1                      u1651 0485  
                    u1635 046E                      u1571 0432                      u1491 034D  
                    u1660 048B                      u1580 043E                      u1740 0673  
                    u1820 0FFB                      u1900 04A9                      u1661 048A  
                    u1645 047A                      u1581 043D                      u1741 0672  
                    u1725 065C                      u1821 0FFA                      u1805 0FE3  
                    u1901 04A8                      u1590 044F                      u1750 0678  
                    u1670 062E                      u1830 0F48                      u1910 04B6  
                    u2607 0544                      u1591 044E                      u1751 0677  
                    u1735 0667                      u1671 062D                      u1815 0FEF  
                    u1831 0F47                      u1911 04B5                      u1680 0639  
                    u1760 0FC4                      u1920 04C3                      u2617 0551  
                    u1681 0638                      u1761 0FC3                      u1921 04C2  
                    u1690 0644                      u1850 0F5A                      u1930 04D0  
                    u2627 0E7C                      u1691 0643                      u1851 0F59  
                    u1931 04CF                      u1780 0FD6                      u1860 0F64  
                    u1940 04DD                      u2637 0F8A                      u1781 0FD5  
                    u1861 0F63                      u1845 0F4C                      u1941 04DC  
                    u1950 04E9                      u2647 0F9E                      u2567 0E64  
                    u1775 0FC8                      u1951 04E8                      u1880 0F77  
                    u1960 04F5                      u2657 0FB3                      u2577 0509  
                    u1881 0F76                      u1865 0F60                      u1961 04F4  
                    u1970 07C1                      u1890 049E                      u2667 07F7  
                    u1971 07C0                      u2587 0517                      u1795 0FD7  
                    u1875 0F6B                      u1891 049D                      u1980 07CE  
                    u1981 07CD                      u2597 0537                      u1990 07DB  
                    u1991 07DA                      i1l69 0620         ?_Lcd_Write_String 0070  
                    _cont 005E                      _main 0026                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 0029          __end_of_ADC_read 0FBA  
         __end_of_Lcd_Cmd 0E84                     ??_isr 0020             ___fltol@sign1 002E  
         __end_of___aldiv 03B4                     ?_main 0070           __end_of___awdiv 0495  
         __end_of___awmod 0682           __end_of___fltol 042C           ___awdiv@divisor 0026  
         __end_of___lwdiv 1000                     i1l316 07FE           __end_of___lwmod 0F7C  
                   i1l841 02C4                     i1l835 0281                     i1l837 0316  
                   i1l848 02E0                     i1l849 02EC           ___awdiv@counter 002B  
                   _RCREG 001A                     _SPBRG 0099                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TXREG 0019  
     ___lmul@multiplicand 002A                     _mapeo 0774                     pclath 000A  
                   status 0003                     wtemp0 007E               mapeo@outmax 0045  
             mapeo@outmin 0044          __end_of_Lcd_Init 0561          __end_of_Lcd_Port 0F40  
         __initialization 0011              __end_of_main 025F           ??_configpuertos 0026  
                  ??_main 004E                    ?_mapeo 0042                    _ADRESH 001E  
        ___awdiv@dividend 0028                    _ANSELH 0189                    i1l2220 0289  
                  i1l2212 0260                    i1l2230 02A9                    i1l2214 0265  
                  i1l2240 02DA                    i1l2232 02AD                    i1l2224 0292  
                  i1l2216 0269                    i1l2250 030D                    i1l2242 02E4  
                  i1l2234 02BB                    i1l2226 0295                    i1l2218 0279  
                  i1l2252 030E                    i1l2244 02EE                    i1l2236 02CB  
                  i1l2228 02A2                    i1l2260 05D1                    i1l2246 0304  
                  i1l2238 02D6                    i1l2270 0604                    i1l2262 05EF  
                  i1l2248 0309                    i1l2280 061F                    i1l2272 060C  
                  i1l2264 05F8                    i1l2256 05C4                    i1l2274 0612  
                  i1l2266 05FF                    i1l2258 05C8                    i1l2276 0616  
                  i1l2268 0600                    i1l1910 07FB                    i1l2278 061C  
                  u240_20 02A8                    u240_21 02A7                    u241_25 02BC  
                  u242_20 02CA                    u250_20 05C8                    u242_21 02C9  
                  u250_21 05C7                    u251_20 05D1                    u251_21 05D0  
                  u243_25 02CF                    u244_20 02DA                    u236_20 0265  
                  u252_20 05F8                    u244_21 02D9                    u236_21 0264  
                  u252_21 05F7                    u245_20 02E0                    u237_20 0269  
                  u253_20 0604                    u245_21 02DF                    u237_21 0268  
                  u253_21 0603                    u246_20 02E4                    u238_20 0289  
                  u254_20 0612                    u246_21 02E3                    u238_21 0288  
                  u254_21 0611                    u247_20 02F9                    u255_20 061C  
                  u255_21 061B                    u247_25 02F4                    u239_25 029A  
                  u248_20 0309                    u248_21 0308                    u249_20 030D  
                  u249_21 030C                 ??_Lcd_Cmd 0027                    _SPBRGH 009A  
        __end_of___xxtofl 0317              ??_ADC_config 0028                    ___lmul 072C  
               ??___aldiv 003B      UART_mode_config@mode 0026                 ??___awdiv 002A  
               ??___awmod 002A          _UART_mode_config 0682                 ??___fltol 002A  
               ??___lwdiv 002A                 ??___lwmod 002A          ___awdiv@quotient 002D  
         ___awmod@divisor 0026           ___awmod@counter 002B              ?_setupINTOSC 0070  
                  saved_w 007E                 ?_ADC_read 0026        __end_of_ADC_config 07FB  
         Lcd_Set_Cursor@a 002A           Lcd_Set_Cursor@b 0029              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070   __end_of__initialization 0022  
       __end_of_Lcd_Clear 0E53                ___fltol@f1 0026           descomponer@cent 0035  
          __pcstackCOMMON 0070             __end_of_mapeo 07BB            _Lcd_Set_Cursor 0EB9  
         ADC_read@channel 0026                ??_ADC_read 0028                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_mapeo 0047                __pbssBANK0 0050  
              __pmaintext 0026                   ?___lmul 0026                _centesimas 005A  
              __pintentry 0004            ___lmul@product 002F    __end_of_Lcd_Set_Cursor 0EDB  
               ?___xxtofl 0070                ??_Lcd_Init 0029                ??_Lcd_Port 0026  
              __stringtab 0800            _Lcd_Write_Char 0E53                   _Lcd_Cmd 0E6B  
          _UART_RX_config 0E9E                   ___aldiv 0317                   ___awdiv 042C  
                 ___awmod 0627                   ___fltol 03B4                   ___lwdiv 0FBA  
                 ___lwmod 0F40                   _lecADC0 0050                   _lecADC1 0058  
                 _decimas 005B                 _ANSELbits 0188           ?_Lcd_Set_Cursor 0029  
                 __ptext1 0495                   __ptext2 0774                   __ptext3 072C  
                 __ptext4 0317                   __ptext5 06DA                   __ptext6 0561  
                 __ptext7 0F40                   __ptext8 0FBA                   __ptext9 0627  
                 _valADC0 0056                   _valADC1 0054                ??___xxtofl 0074  
        ___awmod@dividend 0028          ___aldiv@dividend 0037  __end_of_UART_mode_config 06DA  
       __end_of_inttochar 072C    __end_of_Lcd_Write_Char 0E6B      end_of_initialization 0022  
  __end_of_UART_RX_config 0EB9                 _RCSTAbits 0018          ___aldiv@quotient 003E  
               Lcd_Port@a 0026     __end_of_configpuertos 0E9E                 _PORTAbits 0005  
               _PORTBbits 0006                 _PORTDbits 0008             ??_descomponer 0033  
           ___xxtofl@sign 0078                 _TRISAbits 0085           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 002B         Lcd_Write_String@i 0029           ?_UART_RX_config 0026  
               _TXSTAbits 0098                 _Lcd_Clear 0E4C    UART_RX_config@baudrate 0026  
          __end_of___lmul 0774            _UART_read_char 07FB          _Lcd_Write_String 0EDB  
             _BAUDCTLbits 0187                mapeo@inmax 0043                mapeo@inmin 0042  
     start_initialization 0011                mapeo@valor 004D               __end_of_isr 0627  
     __end_of_descomponer 05C4         ADC_config@channel 0026                ?_Lcd_Clear 0070  
                ??___lmul 002E    __end_of_UART_read_char 07FF           Lcd_Write_Char@a 0028  
               ___latbits 0002            descomponer@dec 0037             __pcstackBANK0 0020  
          descomponer@num 0031            descomponer@pos 002F            descomponer@uni 0036  
         setupINTOSC@IRCF 0026                  ?_Lcd_Cmd 0070          ___lwdiv@dividend 0028  
        ??_Lcd_Set_Cursor 002A                  ?___aldiv 0033              inttochar@num 0026  
         ?_UART_read_char 0070                  ?___awdiv 0026                  ?___awmod 0026  
                ?___fltol 0026                  ?___lwdiv 0026                  ?___lwmod 0026  
               __pstrings 0800               _descomponer 0561                 _indicador 005D  
                _ADC_read 0F7C          ___lwdiv@quotient 002B         ?_UART_mode_config 0070  
         ___aldiv@divisor 0033         interrupt_function 0004           ___aldiv@counter 003C  
      ??_UART_mode_config 0026                 _inttochar 06DA                  _PIE1bits 008C  
                Lcd_Cmd@a 0028                  _PIR1bits 000C               ??_Lcd_Clear 0029  
              _ADCON0bits 001F               __stringbase 0805                _ADCON1bits 009F  
           ??_setupINTOSC 0026          ??_Lcd_Write_Char 0027          ??_UART_RX_config 0028  
                _Lcd_Init 04FD                  _Lcd_Port 0F04         ___lmul@multiplier 0026  
__end_of_Lcd_Write_String 0F04                ?_inttochar 0070                _ADC_config 07BB  
      __end_of__stringtab 0806                  ___xxtofl 025F           ___lwdiv@divisor 0026  
         ___lwdiv@counter 002D                  __ptext10 042C                  __ptext11 0E84  
                __ptext20 0E6B                  __ptext12 03B4                  __ptext21 0F04  
                __ptext13 0682                  __ptext22 0F7C                  __ptext14 0E9E  
                __ptext23 07BB                  __ptext15 0EDB                  __ptext24 05C4  
                __ptext16 0E53                  __ptext25 025F                  __ptext17 0EB9  
                __ptext26 07FB                  __ptext18 04FD                  __ptext19 0E4C  
     __end_of_setupINTOSC 04FD                  _unidades 005C                _INTCONbits 000B  
                intlevel1 0000          ___lwmod@dividend 0028               ??_inttochar 0026  
        ??_UART_read_char 0070                 stringcode 0800                _OSCCONbits 008F  
             ?_ADC_config 0026        Lcd_Set_Cursor@temp 002B             _configpuertos 0E84  
             _setupINTOSC 0495              ?_descomponer 002F           ___lwmod@divisor 0026  
         ___lwmod@counter 002B                  stringdir 0800                  stringtab 0800  
            ___aldiv@sign 003D  
