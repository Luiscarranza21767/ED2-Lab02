

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 27 12:07:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385     0000                     	;# 
   386     0001                     	;# 
   387     0002                     	;# 
   388     0003                     	;# 
   389     0004                     	;# 
   390     0005                     	;# 
   391     0006                     	;# 
   392     0007                     	;# 
   393     0008                     	;# 
   394     0009                     	;# 
   395     000A                     	;# 
   396     000B                     	;# 
   397     000C                     	;# 
   398     000D                     	;# 
   399     000E                     	;# 
   400     000E                     	;# 
   401     000F                     	;# 
   402     0010                     	;# 
   403     0011                     	;# 
   404     0012                     	;# 
   405     0013                     	;# 
   406     0014                     	;# 
   407     0015                     	;# 
   408     0015                     	;# 
   409     0016                     	;# 
   410     0017                     	;# 
   411     0018                     	;# 
   412     0019                     	;# 
   413     001A                     	;# 
   414     001B                     	;# 
   415     001B                     	;# 
   416     001C                     	;# 
   417     001D                     	;# 
   418     001E                     	;# 
   419     001F                     	;# 
   420     0081                     	;# 
   421     0085                     	;# 
   422     0086                     	;# 
   423     0087                     	;# 
   424     0088                     	;# 
   425     0089                     	;# 
   426     008C                     	;# 
   427     008D                     	;# 
   428     008E                     	;# 
   429     008F                     	;# 
   430     0090                     	;# 
   431     0091                     	;# 
   432     0092                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0093                     	;# 
   436     0094                     	;# 
   437     0095                     	;# 
   438     0096                     	;# 
   439     0097                     	;# 
   440     0098                     	;# 
   441     0099                     	;# 
   442     009A                     	;# 
   443     009B                     	;# 
   444     009C                     	;# 
   445     009D                     	;# 
   446     009E                     	;# 
   447     009F                     	;# 
   448     0105                     	;# 
   449     0107                     	;# 
   450     0108                     	;# 
   451     0109                     	;# 
   452     010C                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     010E                     	;# 
   456     010F                     	;# 
   457     0185                     	;# 
   458     0187                     	;# 
   459     0188                     	;# 
   460     0189                     	;# 
   461     018C                     	;# 
   462     018D                     	;# 
   463     0000                     	;# 
   464     0001                     	;# 
   465     0002                     	;# 
   466     0003                     	;# 
   467     0004                     	;# 
   468     0005                     	;# 
   469     0006                     	;# 
   470     0007                     	;# 
   471     0008                     	;# 
   472     0009                     	;# 
   473     000A                     	;# 
   474     000B                     	;# 
   475     000C                     	;# 
   476     000D                     	;# 
   477     000E                     	;# 
   478     000E                     	;# 
   479     000F                     	;# 
   480     0010                     	;# 
   481     0011                     	;# 
   482     0012                     	;# 
   483     0013                     	;# 
   484     0014                     	;# 
   485     0015                     	;# 
   486     0015                     	;# 
   487     0016                     	;# 
   488     0017                     	;# 
   489     0018                     	;# 
   490     0019                     	;# 
   491     001A                     	;# 
   492     001B                     	;# 
   493     001B                     	;# 
   494     001C                     	;# 
   495     001D                     	;# 
   496     001E                     	;# 
   497     001F                     	;# 
   498     0081                     	;# 
   499     0085                     	;# 
   500     0086                     	;# 
   501     0087                     	;# 
   502     0088                     	;# 
   503     0089                     	;# 
   504     008C                     	;# 
   505     008D                     	;# 
   506     008E                     	;# 
   507     008F                     	;# 
   508     0090                     	;# 
   509     0091                     	;# 
   510     0092                     	;# 
   511     0093                     	;# 
   512     0093                     	;# 
   513     0093                     	;# 
   514     0094                     	;# 
   515     0095                     	;# 
   516     0096                     	;# 
   517     0097                     	;# 
   518     0098                     	;# 
   519     0099                     	;# 
   520     009A                     	;# 
   521     009B                     	;# 
   522     009C                     	;# 
   523     009D                     	;# 
   524     009E                     	;# 
   525     009F                     	;# 
   526     0105                     	;# 
   527     0107                     	;# 
   528     0108                     	;# 
   529     0109                     	;# 
   530     010C                     	;# 
   531     010C                     	;# 
   532     010D                     	;# 
   533     010E                     	;# 
   534     010F                     	;# 
   535     0185                     	;# 
   536     0187                     	;# 
   537     0188                     	;# 
   538     0189                     	;# 
   539     018C                     	;# 
   540     018D                     	;# 
   541     0000                     	;# 
   542     0001                     	;# 
   543     0002                     	;# 
   544     0003                     	;# 
   545     0004                     	;# 
   546     0005                     	;# 
   547     0006                     	;# 
   548     0007                     	;# 
   549     0008                     	;# 
   550     0009                     	;# 
   551     000A                     	;# 
   552     000B                     	;# 
   553     000C                     	;# 
   554     000D                     	;# 
   555     000E                     	;# 
   556     000E                     	;# 
   557     000F                     	;# 
   558     0010                     	;# 
   559     0011                     	;# 
   560     0012                     	;# 
   561     0013                     	;# 
   562     0014                     	;# 
   563     0015                     	;# 
   564     0015                     	;# 
   565     0016                     	;# 
   566     0017                     	;# 
   567     0018                     	;# 
   568     0019                     	;# 
   569     001A                     	;# 
   570     001B                     	;# 
   571     001B                     	;# 
   572     001C                     	;# 
   573     001D                     	;# 
   574     001E                     	;# 
   575     001F                     	;# 
   576     0081                     	;# 
   577     0085                     	;# 
   578     0086                     	;# 
   579     0087                     	;# 
   580     0088                     	;# 
   581     0089                     	;# 
   582     008C                     	;# 
   583     008D                     	;# 
   584     008E                     	;# 
   585     008F                     	;# 
   586     0090                     	;# 
   587     0091                     	;# 
   588     0092                     	;# 
   589     0093                     	;# 
   590     0093                     	;# 
   591     0093                     	;# 
   592     0094                     	;# 
   593     0095                     	;# 
   594     0096                     	;# 
   595     0097                     	;# 
   596     0098                     	;# 
   597     0099                     	;# 
   598     009A                     	;# 
   599     009B                     	;# 
   600     009C                     	;# 
   601     009D                     	;# 
   602     009E                     	;# 
   603     009F                     	;# 
   604     0105                     	;# 
   605     0107                     	;# 
   606     0108                     	;# 
   607     0109                     	;# 
   608     010C                     	;# 
   609     010C                     	;# 
   610     010D                     	;# 
   611     010E                     	;# 
   612     010F                     	;# 
   613     0185                     	;# 
   614     0187                     	;# 
   615     0188                     	;# 
   616     0189                     	;# 
   617     018C                     	;# 
   618     018D                     	;# 
   619     0008                     _PORTD	set	8
   620     0006                     _PORTB	set	6
   621     0007                     _PORTCbits	set	7
   622     0008                     _PORTDbits	set	8
   623     0005                     _PORTAbits	set	5
   624     001E                     _ADRESH	set	30
   625     001F                     _ADCON0bits	set	31
   626     000C                     _PIR1bits	set	12
   627     0006                     _PORTBbits	set	6
   628     000B                     _INTCONbits	set	11
   629     0038                     _RC0	set	56
   630     0047                     _RD7	set	71
   631     0046                     _RD6	set	70
   632     0045                     _RD5	set	69
   633     0044                     _RD4	set	68
   634     0043                     _RD3	set	67
   635     0042                     _RD2	set	66
   636     0041                     _RD1	set	65
   637     0066                     _ADIF	set	102
   638     0087                     _TRISCbits	set	135
   639     0088                     _TRISD	set	136
   640     0081                     _OPTION_REGbits	set	129
   641     0095                     _WPUB	set	149
   642     0096                     _IOCB	set	150
   643     0086                     _TRISB	set	134
   644     009F                     _ADCON1bits	set	159
   645     008C                     _PIE1bits	set	140
   646     0085                     _TRISAbits	set	133
   647     008F                     _OSCCONbits	set	143
   648     0188                     _ANSELbits	set	392
   649                           
   650                           	psect	strings
   651     0800                     __pstrings:
   652     0800                     stringtab:
   653     0800                     __stringtab:
   654     0800                     stringcode:	
   655                           ;	String table - string pointers are 1 byte each
   656                           
   657     0800                     stringdir:
   658     0800  3008               	movlw	high stringdir
   659     0801  008A               	movwf	10
   660     0802  0804               	movf	4,w
   661     0803  0A84               	incf	4,f
   662     0804  0782               	addwf	2,f
   663     0805                     __stringbase:
   664     0805  3400               	retlw	0
   665     0806                     __end_of__stringtab:
   666     0806                     STR_1:
   667     0806  3453               	retlw	83	;'S'
   668     0807  3431               	retlw	49	;'1'
   669     0808  343A               	retlw	58	;':'
   670     0809  3420               	retlw	32	;' '
   671     080A  3420               	retlw	32	;' '
   672     080B  3420               	retlw	32	;' '
   673     080C  3453               	retlw	83	;'S'
   674     080D  3432               	retlw	50	;'2'
   675     080E  343A               	retlw	58	;':'
   676     080F  3420               	retlw	32	;' '
   677     0810  3420               	retlw	32	;' '
   678     0811  3453               	retlw	83	;'S'
   679     0812  3433               	retlw	51	;'3'
   680     0813  343A               	retlw	58	;':'
   681     0814  3400               	retlw	0
   682                           
   683                           	psect	cinit
   684     0011                     start_initialization:	
   685                           ; #config settings
   686                           
   687     0011                     __initialization:
   688                           
   689                           ; Clear objects allocated to BANK0
   690     0011  1283               	bcf	3,5	;RP0=0, select bank0
   691     0012  1303               	bcf	3,6	;RP1=0, select bank0
   692     0013  01CE               	clrf	__pbssBANK0& (0+127)
   693     0014  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   694     0015  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   695     0016  01D1               	clrf	(__pbssBANK0+3)& (0+127)
   696     0017  01D2               	clrf	(__pbssBANK0+4)& (0+127)
   697     0018  01D3               	clrf	(__pbssBANK0+5)& (0+127)
   698     0019  01D4               	clrf	(__pbssBANK0+6)& (0+127)
   699     001A  01D5               	clrf	(__pbssBANK0+7)& (0+127)
   700     001B  01D6               	clrf	(__pbssBANK0+8)& (0+127)
   701     001C  01D7               	clrf	(__pbssBANK0+9)& (0+127)
   702     001D  01D8               	clrf	(__pbssBANK0+10)& (0+127)
   703     001E  01D9               	clrf	(__pbssBANK0+11)& (0+127)
   704     001F  01DA               	clrf	(__pbssBANK0+12)& (0+127)
   705     0020  01DB               	clrf	(__pbssBANK0+13)& (0+127)
   706     0021  01DC               	clrf	(__pbssBANK0+14)& (0+127)
   707     0022                     end_of_initialization:	
   708                           ;End of C runtime variable initialization code
   709                           
   710     0022                     __end_of__initialization:
   711     0022  0183               	clrf	3
   712     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   713                           
   714                           	psect	bssBANK0
   715     004E                     __pbssBANK0:
   716     004E                     _lecADC0:
   717     004E                     	ds	4
   718     0052                     _cont:
   719     0052                     	ds	2
   720     0054                     _valADC1:
   721     0054                     	ds	2
   722     0056                     _valADC0:
   723     0056                     	ds	2
   724     0058                     _lecADC1:
   725     0058                     	ds	2
   726     005A                     _centesimas:
   727     005A                     	ds	1
   728     005B                     _decimas:
   729     005B                     	ds	1
   730     005C                     _unidades:
   731     005C                     	ds	1
   732                           
   733                           	psect	cstackCOMMON
   734     0070                     __pcstackCOMMON:
   735     0070                     ?_setupINTOSC:
   736     0070                     ?_configpuertos:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_Lcd_Init:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_Lcd_Clear:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_Lcd_Write_String:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_inttochar:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_Lcd_Write_Char:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_isr:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_main:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_Lcd_Port:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_Lcd_Cmd:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ?___xxtofl:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0070                     ___xxtofl@val:	
   770                           ; 4 bytes @ 0x0
   771                           
   772                           
   773                           ; 4 bytes @ 0x0
   774     0070                     	ds	4
   775     0074                     ??___xxtofl:
   776                           
   777                           ; 1 bytes @ 0x4
   778     0074                     	ds	4
   779     0078                     ___xxtofl@sign:
   780                           
   781                           ; 1 bytes @ 0x8
   782     0078                     	ds	1
   783     0079                     ___xxtofl@exp:
   784                           
   785                           ; 1 bytes @ 0x9
   786     0079                     	ds	1
   787     007A                     ___xxtofl@arg:
   788                           
   789                           ; 4 bytes @ 0xA
   790     007A                     	ds	4
   791                           
   792                           	psect	cstackBANK0
   793     0020                     __pcstackBANK0:
   794     0020                     ??_isr:
   795                           
   796                           ; 1 bytes @ 0x0
   797     0020                     	ds	6
   798     0026                     ??_setupINTOSC:
   799     0026                     ??_configpuertos:	
   800                           ; 1 bytes @ 0x6
   801                           
   802     0026                     ?_ADC_config:	
   803                           ; 1 bytes @ 0x6
   804                           
   805     0026                     ?_ADC_read:	
   806                           ; 1 bytes @ 0x6
   807                           
   808     0026                     ??_inttochar:	
   809                           ; 1 bytes @ 0x6
   810                           
   811     0026                     ??_Lcd_Port:	
   812                           ; 1 bytes @ 0x6
   813                           
   814     0026                     ?___awdiv:	
   815                           ; 1 bytes @ 0x6
   816                           
   817     0026                     ?___awmod:	
   818                           ; 2 bytes @ 0x6
   819                           
   820     0026                     ?___lwdiv:	
   821                           ; 2 bytes @ 0x6
   822                           
   823     0026                     ?___lwmod:	
   824                           ; 2 bytes @ 0x6
   825                           
   826     0026                     ?___lmul:	
   827                           ; 2 bytes @ 0x6
   828                           
   829     0026                     ?___fltol:	
   830                           ; 4 bytes @ 0x6
   831                           
   832     0026                     setupINTOSC@IRCF:	
   833                           ; 4 bytes @ 0x6
   834                           
   835     0026                     Lcd_Port@a:	
   836                           ; 1 bytes @ 0x6
   837                           
   838     0026                     inttochar@num:	
   839                           ; 1 bytes @ 0x6
   840                           
   841     0026                     ADC_config@channel:	
   842                           ; 1 bytes @ 0x6
   843                           
   844     0026                     ADC_read@channel:	
   845                           ; 2 bytes @ 0x6
   846                           
   847     0026                     ___awdiv@divisor:	
   848                           ; 2 bytes @ 0x6
   849                           
   850     0026                     ___awmod@divisor:	
   851                           ; 2 bytes @ 0x6
   852                           
   853     0026                     ___lwdiv@divisor:	
   854                           ; 2 bytes @ 0x6
   855                           
   856     0026                     ___lwmod@divisor:	
   857                           ; 2 bytes @ 0x6
   858                           
   859     0026                     ___lmul@multiplier:	
   860                           ; 2 bytes @ 0x6
   861                           
   862     0026                     ___fltol@f1:	
   863                           ; 4 bytes @ 0x6
   864                           
   865                           
   866                           ; 4 bytes @ 0x6
   867     0026                     	ds	1
   868     0027                     ??_Lcd_Write_Char:
   869     0027                     ??_Lcd_Cmd:	
   870                           ; 1 bytes @ 0x7
   871                           
   872                           
   873                           ; 1 bytes @ 0x7
   874     0027                     	ds	1
   875     0028                     ??_ADC_config:
   876     0028                     ??_ADC_read:	
   877                           ; 1 bytes @ 0x8
   878                           
   879     0028                     Lcd_Write_Char@a:	
   880                           ; 1 bytes @ 0x8
   881                           
   882     0028                     ___awdiv@dividend:	
   883                           ; 1 bytes @ 0x8
   884                           
   885     0028                     ___awmod@dividend:	
   886                           ; 2 bytes @ 0x8
   887                           
   888     0028                     ___lwdiv@dividend:	
   889                           ; 2 bytes @ 0x8
   890                           
   891     0028                     ___lwmod@dividend:	
   892                           ; 2 bytes @ 0x8
   893                           
   894                           
   895                           ; 2 bytes @ 0x8
   896     0028                     	ds	1
   897     0029                     ??_Lcd_Write_String:
   898     0029                     Lcd_Cmd@a:	
   899                           ; 1 bytes @ 0x9
   900                           
   901     0029                     Lcd_Write_String@i:	
   902                           ; 1 bytes @ 0x9
   903                           
   904                           
   905                           ; 2 bytes @ 0x9
   906     0029                     	ds	1
   907     002A                     ??_Lcd_Init:
   908     002A                     ??_Lcd_Clear:	
   909                           ; 1 bytes @ 0xA
   910                           
   911     002A                     ?_Lcd_Set_Cursor:	
   912                           ; 1 bytes @ 0xA
   913                           
   914     002A                     ??___awdiv:	
   915                           ; 1 bytes @ 0xA
   916                           
   917     002A                     ??___awmod:	
   918                           ; 1 bytes @ 0xA
   919                           
   920     002A                     ??___fltol:	
   921                           ; 1 bytes @ 0xA
   922                           
   923     002A                     ??___lwdiv:	
   924                           ; 1 bytes @ 0xA
   925                           
   926     002A                     ??___lwmod:	
   927                           ; 1 bytes @ 0xA
   928                           
   929     002A                     Lcd_Set_Cursor@b:	
   930                           ; 1 bytes @ 0xA
   931                           
   932     002A                     ___lmul@multiplicand:	
   933                           ; 1 bytes @ 0xA
   934                           
   935                           
   936                           ; 4 bytes @ 0xA
   937     002A                     	ds	1
   938     002B                     ??_Lcd_Set_Cursor:
   939     002B                     Lcd_Set_Cursor@a:	
   940                           ; 1 bytes @ 0xB
   941                           
   942     002B                     Lcd_Write_String@a:	
   943                           ; 1 bytes @ 0xB
   944                           
   945     002B                     ___awdiv@counter:	
   946                           ; 1 bytes @ 0xB
   947                           
   948     002B                     ___awmod@counter:	
   949                           ; 1 bytes @ 0xB
   950                           
   951     002B                     ___lwmod@counter:	
   952                           ; 1 bytes @ 0xB
   953                           
   954     002B                     ___lwdiv@quotient:	
   955                           ; 1 bytes @ 0xB
   956                           
   957                           
   958                           ; 2 bytes @ 0xB
   959     002B                     	ds	1
   960     002C                     Lcd_Set_Cursor@temp:
   961     002C                     ___awdiv@sign:	
   962                           ; 1 bytes @ 0xC
   963                           
   964     002C                     ___awmod@sign:	
   965                           ; 1 bytes @ 0xC
   966                           
   967                           
   968                           ; 1 bytes @ 0xC
   969     002C                     	ds	1
   970     002D                     ___lwdiv@counter:
   971     002D                     ___awdiv@quotient:	
   972                           ; 1 bytes @ 0xD
   973                           
   974                           
   975                           ; 2 bytes @ 0xD
   976     002D                     	ds	1
   977     002E                     ??___lmul:
   978     002E                     ___fltol@sign1:	
   979                           ; 1 bytes @ 0xE
   980                           
   981                           
   982                           ; 1 bytes @ 0xE
   983     002E                     	ds	1
   984     002F                     ?_descomponer:
   985     002F                     ___fltol@exp1:	
   986                           ; 1 bytes @ 0xF
   987                           
   988     002F                     descomponer@pos:	
   989                           ; 1 bytes @ 0xF
   990                           
   991     002F                     ___lmul@product:	
   992                           ; 2 bytes @ 0xF
   993                           
   994                           
   995                           ; 4 bytes @ 0xF
   996     002F                     	ds	2
   997     0031                     descomponer@num:
   998                           
   999                           ; 2 bytes @ 0x11
  1000     0031                     	ds	2
  1001     0033                     ??_descomponer:
  1002     0033                     ?___aldiv:	
  1003                           ; 1 bytes @ 0x13
  1004                           
  1005     0033                     ___aldiv@divisor:	
  1006                           ; 4 bytes @ 0x13
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0x13
  1010     0033                     	ds	2
  1011     0035                     descomponer@cent:
  1012                           
  1013                           ; 1 bytes @ 0x15
  1014     0035                     	ds	1
  1015     0036                     descomponer@uni:
  1016                           
  1017                           ; 1 bytes @ 0x16
  1018     0036                     	ds	1
  1019     0037                     descomponer@dec:
  1020     0037                     ___aldiv@dividend:	
  1021                           ; 1 bytes @ 0x17
  1022                           
  1023                           
  1024                           ; 4 bytes @ 0x17
  1025     0037                     	ds	4
  1026     003B                     ??___aldiv:
  1027                           
  1028                           ; 1 bytes @ 0x1B
  1029     003B                     	ds	1
  1030     003C                     ___aldiv@counter:
  1031                           
  1032                           ; 1 bytes @ 0x1C
  1033     003C                     	ds	1
  1034     003D                     ___aldiv@sign:
  1035                           
  1036                           ; 1 bytes @ 0x1D
  1037     003D                     	ds	1
  1038     003E                     ___aldiv@quotient:
  1039                           
  1040                           ; 4 bytes @ 0x1E
  1041     003E                     	ds	4
  1042     0042                     ?_mapeo:
  1043     0042                     mapeo@inmin:	
  1044                           ; 2 bytes @ 0x22
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x22
  1048     0042                     	ds	1
  1049     0043                     mapeo@inmax:
  1050                           
  1051                           ; 1 bytes @ 0x23
  1052     0043                     	ds	1
  1053     0044                     mapeo@outmin:
  1054                           
  1055                           ; 1 bytes @ 0x24
  1056     0044                     	ds	1
  1057     0045                     mapeo@outmax:
  1058                           
  1059                           ; 2 bytes @ 0x25
  1060     0045                     	ds	2
  1061     0047                     ??_mapeo:
  1062                           
  1063                           ; 1 bytes @ 0x27
  1064     0047                     	ds	4
  1065     004B                     mapeo@resultado:
  1066                           
  1067                           ; 2 bytes @ 0x2B
  1068     004B                     	ds	2
  1069     004D                     mapeo@valor:
  1070                           
  1071                           ; 1 bytes @ 0x2D
  1072     004D                     	ds	1
  1073     004E                     ??_main:
  1074                           
  1075                           	psect	maintext
  1076     0026                     __pmaintext:	
  1077                           ; 1 bytes @ 0x2E
  1078 ;;
  1079 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1080 ;;
  1081 ;; *************** function _main *****************
  1082 ;; Defined at:
  1083 ;;		line 78 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : B00/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels required when called: 5
  1103 ;; This function calls:
  1104 ;;		_ADC_config
  1105 ;;		_ADC_read
  1106 ;;		_Lcd_Clear
  1107 ;;		_Lcd_Init
  1108 ;;		_Lcd_Set_Cursor
  1109 ;;		_Lcd_Write_Char
  1110 ;;		_Lcd_Write_String
  1111 ;;		___fltol
  1112 ;;		_configpuertos
  1113 ;;		_descomponer
  1114 ;;		_inttochar
  1115 ;;		_mapeo
  1116 ;;		_setupINTOSC
  1117 ;; This function is called by:
  1118 ;;		Startup code after reset
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122     0026                     _main:	
  1123                           ;psect for function _main
  1124                           
  1125     0026                     l2125:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1128                           
  1129                           
  1130                           ;main.c: 79:     setupINTOSC(6);
  1131     0026  3006               	movlw	6
  1132     0027  120A  118A  2474  120A  118A  	fcall	_setupINTOSC
  1133                           
  1134                           ;main.c: 80:     configpuertos();
  1135     002C  120A  158A  2783  120A  118A  	fcall	_configpuertos
  1136                           
  1137                           ;main.c: 81:     ADC_config(0x03);
  1138     0031  3003               	movlw	3
  1139     0032  1283               	bcf	3,5	;RP0=0, select bank0
  1140     0033  1303               	bcf	3,6	;RP1=0, select bank0
  1141     0034  00A6               	movwf	ADC_config@channel
  1142     0035  3000               	movlw	0
  1143     0036  00A7               	movwf	ADC_config@channel+1
  1144     0037  120A  118A  2719  120A  118A  	fcall	_ADC_config
  1145                           
  1146                           ;main.c: 82:     Lcd_Init();
  1147     003C  120A  118A  239B  120A  118A  	fcall	_Lcd_Init
  1148                           
  1149                           ;main.c: 83:     Lcd_Clear();
  1150     0041  120A  158A  2748  120A  118A  	fcall	_Lcd_Clear
  1151                           
  1152                           ;main.c: 84:     Lcd_Set_Cursor(1,2);
  1153     0046  3002               	movlw	2
  1154     0047  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0048  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0049  00AA               	movwf	Lcd_Set_Cursor@b
  1157     004A  3001               	movlw	1
  1158     004B  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1159     0050                     l2127:
  1160                           
  1161                           ;main.c: 85:     Lcd_Write_String("S1:   S2:  S3:");
  1162     0050  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1163     0051  120A  118A  27D3  120A  118A  	fcall	_Lcd_Write_String
  1164     0056                     l2129:
  1165                           
  1166                           ;main.c: 90:         ADC_read(0);
  1167     0056  3000               	movlw	0
  1168     0057  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0058  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0059  00A6               	movwf	ADC_read@channel
  1171     005A  00A7               	movwf	ADC_read@channel+1
  1172     005B  120A  118A  2759  120A  118A  	fcall	_ADC_read
  1173     0060                     l2131:
  1174                           
  1175                           ;main.c: 91:         valADC0 = mapeo(lecADC0, 0, 255, 0, 500);
  1176     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1177     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1178     0062  01C2               	clrf	mapeo@inmin
  1179     0063  30FF               	movlw	255
  1180     0064  00C3               	movwf	mapeo@inmax
  1181     0065  01C4               	clrf	mapeo@outmin
  1182     0066  30F4               	movlw	244
  1183     0067  00C5               	movwf	mapeo@outmax
  1184     0068  3001               	movlw	1
  1185     0069  00C6               	movwf	mapeo@outmax+1
  1186     006A  0851               	movf	_lecADC0+3,w
  1187     006B  00A9               	movwf	___fltol@f1+3
  1188     006C  0850               	movf	_lecADC0+2,w
  1189     006D  00A8               	movwf	___fltol@f1+2
  1190     006E  084F               	movf	_lecADC0+1,w
  1191     006F  00A7               	movwf	___fltol@f1+1
  1192     0070  084E               	movf	_lecADC0,w
  1193     0071  00A6               	movwf	___fltol@f1
  1194     0072  120A  118A  2323  120A  118A  	fcall	___fltol
  1195     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1196     0078  1303               	bcf	3,6	;RP1=0, select bank0
  1197     0079  0826               	movf	?___fltol,w
  1198     007A  120A  118A  268C  120A  118A  	fcall	_mapeo
  1199     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1200     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0081  0843               	movf	?_mapeo+1,w
  1202     0082  00D7               	movwf	_valADC0+1
  1203     0083  0842               	movf	?_mapeo,w
  1204     0084  00D6               	movwf	_valADC0
  1205     0085                     l2133:
  1206                           
  1207                           ;main.c: 92:         unidades = inttochar(descomponer(2, valADC0));
  1208     0085  3002               	movlw	2
  1209     0086  00AF               	movwf	descomponer@pos
  1210     0087  3000               	movlw	0
  1211     0088  00B0               	movwf	descomponer@pos+1
  1212     0089  0857               	movf	_valADC0+1,w
  1213     008A  00B2               	movwf	descomponer@num+1
  1214     008B  0856               	movf	_valADC0,w
  1215     008C  00B1               	movwf	descomponer@num
  1216     008D  120A  118A  24DC  120A  118A  	fcall	_descomponer
  1217     0092  120A  118A  25F2  120A  118A  	fcall	_inttochar
  1218     0097  1283               	bcf	3,5	;RP0=0, select bank0
  1219     0098  1303               	bcf	3,6	;RP1=0, select bank0
  1220     0099  00DC               	movwf	_unidades
  1221     009A                     l2135:
  1222                           
  1223                           ;main.c: 93:         Lcd_Set_Cursor(2,1);
  1224     009A  01AA               	clrf	Lcd_Set_Cursor@b
  1225     009B  0AAA               	incf	Lcd_Set_Cursor@b,f
  1226     009C  3002               	movlw	2
  1227     009D  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1228     00A2                     l2137:
  1229                           
  1230                           ;main.c: 94:         Lcd_Write_Char(unidades);
  1231     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1232     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1233     00A4  085C               	movf	_unidades,w
  1234     00A5  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1235     00AA                     l2139:
  1236                           
  1237                           ;main.c: 95:         Lcd_Set_Cursor(2,2);
  1238     00AA  3002               	movlw	2
  1239     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1240     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1241     00AD  00AA               	movwf	Lcd_Set_Cursor@b
  1242     00AE  3002               	movlw	2
  1243     00AF  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1244     00B4                     l2141:
  1245                           
  1246                           ;main.c: 96:         Lcd_Write_Char('.');
  1247     00B4  302E               	movlw	46
  1248     00B5  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1249     00BA                     l2143:
  1250                           
  1251                           ;main.c: 97:         decimas = inttochar(descomponer(1, valADC0));
  1252     00BA  3001               	movlw	1
  1253     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1254     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1255     00BD  00AF               	movwf	descomponer@pos
  1256     00BE  3000               	movlw	0
  1257     00BF  00B0               	movwf	descomponer@pos+1
  1258     00C0  0857               	movf	_valADC0+1,w
  1259     00C1  00B2               	movwf	descomponer@num+1
  1260     00C2  0856               	movf	_valADC0,w
  1261     00C3  00B1               	movwf	descomponer@num
  1262     00C4  120A  118A  24DC  120A  118A  	fcall	_descomponer
  1263     00C9  120A  118A  25F2  120A  118A  	fcall	_inttochar
  1264     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1265     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1266     00D0  00DB               	movwf	_decimas
  1267     00D1                     l2145:
  1268                           
  1269                           ;main.c: 98:         Lcd_Set_Cursor(2,3);
  1270     00D1  3003               	movlw	3
  1271     00D2  00AA               	movwf	Lcd_Set_Cursor@b
  1272     00D3  3002               	movlw	2
  1273     00D4  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1274     00D9                     l2147:
  1275                           
  1276                           ;main.c: 99:         Lcd_Write_Char(decimas);
  1277     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1278     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1279     00DB  085B               	movf	_decimas,w
  1280     00DC  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1281     00E1                     l2149:
  1282                           
  1283                           ;main.c: 100:         centesimas = inttochar(descomponer(0, valADC0));
  1284     00E1  3000               	movlw	0
  1285     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1286     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1287     00E4  00AF               	movwf	descomponer@pos
  1288     00E5  00B0               	movwf	descomponer@pos+1
  1289     00E6  0857               	movf	_valADC0+1,w
  1290     00E7  00B2               	movwf	descomponer@num+1
  1291     00E8  0856               	movf	_valADC0,w
  1292     00E9  00B1               	movwf	descomponer@num
  1293     00EA  120A  118A  24DC  120A  118A  	fcall	_descomponer
  1294     00EF  120A  118A  25F2  120A  118A  	fcall	_inttochar
  1295     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1296     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1297     00F6  00DA               	movwf	_centesimas
  1298     00F7                     l2151:
  1299                           
  1300                           ;main.c: 101:         Lcd_Set_Cursor(2,4);
  1301     00F7  3004               	movlw	4
  1302     00F8  00AA               	movwf	Lcd_Set_Cursor@b
  1303     00F9  3002               	movlw	2
  1304     00FA  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1305     00FF                     l2153:
  1306                           
  1307                           ;main.c: 102:         Lcd_Write_Char(centesimas);
  1308     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1309     0100  1303               	bcf	3,6	;RP1=0, select bank0
  1310     0101  085A               	movf	_centesimas,w
  1311     0102  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1312     0107                     l2155:
  1313                           
  1314                           ;main.c: 103:         Lcd_Set_Cursor(2,5);
  1315     0107  3005               	movlw	5
  1316     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1317     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1318     010A  00AA               	movwf	Lcd_Set_Cursor@b
  1319     010B  3002               	movlw	2
  1320     010C  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1321     0111                     l2157:
  1322                           
  1323                           ;main.c: 104:         Lcd_Write_Char('V');
  1324     0111  3056               	movlw	86
  1325     0112  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1326     0117                     l2159:
  1327                           
  1328                           ;main.c: 107:         ADC_read(1);
  1329     0117  3001               	movlw	1
  1330     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1331     0119  1303               	bcf	3,6	;RP1=0, select bank0
  1332     011A  00A6               	movwf	ADC_read@channel
  1333     011B  3000               	movlw	0
  1334     011C  00A7               	movwf	ADC_read@channel+1
  1335     011D  120A  118A  2759  120A  118A  	fcall	_ADC_read
  1336     0122                     l2161:
  1337                           
  1338                           ;main.c: 108:         valADC1 = mapeo(lecADC1, 0, 255, 0, 500);
  1339     0122  1283               	bcf	3,5	;RP0=0, select bank0
  1340     0123  1303               	bcf	3,6	;RP1=0, select bank0
  1341     0124  01C2               	clrf	mapeo@inmin
  1342     0125  30FF               	movlw	255
  1343     0126  00C3               	movwf	mapeo@inmax
  1344     0127  01C4               	clrf	mapeo@outmin
  1345     0128  30F4               	movlw	244
  1346     0129  00C5               	movwf	mapeo@outmax
  1347     012A  3001               	movlw	1
  1348     012B  00C6               	movwf	mapeo@outmax+1
  1349     012C  0858               	movf	_lecADC1,w
  1350     012D  120A  118A  268C  120A  118A  	fcall	_mapeo
  1351     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1352     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1353     0134  0843               	movf	?_mapeo+1,w
  1354     0135  00D5               	movwf	_valADC1+1
  1355     0136  0842               	movf	?_mapeo,w
  1356     0137  00D4               	movwf	_valADC1
  1357     0138                     l2163:
  1358                           
  1359                           ;main.c: 109:         unidades = inttochar(descomponer(2, valADC1));
  1360     0138  3002               	movlw	2
  1361     0139  00AF               	movwf	descomponer@pos
  1362     013A  3000               	movlw	0
  1363     013B  00B0               	movwf	descomponer@pos+1
  1364     013C  0855               	movf	_valADC1+1,w
  1365     013D  00B2               	movwf	descomponer@num+1
  1366     013E  0854               	movf	_valADC1,w
  1367     013F  00B1               	movwf	descomponer@num
  1368     0140  120A  118A  24DC  120A  118A  	fcall	_descomponer
  1369     0145  120A  118A  25F2  120A  118A  	fcall	_inttochar
  1370     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1371     014B  1303               	bcf	3,6	;RP1=0, select bank0
  1372     014C  00DC               	movwf	_unidades
  1373     014D                     l2165:
  1374                           
  1375                           ;main.c: 110:         Lcd_Set_Cursor(2,7);
  1376     014D  3007               	movlw	7
  1377     014E  00AA               	movwf	Lcd_Set_Cursor@b
  1378     014F  3002               	movlw	2
  1379     0150  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1380     0155                     l2167:
  1381                           
  1382                           ;main.c: 111:         Lcd_Write_Char(unidades);
  1383     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1384     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1385     0157  085C               	movf	_unidades,w
  1386     0158  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1387     015D                     l2169:
  1388                           
  1389                           ;main.c: 112:         Lcd_Set_Cursor(2,8);
  1390     015D  3008               	movlw	8
  1391     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1392     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1393     0160  00AA               	movwf	Lcd_Set_Cursor@b
  1394     0161  3002               	movlw	2
  1395     0162  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1396     0167                     l2171:
  1397                           
  1398                           ;main.c: 113:         Lcd_Write_Char('.');
  1399     0167  302E               	movlw	46
  1400     0168  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1401     016D                     l2173:
  1402                           
  1403                           ;main.c: 114:         decimas = inttochar(descomponer(1, valADC1));
  1404     016D  3001               	movlw	1
  1405     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1406     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1407     0170  00AF               	movwf	descomponer@pos
  1408     0171  3000               	movlw	0
  1409     0172  00B0               	movwf	descomponer@pos+1
  1410     0173  0855               	movf	_valADC1+1,w
  1411     0174  00B2               	movwf	descomponer@num+1
  1412     0175  0854               	movf	_valADC1,w
  1413     0176  00B1               	movwf	descomponer@num
  1414     0177  120A  118A  24DC  120A  118A  	fcall	_descomponer
  1415     017C  120A  118A  25F2  120A  118A  	fcall	_inttochar
  1416     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1417     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1418     0183  00DB               	movwf	_decimas
  1419     0184                     l2175:
  1420                           
  1421                           ;main.c: 115:         Lcd_Set_Cursor(2,9);
  1422     0184  3009               	movlw	9
  1423     0185  00AA               	movwf	Lcd_Set_Cursor@b
  1424     0186  3002               	movlw	2
  1425     0187  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1426     018C                     l2177:
  1427                           
  1428                           ;main.c: 116:         Lcd_Write_Char(decimas);
  1429     018C  1283               	bcf	3,5	;RP0=0, select bank0
  1430     018D  1303               	bcf	3,6	;RP1=0, select bank0
  1431     018E  085B               	movf	_decimas,w
  1432     018F  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1433     0194                     l2179:
  1434                           
  1435                           ;main.c: 117:         centesimas = inttochar(descomponer(0, valADC1));
  1436     0194  3000               	movlw	0
  1437     0195  1283               	bcf	3,5	;RP0=0, select bank0
  1438     0196  1303               	bcf	3,6	;RP1=0, select bank0
  1439     0197  00AF               	movwf	descomponer@pos
  1440     0198  00B0               	movwf	descomponer@pos+1
  1441     0199  0855               	movf	_valADC1+1,w
  1442     019A  00B2               	movwf	descomponer@num+1
  1443     019B  0854               	movf	_valADC1,w
  1444     019C  00B1               	movwf	descomponer@num
  1445     019D  120A  118A  24DC  120A  118A  	fcall	_descomponer
  1446     01A2  120A  118A  25F2  120A  118A  	fcall	_inttochar
  1447     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1448     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1449     01A9  00DA               	movwf	_centesimas
  1450     01AA                     l2181:
  1451                           
  1452                           ;main.c: 118:         Lcd_Set_Cursor(2,10);
  1453     01AA  300A               	movlw	10
  1454     01AB  00AA               	movwf	Lcd_Set_Cursor@b
  1455     01AC  3002               	movlw	2
  1456     01AD  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1457     01B2                     l2183:
  1458                           
  1459                           ;main.c: 119:         Lcd_Write_Char(centesimas);
  1460     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1461     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1462     01B4  085A               	movf	_centesimas,w
  1463     01B5  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1464     01BA                     l2185:
  1465                           
  1466                           ;main.c: 120:         Lcd_Set_Cursor(2,11);
  1467     01BA  300B               	movlw	11
  1468     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1469     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1470     01BD  00AA               	movwf	Lcd_Set_Cursor@b
  1471     01BE  3002               	movlw	2
  1472     01BF  120A  158A  27A2  120A  118A  	fcall	_Lcd_Set_Cursor
  1473     01C4                     l2187:
  1474                           
  1475                           ;main.c: 121:         Lcd_Write_Char('V');
  1476     01C4  3056               	movlw	86
  1477     01C5  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  1478     01CA  2856               	goto	l2129
  1479     01CB  120A  118A  280E   	ljmp	start
  1480     01CE                     __end_of_main:
  1481                           
  1482                           	psect	text1
  1483     0474                     __ptext1:	
  1484 ;; *************** function _setupINTOSC *****************
  1485 ;; Defined at:
  1486 ;;		line 10 in file "oscilador.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  IRCF            1    wreg     unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  IRCF            1    6[BANK0 ] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       0       0       0       0
  1501 ;;      Locals:         0       1       0       0       0
  1502 ;;      Temps:          0       0       0       0       0
  1503 ;;      Totals:         0       1       0       0       0
  1504 ;;Total ram usage:        1 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 2
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514     0474                     _setupINTOSC:	
  1515                           ;psect for function _setupINTOSC
  1516                           
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1520                           ;setupINTOSC@IRCF stored from wreg
  1521     0474  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0475  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0476  00A6               	movwf	setupINTOSC@IRCF
  1524     0477                     l1791:
  1525                           
  1526                           ;oscilador.c: 11:     if (IRCF == 7){
  1527     0477  3007               	movlw	7
  1528     0478  0626               	xorwf	setupINTOSC@IRCF,w
  1529     0479  1D03               	btfss	3,2
  1530     047A  2C7C               	goto	u1811
  1531     047B  2C7D               	goto	u1810
  1532     047C                     u1811:
  1533     047C  2C81               	goto	l77
  1534     047D                     u1810:
  1535     047D                     l1793:
  1536                           
  1537                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1538     047D  3070               	movlw	112
  1539     047E  1683               	bsf	3,5	;RP0=1, select bank1
  1540     047F  1303               	bcf	3,6	;RP1=0, select bank1
  1541     0480  048F               	iorwf	15,f	;volatile
  1542     0481                     l77:	
  1543                           ;oscilador.c: 13:     }
  1544                           
  1545                           
  1546                           ;oscilador.c: 14:     if (IRCF == 6){
  1547     0481  3006               	movlw	6
  1548     0482  1283               	bcf	3,5	;RP0=0, select bank0
  1549     0483  0626               	xorwf	setupINTOSC@IRCF,w
  1550     0484  1D03               	btfss	3,2
  1551     0485  2C87               	goto	u1821
  1552     0486  2C88               	goto	u1820
  1553     0487                     u1821:
  1554     0487  2C8E               	goto	l78
  1555     0488                     u1820:
  1556     0488                     l1795:
  1557                           
  1558                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1559     0488  1683               	bsf	3,5	;RP0=1, select bank1
  1560     0489  1303               	bcf	3,6	;RP1=0, select bank1
  1561     048A  080F               	movf	15,w	;volatile
  1562     048B  398F               	andlw	-113
  1563     048C  3860               	iorlw	96
  1564     048D  008F               	movwf	15	;volatile
  1565     048E                     l78:	
  1566                           ;oscilador.c: 16:     }
  1567                           
  1568                           
  1569                           ;oscilador.c: 17:     if (IRCF == 5){
  1570     048E  3005               	movlw	5
  1571     048F  1283               	bcf	3,5	;RP0=0, select bank0
  1572     0490  0626               	xorwf	setupINTOSC@IRCF,w
  1573     0491  1D03               	btfss	3,2
  1574     0492  2C94               	goto	u1831
  1575     0493  2C95               	goto	u1830
  1576     0494                     u1831:
  1577     0494  2C9B               	goto	l79
  1578     0495                     u1830:
  1579     0495                     l1797:
  1580                           
  1581                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1582     0495  1683               	bsf	3,5	;RP0=1, select bank1
  1583     0496  1303               	bcf	3,6	;RP1=0, select bank1
  1584     0497  080F               	movf	15,w	;volatile
  1585     0498  398F               	andlw	-113
  1586     0499  3850               	iorlw	80
  1587     049A  008F               	movwf	15	;volatile
  1588     049B                     l79:	
  1589                           ;oscilador.c: 19:     }
  1590                           
  1591                           
  1592                           ;oscilador.c: 20:     if (IRCF == 4){
  1593     049B  3004               	movlw	4
  1594     049C  1283               	bcf	3,5	;RP0=0, select bank0
  1595     049D  0626               	xorwf	setupINTOSC@IRCF,w
  1596     049E  1D03               	btfss	3,2
  1597     049F  2CA1               	goto	u1841
  1598     04A0  2CA2               	goto	u1840
  1599     04A1                     u1841:
  1600     04A1  2CA8               	goto	l80
  1601     04A2                     u1840:
  1602     04A2                     l1799:
  1603                           
  1604                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1605     04A2  1683               	bsf	3,5	;RP0=1, select bank1
  1606     04A3  1303               	bcf	3,6	;RP1=0, select bank1
  1607     04A4  080F               	movf	15,w	;volatile
  1608     04A5  398F               	andlw	-113
  1609     04A6  3840               	iorlw	64
  1610     04A7  008F               	movwf	15	;volatile
  1611     04A8                     l80:	
  1612                           ;oscilador.c: 22:     }
  1613                           
  1614                           
  1615                           ;oscilador.c: 23:     if (IRCF == 3){
  1616     04A8  3003               	movlw	3
  1617     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1618     04AA  0626               	xorwf	setupINTOSC@IRCF,w
  1619     04AB  1D03               	btfss	3,2
  1620     04AC  2CAE               	goto	u1851
  1621     04AD  2CAF               	goto	u1850
  1622     04AE                     u1851:
  1623     04AE  2CB5               	goto	l81
  1624     04AF                     u1850:
  1625     04AF                     l1801:
  1626                           
  1627                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1628     04AF  1683               	bsf	3,5	;RP0=1, select bank1
  1629     04B0  1303               	bcf	3,6	;RP1=0, select bank1
  1630     04B1  080F               	movf	15,w	;volatile
  1631     04B2  398F               	andlw	-113
  1632     04B3  3830               	iorlw	48
  1633     04B4  008F               	movwf	15	;volatile
  1634     04B5                     l81:	
  1635                           ;oscilador.c: 25:     }
  1636                           
  1637                           
  1638                           ;oscilador.c: 26:     if (IRCF == 2){
  1639     04B5  3002               	movlw	2
  1640     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1641     04B7  0626               	xorwf	setupINTOSC@IRCF,w
  1642     04B8  1D03               	btfss	3,2
  1643     04B9  2CBB               	goto	u1861
  1644     04BA  2CBC               	goto	u1860
  1645     04BB                     u1861:
  1646     04BB  2CC2               	goto	l82
  1647     04BC                     u1860:
  1648     04BC                     l1803:
  1649                           
  1650                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1651     04BC  1683               	bsf	3,5	;RP0=1, select bank1
  1652     04BD  1303               	bcf	3,6	;RP1=0, select bank1
  1653     04BE  080F               	movf	15,w	;volatile
  1654     04BF  398F               	andlw	-113
  1655     04C0  3820               	iorlw	32
  1656     04C1  008F               	movwf	15	;volatile
  1657     04C2                     l82:	
  1658                           ;oscilador.c: 28:     }
  1659                           
  1660                           
  1661                           ;oscilador.c: 29:     if (IRCF == 1){
  1662     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1663     04C3  0326               	decf	setupINTOSC@IRCF,w
  1664     04C4  1D03               	btfss	3,2
  1665     04C5  2CC7               	goto	u1871
  1666     04C6  2CC8               	goto	u1870
  1667     04C7                     u1871:
  1668     04C7  2CCE               	goto	l83
  1669     04C8                     u1870:
  1670     04C8                     l1805:
  1671                           
  1672                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1673     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  1674     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  1675     04CA  080F               	movf	15,w	;volatile
  1676     04CB  398F               	andlw	-113
  1677     04CC  3810               	iorlw	16
  1678     04CD  008F               	movwf	15	;volatile
  1679     04CE                     l83:	
  1680                           ;oscilador.c: 31:     }
  1681                           
  1682                           
  1683                           ;oscilador.c: 32:     if (IRCF == 0){
  1684     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1685     04CF  0826               	movf	setupINTOSC@IRCF,w
  1686     04D0  1D03               	btfss	3,2
  1687     04D1  2CD3               	goto	u1881
  1688     04D2  2CD4               	goto	u1880
  1689     04D3                     u1881:
  1690     04D3  2CD8               	goto	l1809
  1691     04D4                     u1880:
  1692     04D4                     l1807:
  1693                           
  1694                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1695     04D4  308F               	movlw	-113
  1696     04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1697     04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1698     04D7  058F               	andwf	15,f	;volatile
  1699     04D8                     l1809:
  1700                           
  1701                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1702     04D8  1683               	bsf	3,5	;RP0=1, select bank1
  1703     04D9  1303               	bcf	3,6	;RP1=0, select bank1
  1704     04DA  140F               	bsf	15,0	;volatile
  1705     04DB                     l85:
  1706     04DB  0008               	return
  1707     04DC                     __end_of_setupINTOSC:
  1708                           
  1709                           	psect	text2
  1710     068C                     __ptext2:	
  1711 ;; *************** function _mapeo *****************
  1712 ;; Defined at:
  1713 ;;		line 110 in file "conversiones.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  valor           1    wreg     unsigned char 
  1716 ;;  inmin           1   34[BANK0 ] unsigned char 
  1717 ;;  inmax           1   35[BANK0 ] unsigned char 
  1718 ;;  outmin          1   36[BANK0 ] unsigned char 
  1719 ;;  outmax          2   37[BANK0 ] unsigned int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  valor           1   45[BANK0 ] unsigned char 
  1722 ;;  resultado       2   43[BANK0 ] unsigned int 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  2   34[BANK0 ] unsigned int 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         0       5       0       0       0
  1733 ;;      Locals:         0       3       0       0       0
  1734 ;;      Temps:          0       4       0       0       0
  1735 ;;      Totals:         0      12       0       0       0
  1736 ;;Total ram usage:       12 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 3
  1739 ;; This function calls:
  1740 ;;		___aldiv
  1741 ;;		___lmul
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747     068C                     _mapeo:	
  1748                           ;psect for function _mapeo
  1749                           
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _mapeo: [wreg+status,2+status,0+pclath+cstack]
  1753                           ;mapeo@valor stored from wreg
  1754     068C  1283               	bcf	3,5	;RP0=0, select bank0
  1755     068D  1303               	bcf	3,6	;RP1=0, select bank0
  1756     068E  00CD               	movwf	mapeo@valor
  1757     068F                     l1913:
  1758                           
  1759                           ;conversiones.c: 111:     uint16_t resultado;;conversiones.c: 112:     resultado = (((ou
      +                          tmax-outmin)* (long long)(valor-inmin))/inmax)+outmin;
  1760     068F  0843               	movf	mapeo@inmax,w
  1761     0690  00C7               	movwf	??_mapeo
  1762     0691  01C8               	clrf	??_mapeo+1
  1763     0692  01C9               	clrf	??_mapeo+2
  1764     0693  01CA               	clrf	??_mapeo+3
  1765     0694  084A               	movf	??_mapeo+3,w
  1766     0695  00B6               	movwf	___aldiv@divisor+3
  1767     0696  0849               	movf	??_mapeo+2,w
  1768     0697  00B5               	movwf	___aldiv@divisor+2
  1769     0698  0848               	movf	??_mapeo+1,w
  1770     0699  00B4               	movwf	___aldiv@divisor+1
  1771     069A  0847               	movf	??_mapeo,w
  1772     069B  00B3               	movwf	___aldiv@divisor
  1773     069C  0844               	movf	mapeo@outmin,w
  1774     069D  0245               	subwf	mapeo@outmax,w
  1775     069E  00A6               	movwf	___lmul@multiplier
  1776     069F  0846               	movf	mapeo@outmax+1,w
  1777     06A0  1C03               	skipc
  1778     06A1  0346               	decf	mapeo@outmax+1,w
  1779     06A2  00A7               	movwf	___lmul@multiplier+1
  1780     06A3  01A8               	clrf	___lmul@multiplier+2
  1781     06A4  01A9               	clrf	___lmul@multiplier+3
  1782     06A5  0842               	movf	mapeo@inmin,w
  1783     06A6  024D               	subwf	mapeo@valor,w
  1784     06A7  00AA               	movwf	___lmul@multiplicand
  1785     06A8  01AB               	clrf	___lmul@multiplicand+1
  1786     06A9  1C03               	skipc
  1787     06AA  03AB               	decf	___lmul@multiplicand+1,f
  1788     06AB  01AC               	clrf	___lmul@multiplicand+2
  1789     06AC  1BAB               	btfsc	___lmul@multiplicand+1,7
  1790     06AD  03AC               	decf	___lmul@multiplicand+2,f
  1791     06AE  082C               	movf	___lmul@multiplicand+2,w
  1792     06AF  00AD               	movwf	___lmul@multiplicand+3
  1793     06B0  120A  118A  2644  120A  118A  	fcall	___lmul
  1794     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1795     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1796     06B7  0829               	movf	?___lmul+3,w
  1797     06B8  00BA               	movwf	___aldiv@dividend+3
  1798     06B9  0828               	movf	?___lmul+2,w
  1799     06BA  00B9               	movwf	___aldiv@dividend+2
  1800     06BB  0827               	movf	?___lmul+1,w
  1801     06BC  00B8               	movwf	___aldiv@dividend+1
  1802     06BD  0826               	movf	?___lmul,w
  1803     06BE  00B7               	movwf	___aldiv@dividend
  1804     06BF  120A  118A  2286  120A  118A  	fcall	___aldiv
  1805     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1806     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1807     06C6  0844               	movf	mapeo@outmin,w
  1808     06C7  0733               	addwf	?___aldiv,w
  1809     06C8  00CB               	movwf	mapeo@resultado
  1810     06C9  3000               	movlw	0
  1811     06CA  1803               	skipnc
  1812     06CB  3001               	movlw	1
  1813     06CC  0734               	addwf	?___aldiv+1,w
  1814     06CD  00CC               	movwf	mapeo@resultado+1
  1815     06CE                     l1915:
  1816                           
  1817                           ;conversiones.c: 113:     return resultado;
  1818     06CE  084C               	movf	mapeo@resultado+1,w
  1819     06CF  00C3               	movwf	?_mapeo+1
  1820     06D0  084B               	movf	mapeo@resultado,w
  1821     06D1  00C2               	movwf	?_mapeo
  1822     06D2                     l267:
  1823     06D2  0008               	return
  1824     06D3                     __end_of_mapeo:
  1825                           
  1826                           	psect	text3
  1827     0644                     __ptext3:	
  1828 ;; *************** function ___lmul *****************
  1829 ;; Defined at:
  1830 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  multiplier      4    6[BANK0 ] unsigned long 
  1833 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  product         4   15[BANK0 ] unsigned long 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  4    6[BANK0 ] unsigned long 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       8       0       0       0
  1846 ;;      Locals:         0       4       0       0       0
  1847 ;;      Temps:          0       1       0       0       0
  1848 ;;      Totals:         0      13       0       0       0
  1849 ;;Total ram usage:       13 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 2
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_mapeo
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859     0644                     ___lmul:	
  1860                           ;psect for function ___lmul
  1861                           
  1862     0644                     l1607:	
  1863                           ;incstack = 0
  1864                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1865                           
  1866     0644  3000               	movlw	0
  1867     0645  1283               	bcf	3,5	;RP0=0, select bank0
  1868     0646  1303               	bcf	3,6	;RP1=0, select bank0
  1869     0647  00B2               	movwf	___lmul@product+3
  1870     0648  3000               	movlw	0
  1871     0649  00B1               	movwf	___lmul@product+2
  1872     064A  3000               	movlw	0
  1873     064B  00B0               	movwf	___lmul@product+1
  1874     064C  3000               	movlw	0
  1875     064D  00AF               	movwf	___lmul@product
  1876     064E                     l1609:
  1877     064E  1C26               	btfss	___lmul@multiplier,0
  1878     064F  2E51               	goto	u1341
  1879     0650  2E52               	goto	u1340
  1880     0651                     u1341:
  1881     0651  2E69               	goto	l1613
  1882     0652                     u1340:
  1883     0652                     l1611:
  1884     0652  082A               	movf	___lmul@multiplicand,w
  1885     0653  07AF               	addwf	___lmul@product,f
  1886     0654  082B               	movf	___lmul@multiplicand+1,w
  1887     0655  1103               	clrz
  1888     0656  1803               	skipnc
  1889     0657  3E01               	addlw	1
  1890     0658  1903               	skipnz
  1891     0659  2E5B               	goto	u1351
  1892     065A  07B0               	addwf	___lmul@product+1,f
  1893     065B                     u1351:
  1894     065B  082C               	movf	___lmul@multiplicand+2,w
  1895     065C  1103               	clrz
  1896     065D  1803               	skipnc
  1897     065E  3E01               	addlw	1
  1898     065F  1903               	skipnz
  1899     0660  2E62               	goto	u1352
  1900     0661  07B1               	addwf	___lmul@product+2,f
  1901     0662                     u1352:
  1902     0662  082D               	movf	___lmul@multiplicand+3,w
  1903     0663  1103               	clrz
  1904     0664  1803               	skipnc
  1905     0665  3E01               	addlw	1
  1906     0666  1903               	skipnz
  1907     0667  2E69               	goto	u1353
  1908     0668  07B2               	addwf	___lmul@product+3,f
  1909     0669                     u1353:
  1910     0669                     l1613:
  1911     0669  3001               	movlw	1
  1912     066A  00AE               	movwf	??___lmul
  1913     066B                     u1365:
  1914     066B  1003               	clrc
  1915     066C  0DAA               	rlf	___lmul@multiplicand,f
  1916     066D  0DAB               	rlf	___lmul@multiplicand+1,f
  1917     066E  0DAC               	rlf	___lmul@multiplicand+2,f
  1918     066F  0DAD               	rlf	___lmul@multiplicand+3,f
  1919     0670  0BAE               	decfsz	??___lmul,f
  1920     0671  2E6B               	goto	u1365
  1921     0672                     l1615:
  1922     0672  3001               	movlw	1
  1923     0673                     u1375:
  1924     0673  1003               	clrc
  1925     0674  0CA9               	rrf	___lmul@multiplier+3,f
  1926     0675  0CA8               	rrf	___lmul@multiplier+2,f
  1927     0676  0CA7               	rrf	___lmul@multiplier+1,f
  1928     0677  0CA6               	rrf	___lmul@multiplier,f
  1929     0678  3EFF               	addlw	-1
  1930     0679  1D03               	skipz
  1931     067A  2E73               	goto	u1375
  1932     067B  0829               	movf	___lmul@multiplier+3,w
  1933     067C  0428               	iorwf	___lmul@multiplier+2,w
  1934     067D  0427               	iorwf	___lmul@multiplier+1,w
  1935     067E  0426               	iorwf	___lmul@multiplier,w
  1936     067F  1D03               	skipz
  1937     0680  2E82               	goto	u1381
  1938     0681  2E83               	goto	u1380
  1939     0682                     u1381:
  1940     0682  2E4E               	goto	l1609
  1941     0683                     u1380:
  1942     0683                     l1617:
  1943     0683  0832               	movf	___lmul@product+3,w
  1944     0684  00A9               	movwf	?___lmul+3
  1945     0685  0831               	movf	___lmul@product+2,w
  1946     0686  00A8               	movwf	?___lmul+2
  1947     0687  0830               	movf	___lmul@product+1,w
  1948     0688  00A7               	movwf	?___lmul+1
  1949     0689  082F               	movf	___lmul@product,w
  1950     068A  00A6               	movwf	?___lmul
  1951     068B                     l367:
  1952     068B  0008               	return
  1953     068C                     __end_of___lmul:
  1954                           
  1955                           	psect	text4
  1956     0286                     __ptext4:	
  1957 ;; *************** function ___aldiv *****************
  1958 ;; Defined at:
  1959 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  divisor         4   19[BANK0 ] long 
  1962 ;;  dividend        4   23[BANK0 ] long 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  quotient        4   30[BANK0 ] long 
  1965 ;;  sign            1   29[BANK0 ] unsigned char 
  1966 ;;  counter         1   28[BANK0 ] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  4   19[BANK0 ] long 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       8       0       0       0
  1977 ;;      Locals:         0       6       0       0       0
  1978 ;;      Temps:          0       1       0       0       0
  1979 ;;      Totals:         0      15       0       0       0
  1980 ;;Total ram usage:       15 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 2
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_mapeo
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990     0286                     ___aldiv:	
  1991                           ;psect for function ___aldiv
  1992                           
  1993     0286                     l1621:	
  1994                           ;incstack = 0
  1995                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1996                           
  1997     0286  1283               	bcf	3,5	;RP0=0, select bank0
  1998     0287  1303               	bcf	3,6	;RP1=0, select bank0
  1999     0288  01BD               	clrf	___aldiv@sign
  2000     0289                     l1623:
  2001     0289  1FB6               	btfss	___aldiv@divisor+3,7
  2002     028A  2A8C               	goto	u1391
  2003     028B  2A8D               	goto	u1390
  2004     028C                     u1391:
  2005     028C  2A9A               	goto	l418
  2006     028D                     u1390:
  2007     028D                     l1625:
  2008     028D  09B3               	comf	___aldiv@divisor,f
  2009     028E  09B4               	comf	___aldiv@divisor+1,f
  2010     028F  09B5               	comf	___aldiv@divisor+2,f
  2011     0290  09B6               	comf	___aldiv@divisor+3,f
  2012     0291  0AB3               	incf	___aldiv@divisor,f
  2013     0292  1903               	skipnz
  2014     0293  0AB4               	incf	___aldiv@divisor+1,f
  2015     0294  1903               	skipnz
  2016     0295  0AB5               	incf	___aldiv@divisor+2,f
  2017     0296  1903               	skipnz
  2018     0297  0AB6               	incf	___aldiv@divisor+3,f
  2019     0298  01BD               	clrf	___aldiv@sign
  2020     0299  0ABD               	incf	___aldiv@sign,f
  2021     029A                     l418:
  2022     029A  1FBA               	btfss	___aldiv@dividend+3,7
  2023     029B  2A9D               	goto	u1401
  2024     029C  2A9E               	goto	u1400
  2025     029D                     u1401:
  2026     029D  2AAD               	goto	l1631
  2027     029E                     u1400:
  2028     029E                     l1627:
  2029     029E  09B7               	comf	___aldiv@dividend,f
  2030     029F  09B8               	comf	___aldiv@dividend+1,f
  2031     02A0  09B9               	comf	___aldiv@dividend+2,f
  2032     02A1  09BA               	comf	___aldiv@dividend+3,f
  2033     02A2  0AB7               	incf	___aldiv@dividend,f
  2034     02A3  1903               	skipnz
  2035     02A4  0AB8               	incf	___aldiv@dividend+1,f
  2036     02A5  1903               	skipnz
  2037     02A6  0AB9               	incf	___aldiv@dividend+2,f
  2038     02A7  1903               	skipnz
  2039     02A8  0ABA               	incf	___aldiv@dividend+3,f
  2040     02A9                     l1629:
  2041     02A9  3001               	movlw	1
  2042     02AA  00BB               	movwf	??___aldiv
  2043     02AB  083B               	movf	??___aldiv,w
  2044     02AC  06BD               	xorwf	___aldiv@sign,f
  2045     02AD                     l1631:
  2046     02AD  3000               	movlw	0
  2047     02AE  00C1               	movwf	___aldiv@quotient+3
  2048     02AF  3000               	movlw	0
  2049     02B0  00C0               	movwf	___aldiv@quotient+2
  2050     02B1  3000               	movlw	0
  2051     02B2  00BF               	movwf	___aldiv@quotient+1
  2052     02B3  3000               	movlw	0
  2053     02B4  00BE               	movwf	___aldiv@quotient
  2054     02B5                     l1633:
  2055     02B5  0836               	movf	___aldiv@divisor+3,w
  2056     02B6  0435               	iorwf	___aldiv@divisor+2,w
  2057     02B7  0434               	iorwf	___aldiv@divisor+1,w
  2058     02B8  0433               	iorwf	___aldiv@divisor,w
  2059     02B9  1903               	skipnz
  2060     02BA  2ABC               	goto	u1411
  2061     02BB  2ABD               	goto	u1410
  2062     02BC                     u1411:
  2063     02BC  2B0A               	goto	l1653
  2064     02BD                     u1410:
  2065     02BD                     l1635:
  2066     02BD  01BC               	clrf	___aldiv@counter
  2067     02BE  0ABC               	incf	___aldiv@counter,f
  2068     02BF  2ACD               	goto	l1639
  2069     02C0                     l1637:
  2070     02C0  3001               	movlw	1
  2071     02C1  00BB               	movwf	??___aldiv
  2072     02C2                     u1425:
  2073     02C2  1003               	clrc
  2074     02C3  0DB3               	rlf	___aldiv@divisor,f
  2075     02C4  0DB4               	rlf	___aldiv@divisor+1,f
  2076     02C5  0DB5               	rlf	___aldiv@divisor+2,f
  2077     02C6  0DB6               	rlf	___aldiv@divisor+3,f
  2078     02C7  0BBB               	decfsz	??___aldiv,f
  2079     02C8  2AC2               	goto	u1425
  2080     02C9  3001               	movlw	1
  2081     02CA  00BB               	movwf	??___aldiv
  2082     02CB  083B               	movf	??___aldiv,w
  2083     02CC  07BC               	addwf	___aldiv@counter,f
  2084     02CD                     l1639:
  2085     02CD  1FB6               	btfss	___aldiv@divisor+3,7
  2086     02CE  2AD0               	goto	u1431
  2087     02CF  2AD1               	goto	u1430
  2088     02D0                     u1431:
  2089     02D0  2AC0               	goto	l1637
  2090     02D1                     u1430:
  2091     02D1                     l1641:
  2092     02D1  3001               	movlw	1
  2093     02D2  00BB               	movwf	??___aldiv
  2094     02D3                     u1445:
  2095     02D3  1003               	clrc
  2096     02D4  0DBE               	rlf	___aldiv@quotient,f
  2097     02D5  0DBF               	rlf	___aldiv@quotient+1,f
  2098     02D6  0DC0               	rlf	___aldiv@quotient+2,f
  2099     02D7  0DC1               	rlf	___aldiv@quotient+3,f
  2100     02D8  0BBB               	decfsz	??___aldiv,f
  2101     02D9  2AD3               	goto	u1445
  2102     02DA                     l1643:
  2103     02DA  0836               	movf	___aldiv@divisor+3,w
  2104     02DB  023A               	subwf	___aldiv@dividend+3,w
  2105     02DC  1D03               	skipz
  2106     02DD  2AE8               	goto	u1455
  2107     02DE  0835               	movf	___aldiv@divisor+2,w
  2108     02DF  0239               	subwf	___aldiv@dividend+2,w
  2109     02E0  1D03               	skipz
  2110     02E1  2AE8               	goto	u1455
  2111     02E2  0834               	movf	___aldiv@divisor+1,w
  2112     02E3  0238               	subwf	___aldiv@dividend+1,w
  2113     02E4  1D03               	skipz
  2114     02E5  2AE8               	goto	u1455
  2115     02E6  0833               	movf	___aldiv@divisor,w
  2116     02E7  0237               	subwf	___aldiv@dividend,w
  2117     02E8                     u1455:
  2118     02E8  1C03               	skipc
  2119     02E9  2AEB               	goto	u1451
  2120     02EA  2AEC               	goto	u1450
  2121     02EB                     u1451:
  2122     02EB  2AFB               	goto	l1649
  2123     02EC                     u1450:
  2124     02EC                     l1645:
  2125     02EC  0833               	movf	___aldiv@divisor,w
  2126     02ED  02B7               	subwf	___aldiv@dividend,f
  2127     02EE  0834               	movf	___aldiv@divisor+1,w
  2128     02EF  1C03               	skipc
  2129     02F0  0F34               	incfsz	___aldiv@divisor+1,w
  2130     02F1  02B8               	subwf	___aldiv@dividend+1,f
  2131     02F2  0835               	movf	___aldiv@divisor+2,w
  2132     02F3  1C03               	skipc
  2133     02F4  0F35               	incfsz	___aldiv@divisor+2,w
  2134     02F5  02B9               	subwf	___aldiv@dividend+2,f
  2135     02F6  0836               	movf	___aldiv@divisor+3,w
  2136     02F7  1C03               	skipc
  2137     02F8  0F36               	incfsz	___aldiv@divisor+3,w
  2138     02F9  02BA               	subwf	___aldiv@dividend+3,f
  2139     02FA                     l1647:
  2140     02FA  143E               	bsf	___aldiv@quotient,0
  2141     02FB                     l1649:
  2142     02FB  3001               	movlw	1
  2143     02FC                     u1465:
  2144     02FC  1003               	clrc
  2145     02FD  0CB6               	rrf	___aldiv@divisor+3,f
  2146     02FE  0CB5               	rrf	___aldiv@divisor+2,f
  2147     02FF  0CB4               	rrf	___aldiv@divisor+1,f
  2148     0300  0CB3               	rrf	___aldiv@divisor,f
  2149     0301  3EFF               	addlw	-1
  2150     0302  1D03               	skipz
  2151     0303  2AFC               	goto	u1465
  2152     0304                     l1651:
  2153     0304  3001               	movlw	1
  2154     0305  02BC               	subwf	___aldiv@counter,f
  2155     0306  1D03               	btfss	3,2
  2156     0307  2B09               	goto	u1471
  2157     0308  2B0A               	goto	u1470
  2158     0309                     u1471:
  2159     0309  2AD1               	goto	l1641
  2160     030A                     u1470:
  2161     030A                     l1653:
  2162     030A  083D               	movf	___aldiv@sign,w
  2163     030B  1903               	btfsc	3,2
  2164     030C  2B0E               	goto	u1481
  2165     030D  2B0F               	goto	u1480
  2166     030E                     u1481:
  2167     030E  2B1A               	goto	l1657
  2168     030F                     u1480:
  2169     030F                     l1655:
  2170     030F  09BE               	comf	___aldiv@quotient,f
  2171     0310  09BF               	comf	___aldiv@quotient+1,f
  2172     0311  09C0               	comf	___aldiv@quotient+2,f
  2173     0312  09C1               	comf	___aldiv@quotient+3,f
  2174     0313  0ABE               	incf	___aldiv@quotient,f
  2175     0314  1903               	skipnz
  2176     0315  0ABF               	incf	___aldiv@quotient+1,f
  2177     0316  1903               	skipnz
  2178     0317  0AC0               	incf	___aldiv@quotient+2,f
  2179     0318  1903               	skipnz
  2180     0319  0AC1               	incf	___aldiv@quotient+3,f
  2181     031A                     l1657:
  2182     031A  0841               	movf	___aldiv@quotient+3,w
  2183     031B  00B6               	movwf	?___aldiv+3
  2184     031C  0840               	movf	___aldiv@quotient+2,w
  2185     031D  00B5               	movwf	?___aldiv+2
  2186     031E  083F               	movf	___aldiv@quotient+1,w
  2187     031F  00B4               	movwf	?___aldiv+1
  2188     0320  083E               	movf	___aldiv@quotient,w
  2189     0321  00B3               	movwf	?___aldiv
  2190     0322                     l428:
  2191     0322  0008               	return
  2192     0323                     __end_of___aldiv:
  2193                           
  2194                           	psect	text5
  2195     05F2                     __ptext5:	
  2196 ;; *************** function _inttochar *****************
  2197 ;; Defined at:
  2198 ;;		line 12 in file "conversiones.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  num             1    wreg     unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  num             1    6[BANK0 ] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      unsigned char 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       1       0       0       0
  2214 ;;      Temps:          0       0       0       0       0
  2215 ;;      Totals:         0       1       0       0       0
  2216 ;;Total ram usage:        1 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 2
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226     05F2                     _inttochar:	
  2227                           ;psect for function _inttochar
  2228                           
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2232                           ;inttochar@num stored from wreg
  2233     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2234     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2235     05F4  00A6               	movwf	inttochar@num
  2236     05F5                     l1943:
  2237                           
  2238                           ;conversiones.c: 13:     if(num == 0){
  2239     05F5  0826               	movf	inttochar@num,w
  2240     05F6  1D03               	btfss	3,2
  2241     05F7  2DF9               	goto	u2011
  2242     05F8  2DFA               	goto	u2010
  2243     05F9                     u2011:
  2244     05F9  2DFC               	goto	l1951
  2245     05FA                     u2010:
  2246     05FA                     l1945:
  2247                           
  2248                           ;conversiones.c: 14:         return '0';
  2249     05FA  3030               	movlw	48
  2250     05FB  2E43               	goto	l213
  2251     05FC                     l1951:
  2252     05FC  0326               	decf	inttochar@num,w
  2253     05FD  1D03               	btfss	3,2
  2254     05FE  2E00               	goto	u2021
  2255     05FF  2E01               	goto	u2020
  2256     0600                     u2021:
  2257     0600  2E03               	goto	l1959
  2258     0601                     u2020:
  2259     0601                     l1953:
  2260                           
  2261                           ;conversiones.c: 17:         return '1';
  2262     0601  3031               	movlw	49
  2263     0602  2E43               	goto	l213
  2264     0603                     l1959:
  2265     0603  3002               	movlw	2
  2266     0604  0626               	xorwf	inttochar@num,w
  2267     0605  1D03               	btfss	3,2
  2268     0606  2E08               	goto	u2031
  2269     0607  2E09               	goto	u2030
  2270     0608                     u2031:
  2271     0608  2E0B               	goto	l1967
  2272     0609                     u2030:
  2273     0609                     l1961:
  2274                           
  2275                           ;conversiones.c: 20:         return '2';
  2276     0609  3032               	movlw	50
  2277     060A  2E43               	goto	l213
  2278     060B                     l1967:
  2279     060B  3003               	movlw	3
  2280     060C  0626               	xorwf	inttochar@num,w
  2281     060D  1D03               	btfss	3,2
  2282     060E  2E10               	goto	u2041
  2283     060F  2E11               	goto	u2040
  2284     0610                     u2041:
  2285     0610  2E13               	goto	l1975
  2286     0611                     u2040:
  2287     0611                     l1969:
  2288                           
  2289                           ;conversiones.c: 23:         return '3';
  2290     0611  3033               	movlw	51
  2291     0612  2E43               	goto	l213
  2292     0613                     l1975:
  2293     0613  3004               	movlw	4
  2294     0614  0626               	xorwf	inttochar@num,w
  2295     0615  1D03               	btfss	3,2
  2296     0616  2E18               	goto	u2051
  2297     0617  2E19               	goto	u2050
  2298     0618                     u2051:
  2299     0618  2E1B               	goto	l1983
  2300     0619                     u2050:
  2301     0619                     l1977:
  2302                           
  2303                           ;conversiones.c: 26:         return '4';
  2304     0619  3034               	movlw	52
  2305     061A  2E43               	goto	l213
  2306     061B                     l1983:
  2307     061B  3005               	movlw	5
  2308     061C  0626               	xorwf	inttochar@num,w
  2309     061D  1D03               	btfss	3,2
  2310     061E  2E20               	goto	u2061
  2311     061F  2E21               	goto	u2060
  2312     0620                     u2061:
  2313     0620  2E23               	goto	l1991
  2314     0621                     u2060:
  2315     0621                     l1985:
  2316                           
  2317                           ;conversiones.c: 29:         return '5';
  2318     0621  3035               	movlw	53
  2319     0622  2E43               	goto	l213
  2320     0623                     l1991:
  2321     0623  3006               	movlw	6
  2322     0624  0626               	xorwf	inttochar@num,w
  2323     0625  1D03               	btfss	3,2
  2324     0626  2E28               	goto	u2071
  2325     0627  2E29               	goto	u2070
  2326     0628                     u2071:
  2327     0628  2E2B               	goto	l1999
  2328     0629                     u2070:
  2329     0629                     l1993:
  2330                           
  2331                           ;conversiones.c: 32:         return '6';
  2332     0629  3036               	movlw	54
  2333     062A  2E43               	goto	l213
  2334     062B                     l1999:
  2335     062B  3007               	movlw	7
  2336     062C  0626               	xorwf	inttochar@num,w
  2337     062D  1D03               	btfss	3,2
  2338     062E  2E30               	goto	u2081
  2339     062F  2E31               	goto	u2080
  2340     0630                     u2081:
  2341     0630  2E33               	goto	l2007
  2342     0631                     u2080:
  2343     0631                     l2001:
  2344                           
  2345                           ;conversiones.c: 35:         return '7';
  2346     0631  3037               	movlw	55
  2347     0632  2E43               	goto	l213
  2348     0633                     l2007:
  2349     0633  3008               	movlw	8
  2350     0634  0626               	xorwf	inttochar@num,w
  2351     0635  1D03               	btfss	3,2
  2352     0636  2E38               	goto	u2091
  2353     0637  2E39               	goto	u2090
  2354     0638                     u2091:
  2355     0638  2E3B               	goto	l2015
  2356     0639                     u2090:
  2357     0639                     l2009:
  2358                           
  2359                           ;conversiones.c: 38:         return '8';
  2360     0639  3038               	movlw	56
  2361     063A  2E43               	goto	l213
  2362     063B                     l2015:
  2363     063B  3009               	movlw	9
  2364     063C  0626               	xorwf	inttochar@num,w
  2365     063D  1D03               	btfss	3,2
  2366     063E  2E40               	goto	u2101
  2367     063F  2E41               	goto	u2100
  2368     0640                     u2101:
  2369     0640  2E43               	goto	l226
  2370     0641                     u2100:
  2371     0641                     l2017:
  2372                           
  2373                           ;conversiones.c: 41:         return '9';
  2374     0641  3039               	movlw	57
  2375     0642  2E43               	goto	l213
  2376     0643                     l226:
  2377     0643                     l213:
  2378     0643  0008               	return
  2379     0644                     __end_of_inttochar:
  2380                           
  2381                           	psect	text6
  2382     04DC                     __ptext6:	
  2383 ;; *************** function _descomponer *****************
  2384 ;; Defined at:
  2385 ;;		line 45 in file "conversiones.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  pos             2   15[BANK0 ] int 
  2388 ;;  num             2   17[BANK0 ] unsigned int 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  dec             1   23[BANK0 ] unsigned char 
  2391 ;;  uni             1   22[BANK0 ] unsigned char 
  2392 ;;  cent            1   21[BANK0 ] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      unsigned char 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       4       0       0       0
  2403 ;;      Locals:         0       3       0       0       0
  2404 ;;      Temps:          0       2       0       0       0
  2405 ;;      Totals:         0       9       0       0       0
  2406 ;;Total ram usage:        9 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 3
  2409 ;; This function calls:
  2410 ;;		___awdiv
  2411 ;;		___awmod
  2412 ;;		___lwdiv
  2413 ;;		___lwmod
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419     04DC                     _descomponer:	
  2420                           ;psect for function _descomponer
  2421                           
  2422     04DC                     l1919:	
  2423                           ;incstack = 0
  2424                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2425                           
  2426                           
  2427                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  2428     04DC  3064               	movlw	100
  2429     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2430     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2431     04DF  00A6               	movwf	___lwdiv@divisor
  2432     04E0  3000               	movlw	0
  2433     04E1  00A7               	movwf	___lwdiv@divisor+1
  2434     04E2  0832               	movf	descomponer@num+1,w
  2435     04E3  00A9               	movwf	___lwdiv@dividend+1
  2436     04E4  0831               	movf	descomponer@num,w
  2437     04E5  00A8               	movwf	___lwdiv@dividend
  2438     04E6  120A  118A  26D3  120A  118A  	fcall	___lwdiv
  2439     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2440     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2441     04ED  0826               	movf	?___lwdiv,w
  2442     04EE  00B5               	movwf	descomponer@cent
  2443                           
  2444                           ;conversiones.c: 50:     dec = (num%100);
  2445     04EF  3064               	movlw	100
  2446     04F0  00A6               	movwf	___lwmod@divisor
  2447     04F1  3000               	movlw	0
  2448     04F2  00A7               	movwf	___lwmod@divisor+1
  2449     04F3  0832               	movf	descomponer@num+1,w
  2450     04F4  00A9               	movwf	___lwmod@dividend+1
  2451     04F5  0831               	movf	descomponer@num,w
  2452     04F6  00A8               	movwf	___lwmod@dividend
  2453     04F7  120A  118A  2797  120A  118A  	fcall	___lwmod
  2454     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2455     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2456     04FE  0826               	movf	?___lwmod,w
  2457     04FF  00B7               	movwf	descomponer@dec
  2458                           
  2459                           ;conversiones.c: 51:     uni = (dec%10);
  2460     0500  300A               	movlw	10
  2461     0501  00A6               	movwf	___awmod@divisor
  2462     0502  3000               	movlw	0
  2463     0503  00A7               	movwf	___awmod@divisor+1
  2464     0504  0837               	movf	descomponer@dec,w
  2465     0505  00B3               	movwf	??_descomponer
  2466     0506  01B4               	clrf	??_descomponer+1
  2467     0507  0833               	movf	??_descomponer,w
  2468     0508  00A8               	movwf	___awmod@dividend
  2469     0509  0834               	movf	??_descomponer+1,w
  2470     050A  00A9               	movwf	___awmod@dividend+1
  2471     050B  120A  118A  253F  120A  118A  	fcall	___awmod
  2472     0510  1283               	bcf	3,5	;RP0=0, select bank0
  2473     0511  1303               	bcf	3,6	;RP1=0, select bank0
  2474     0512  0826               	movf	?___awmod,w
  2475     0513  00B6               	movwf	descomponer@uni
  2476     0514                     l1921:
  2477                           
  2478                           ;conversiones.c: 52:     if(pos == 2){
  2479     0514  3002               	movlw	2
  2480     0515  062F               	xorwf	descomponer@pos,w
  2481     0516  0430               	iorwf	descomponer@pos+1,w
  2482     0517  1D03               	btfss	3,2
  2483     0518  2D1A               	goto	u1981
  2484     0519  2D1B               	goto	u1980
  2485     051A                     u1981:
  2486     051A  2D1D               	goto	l1929
  2487     051B                     u1980:
  2488     051B                     l1923:
  2489                           
  2490                           ;conversiones.c: 53:         return cent;
  2491     051B  0835               	movf	descomponer@cent,w
  2492     051C  2D3E               	goto	l235
  2493     051D                     l1929:
  2494     051D  032F               	decf	descomponer@pos,w
  2495     051E  0430               	iorwf	descomponer@pos+1,w
  2496     051F  1D03               	btfss	3,2
  2497     0520  2D22               	goto	u1991
  2498     0521  2D23               	goto	u1990
  2499     0522                     u1991:
  2500     0522  2D37               	goto	l1937
  2501     0523                     u1990:
  2502     0523                     l1931:
  2503                           
  2504                           ;conversiones.c: 56:         return (dec/10);
  2505     0523  300A               	movlw	10
  2506     0524  00A6               	movwf	___awdiv@divisor
  2507     0525  3000               	movlw	0
  2508     0526  00A7               	movwf	___awdiv@divisor+1
  2509     0527  0837               	movf	descomponer@dec,w
  2510     0528  00B3               	movwf	??_descomponer
  2511     0529  01B4               	clrf	??_descomponer+1
  2512     052A  0833               	movf	??_descomponer,w
  2513     052B  00A8               	movwf	___awdiv@dividend
  2514     052C  0834               	movf	??_descomponer+1,w
  2515     052D  00A9               	movwf	___awdiv@dividend+1
  2516     052E  120A  118A  240B  120A  118A  	fcall	___awdiv
  2517     0533  1283               	bcf	3,5	;RP0=0, select bank0
  2518     0534  1303               	bcf	3,6	;RP1=0, select bank0
  2519     0535  0826               	movf	?___awdiv,w
  2520     0536  2D3E               	goto	l235
  2521     0537                     l1937:
  2522     0537  082F               	movf	descomponer@pos,w
  2523     0538  0430               	iorwf	descomponer@pos+1,w
  2524     0539  1D03               	btfss	3,2
  2525     053A  2D3C               	goto	u2001
  2526     053B  2D3D               	goto	u2000
  2527     053C                     u2001:
  2528     053C  2D3E               	goto	l235
  2529     053D                     u2000:
  2530     053D                     l1939:
  2531                           
  2532                           ;conversiones.c: 59:         return uni;
  2533     053D  0836               	movf	descomponer@uni,w
  2534     053E                     l235:
  2535     053E  0008               	return
  2536     053F                     __end_of_descomponer:
  2537                           
  2538                           	psect	text7
  2539     0797                     __ptext7:	
  2540 ;; *************** function ___lwmod *****************
  2541 ;; Defined at:
  2542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  divisor         2    6[BANK0 ] unsigned int 
  2545 ;;  dividend        2    8[BANK0 ] unsigned int 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  counter         1   11[BANK0 ] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2    6[BANK0 ] unsigned int 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       4       0       0       0
  2558 ;;      Locals:         0       1       0       0       0
  2559 ;;      Temps:          0       1       0       0       0
  2560 ;;      Totals:         0       6       0       0       0
  2561 ;;Total ram usage:        6 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 2
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_descomponer
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571     0797                     ___lwmod:	
  2572                           ;psect for function ___lwmod
  2573                           
  2574     0797                     l1769:	
  2575                           ;incstack = 0
  2576                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2577                           
  2578     0797  1283               	bcf	3,5	;RP0=0, select bank0
  2579     0798  1303               	bcf	3,6	;RP1=0, select bank0
  2580     0799  0826               	movf	___lwmod@divisor,w
  2581     079A  0427               	iorwf	___lwmod@divisor+1,w
  2582     079B  1903               	btfsc	3,2
  2583     079C  2F9E               	goto	u1751
  2584     079D  2F9F               	goto	u1750
  2585     079E                     u1751:
  2586     079E  2FCE               	goto	l1787
  2587     079F                     u1750:
  2588     079F                     l1771:
  2589     079F  01AB               	clrf	___lwmod@counter
  2590     07A0  0AAB               	incf	___lwmod@counter,f
  2591     07A1  2FAD               	goto	l1777
  2592     07A2                     l1773:
  2593     07A2  3001               	movlw	1
  2594     07A3                     u1765:
  2595     07A3  1003               	clrc
  2596     07A4  0DA6               	rlf	___lwmod@divisor,f
  2597     07A5  0DA7               	rlf	___lwmod@divisor+1,f
  2598     07A6  3EFF               	addlw	-1
  2599     07A7  1D03               	skipz
  2600     07A8  2FA3               	goto	u1765
  2601     07A9                     l1775:
  2602     07A9  3001               	movlw	1
  2603     07AA  00AA               	movwf	??___lwmod
  2604     07AB  082A               	movf	??___lwmod,w
  2605     07AC  07AB               	addwf	___lwmod@counter,f
  2606     07AD                     l1777:
  2607     07AD  1FA7               	btfss	___lwmod@divisor+1,7
  2608     07AE  2FB0               	goto	u1771
  2609     07AF  2FB1               	goto	u1770
  2610     07B0                     u1771:
  2611     07B0  2FA2               	goto	l1773
  2612     07B1                     u1770:
  2613     07B1                     l1779:
  2614     07B1  0827               	movf	___lwmod@divisor+1,w
  2615     07B2  0229               	subwf	___lwmod@dividend+1,w
  2616     07B3  1D03               	skipz
  2617     07B4  2FB7               	goto	u1785
  2618     07B5  0826               	movf	___lwmod@divisor,w
  2619     07B6  0228               	subwf	___lwmod@dividend,w
  2620     07B7                     u1785:
  2621     07B7  1C03               	skipc
  2622     07B8  2FBA               	goto	u1781
  2623     07B9  2FBB               	goto	u1780
  2624     07BA                     u1781:
  2625     07BA  2FC1               	goto	l1783
  2626     07BB                     u1780:
  2627     07BB                     l1781:
  2628     07BB  0826               	movf	___lwmod@divisor,w
  2629     07BC  02A8               	subwf	___lwmod@dividend,f
  2630     07BD  0827               	movf	___lwmod@divisor+1,w
  2631     07BE  1C03               	skipc
  2632     07BF  03A9               	decf	___lwmod@dividend+1,f
  2633     07C0  02A9               	subwf	___lwmod@dividend+1,f
  2634     07C1                     l1783:
  2635     07C1  3001               	movlw	1
  2636     07C2                     u1795:
  2637     07C2  1003               	clrc
  2638     07C3  0CA7               	rrf	___lwmod@divisor+1,f
  2639     07C4  0CA6               	rrf	___lwmod@divisor,f
  2640     07C5  3EFF               	addlw	-1
  2641     07C6  1D03               	skipz
  2642     07C7  2FC2               	goto	u1795
  2643     07C8                     l1785:
  2644     07C8  3001               	movlw	1
  2645     07C9  02AB               	subwf	___lwmod@counter,f
  2646     07CA  1D03               	btfss	3,2
  2647     07CB  2FCD               	goto	u1801
  2648     07CC  2FCE               	goto	u1800
  2649     07CD                     u1801:
  2650     07CD  2FB1               	goto	l1779
  2651     07CE                     u1800:
  2652     07CE                     l1787:
  2653     07CE  0829               	movf	___lwmod@dividend+1,w
  2654     07CF  00A7               	movwf	?___lwmod+1
  2655     07D0  0828               	movf	___lwmod@dividend,w
  2656     07D1  00A6               	movwf	?___lwmod
  2657     07D2                     l635:
  2658     07D2  0008               	return
  2659     07D3                     __end_of___lwmod:
  2660                           
  2661                           	psect	text8
  2662     06D3                     __ptext8:	
  2663 ;; *************** function ___lwdiv *****************
  2664 ;; Defined at:
  2665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  divisor         2    6[BANK0 ] unsigned int 
  2668 ;;  dividend        2    8[BANK0 ] unsigned int 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  quotient        2   11[BANK0 ] unsigned int 
  2671 ;;  counter         1   13[BANK0 ] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  2    6[BANK0 ] unsigned int 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       4       0       0       0
  2682 ;;      Locals:         0       3       0       0       0
  2683 ;;      Temps:          0       1       0       0       0
  2684 ;;      Totals:         0       8       0       0       0
  2685 ;;Total ram usage:        8 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 2
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_descomponer
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695     06D3                     ___lwdiv:	
  2696                           ;psect for function ___lwdiv
  2697                           
  2698     06D3                     l1743:	
  2699                           ;incstack = 0
  2700                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2701                           
  2702     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2703     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2704     06D5  01AB               	clrf	___lwdiv@quotient
  2705     06D6  01AC               	clrf	___lwdiv@quotient+1
  2706     06D7                     l1745:
  2707     06D7  0826               	movf	___lwdiv@divisor,w
  2708     06D8  0427               	iorwf	___lwdiv@divisor+1,w
  2709     06D9  1903               	btfsc	3,2
  2710     06DA  2EDC               	goto	u1681
  2711     06DB  2EDD               	goto	u1680
  2712     06DC                     u1681:
  2713     06DC  2F14               	goto	l1765
  2714     06DD                     u1680:
  2715     06DD                     l1747:
  2716     06DD  01AD               	clrf	___lwdiv@counter
  2717     06DE  0AAD               	incf	___lwdiv@counter,f
  2718     06DF  2EEB               	goto	l1753
  2719     06E0                     l1749:
  2720     06E0  3001               	movlw	1
  2721     06E1                     u1695:
  2722     06E1  1003               	clrc
  2723     06E2  0DA6               	rlf	___lwdiv@divisor,f
  2724     06E3  0DA7               	rlf	___lwdiv@divisor+1,f
  2725     06E4  3EFF               	addlw	-1
  2726     06E5  1D03               	skipz
  2727     06E6  2EE1               	goto	u1695
  2728     06E7                     l1751:
  2729     06E7  3001               	movlw	1
  2730     06E8  00AA               	movwf	??___lwdiv
  2731     06E9  082A               	movf	??___lwdiv,w
  2732     06EA  07AD               	addwf	___lwdiv@counter,f
  2733     06EB                     l1753:
  2734     06EB  1FA7               	btfss	___lwdiv@divisor+1,7
  2735     06EC  2EEE               	goto	u1701
  2736     06ED  2EEF               	goto	u1700
  2737     06EE                     u1701:
  2738     06EE  2EE0               	goto	l1749
  2739     06EF                     u1700:
  2740     06EF                     l1755:
  2741     06EF  3001               	movlw	1
  2742     06F0                     u1715:
  2743     06F0  1003               	clrc
  2744     06F1  0DAB               	rlf	___lwdiv@quotient,f
  2745     06F2  0DAC               	rlf	___lwdiv@quotient+1,f
  2746     06F3  3EFF               	addlw	-1
  2747     06F4  1D03               	skipz
  2748     06F5  2EF0               	goto	u1715
  2749     06F6  0827               	movf	___lwdiv@divisor+1,w
  2750     06F7  0229               	subwf	___lwdiv@dividend+1,w
  2751     06F8  1D03               	skipz
  2752     06F9  2EFC               	goto	u1725
  2753     06FA  0826               	movf	___lwdiv@divisor,w
  2754     06FB  0228               	subwf	___lwdiv@dividend,w
  2755     06FC                     u1725:
  2756     06FC  1C03               	skipc
  2757     06FD  2EFF               	goto	u1721
  2758     06FE  2F00               	goto	u1720
  2759     06FF                     u1721:
  2760     06FF  2F07               	goto	l1761
  2761     0700                     u1720:
  2762     0700                     l1757:
  2763     0700  0826               	movf	___lwdiv@divisor,w
  2764     0701  02A8               	subwf	___lwdiv@dividend,f
  2765     0702  0827               	movf	___lwdiv@divisor+1,w
  2766     0703  1C03               	skipc
  2767     0704  03A9               	decf	___lwdiv@dividend+1,f
  2768     0705  02A9               	subwf	___lwdiv@dividend+1,f
  2769     0706                     l1759:
  2770     0706  142B               	bsf	___lwdiv@quotient,0
  2771     0707                     l1761:
  2772     0707  3001               	movlw	1
  2773     0708                     u1735:
  2774     0708  1003               	clrc
  2775     0709  0CA7               	rrf	___lwdiv@divisor+1,f
  2776     070A  0CA6               	rrf	___lwdiv@divisor,f
  2777     070B  3EFF               	addlw	-1
  2778     070C  1D03               	skipz
  2779     070D  2F08               	goto	u1735
  2780     070E                     l1763:
  2781     070E  3001               	movlw	1
  2782     070F  02AD               	subwf	___lwdiv@counter,f
  2783     0710  1D03               	btfss	3,2
  2784     0711  2F13               	goto	u1741
  2785     0712  2F14               	goto	u1740
  2786     0713                     u1741:
  2787     0713  2EEF               	goto	l1755
  2788     0714                     u1740:
  2789     0714                     l1765:
  2790     0714  082C               	movf	___lwdiv@quotient+1,w
  2791     0715  00A7               	movwf	?___lwdiv+1
  2792     0716  082B               	movf	___lwdiv@quotient,w
  2793     0717  00A6               	movwf	?___lwdiv
  2794     0718                     l625:
  2795     0718  0008               	return
  2796     0719                     __end_of___lwdiv:
  2797                           
  2798                           	psect	text9
  2799     053F                     __ptext9:	
  2800 ;; *************** function ___awmod *****************
  2801 ;; Defined at:
  2802 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  divisor         2    6[BANK0 ] int 
  2805 ;;  dividend        2    8[BANK0 ] int 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  sign            1   12[BANK0 ] unsigned char 
  2808 ;;  counter         1   11[BANK0 ] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  2    6[BANK0 ] int 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       4       0       0       0
  2819 ;;      Locals:         0       2       0       0       0
  2820 ;;      Temps:          0       1       0       0       0
  2821 ;;      Totals:         0       7       0       0       0
  2822 ;;Total ram usage:        7 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 2
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_descomponer
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832     053F                     ___awmod:	
  2833                           ;psect for function ___awmod
  2834                           
  2835     053F                     l1705:	
  2836                           ;incstack = 0
  2837                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2838                           
  2839     053F  1283               	bcf	3,5	;RP0=0, select bank0
  2840     0540  1303               	bcf	3,6	;RP1=0, select bank0
  2841     0541  01AC               	clrf	___awmod@sign
  2842     0542                     l1707:
  2843     0542  1FA9               	btfss	___awmod@dividend+1,7
  2844     0543  2D45               	goto	u1591
  2845     0544  2D46               	goto	u1590
  2846     0545                     u1591:
  2847     0545  2D4D               	goto	l1713
  2848     0546                     u1590:
  2849     0546                     l1709:
  2850     0546  09A8               	comf	___awmod@dividend,f
  2851     0547  09A9               	comf	___awmod@dividend+1,f
  2852     0548  0AA8               	incf	___awmod@dividend,f
  2853     0549  1903               	skipnz
  2854     054A  0AA9               	incf	___awmod@dividend+1,f
  2855     054B                     l1711:
  2856     054B  01AC               	clrf	___awmod@sign
  2857     054C  0AAC               	incf	___awmod@sign,f
  2858     054D                     l1713:
  2859     054D  1FA7               	btfss	___awmod@divisor+1,7
  2860     054E  2D50               	goto	u1601
  2861     054F  2D51               	goto	u1600
  2862     0550                     u1601:
  2863     0550  2D56               	goto	l1717
  2864     0551                     u1600:
  2865     0551                     l1715:
  2866     0551  09A6               	comf	___awmod@divisor,f
  2867     0552  09A7               	comf	___awmod@divisor+1,f
  2868     0553  0AA6               	incf	___awmod@divisor,f
  2869     0554  1903               	skipnz
  2870     0555  0AA7               	incf	___awmod@divisor+1,f
  2871     0556                     l1717:
  2872     0556  0826               	movf	___awmod@divisor,w
  2873     0557  0427               	iorwf	___awmod@divisor+1,w
  2874     0558  1903               	btfsc	3,2
  2875     0559  2D5B               	goto	u1611
  2876     055A  2D5C               	goto	u1610
  2877     055B                     u1611:
  2878     055B  2D8B               	goto	l1735
  2879     055C                     u1610:
  2880     055C                     l1719:
  2881     055C  01AB               	clrf	___awmod@counter
  2882     055D  0AAB               	incf	___awmod@counter,f
  2883     055E  2D6A               	goto	l1725
  2884     055F                     l1721:
  2885     055F  3001               	movlw	1
  2886     0560                     u1625:
  2887     0560  1003               	clrc
  2888     0561  0DA6               	rlf	___awmod@divisor,f
  2889     0562  0DA7               	rlf	___awmod@divisor+1,f
  2890     0563  3EFF               	addlw	-1
  2891     0564  1D03               	skipz
  2892     0565  2D60               	goto	u1625
  2893     0566                     l1723:
  2894     0566  3001               	movlw	1
  2895     0567  00AA               	movwf	??___awmod
  2896     0568  082A               	movf	??___awmod,w
  2897     0569  07AB               	addwf	___awmod@counter,f
  2898     056A                     l1725:
  2899     056A  1FA7               	btfss	___awmod@divisor+1,7
  2900     056B  2D6D               	goto	u1631
  2901     056C  2D6E               	goto	u1630
  2902     056D                     u1631:
  2903     056D  2D5F               	goto	l1721
  2904     056E                     u1630:
  2905     056E                     l1727:
  2906     056E  0827               	movf	___awmod@divisor+1,w
  2907     056F  0229               	subwf	___awmod@dividend+1,w
  2908     0570  1D03               	skipz
  2909     0571  2D74               	goto	u1645
  2910     0572  0826               	movf	___awmod@divisor,w
  2911     0573  0228               	subwf	___awmod@dividend,w
  2912     0574                     u1645:
  2913     0574  1C03               	skipc
  2914     0575  2D77               	goto	u1641
  2915     0576  2D78               	goto	u1640
  2916     0577                     u1641:
  2917     0577  2D7E               	goto	l1731
  2918     0578                     u1640:
  2919     0578                     l1729:
  2920     0578  0826               	movf	___awmod@divisor,w
  2921     0579  02A8               	subwf	___awmod@dividend,f
  2922     057A  0827               	movf	___awmod@divisor+1,w
  2923     057B  1C03               	skipc
  2924     057C  03A9               	decf	___awmod@dividend+1,f
  2925     057D  02A9               	subwf	___awmod@dividend+1,f
  2926     057E                     l1731:
  2927     057E  3001               	movlw	1
  2928     057F                     u1655:
  2929     057F  1003               	clrc
  2930     0580  0CA7               	rrf	___awmod@divisor+1,f
  2931     0581  0CA6               	rrf	___awmod@divisor,f
  2932     0582  3EFF               	addlw	-1
  2933     0583  1D03               	skipz
  2934     0584  2D7F               	goto	u1655
  2935     0585                     l1733:
  2936     0585  3001               	movlw	1
  2937     0586  02AB               	subwf	___awmod@counter,f
  2938     0587  1D03               	btfss	3,2
  2939     0588  2D8A               	goto	u1661
  2940     0589  2D8B               	goto	u1660
  2941     058A                     u1661:
  2942     058A  2D6E               	goto	l1727
  2943     058B                     u1660:
  2944     058B                     l1735:
  2945     058B  082C               	movf	___awmod@sign,w
  2946     058C  1903               	btfsc	3,2
  2947     058D  2D8F               	goto	u1671
  2948     058E  2D90               	goto	u1670
  2949     058F                     u1671:
  2950     058F  2D95               	goto	l1739
  2951     0590                     u1670:
  2952     0590                     l1737:
  2953     0590  09A8               	comf	___awmod@dividend,f
  2954     0591  09A9               	comf	___awmod@dividend+1,f
  2955     0592  0AA8               	incf	___awmod@dividend,f
  2956     0593  1903               	skipnz
  2957     0594  0AA9               	incf	___awmod@dividend+1,f
  2958     0595                     l1739:
  2959     0595  0829               	movf	___awmod@dividend+1,w
  2960     0596  00A7               	movwf	?___awmod+1
  2961     0597  0828               	movf	___awmod@dividend,w
  2962     0598  00A6               	movwf	?___awmod
  2963     0599                     l519:
  2964     0599  0008               	return
  2965     059A                     __end_of___awmod:
  2966                           
  2967                           	psect	text10
  2968     040B                     __ptext10:	
  2969 ;; *************** function ___awdiv *****************
  2970 ;; Defined at:
  2971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  divisor         2    6[BANK0 ] int 
  2974 ;;  dividend        2    8[BANK0 ] int 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  quotient        2   13[BANK0 ] int 
  2977 ;;  sign            1   12[BANK0 ] unsigned char 
  2978 ;;  counter         1   11[BANK0 ] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  2    6[BANK0 ] int 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         0       4       0       0       0
  2989 ;;      Locals:         0       4       0       0       0
  2990 ;;      Temps:          0       1       0       0       0
  2991 ;;      Totals:         0       9       0       0       0
  2992 ;;Total ram usage:        9 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 2
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_descomponer
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002     040B                     ___awdiv:	
  3003                           ;psect for function ___awdiv
  3004                           
  3005     040B                     l1661:	
  3006                           ;incstack = 0
  3007                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3008                           
  3009     040B  1283               	bcf	3,5	;RP0=0, select bank0
  3010     040C  1303               	bcf	3,6	;RP1=0, select bank0
  3011     040D  01AC               	clrf	___awdiv@sign
  3012     040E                     l1663:
  3013     040E  1FA7               	btfss	___awdiv@divisor+1,7
  3014     040F  2C11               	goto	u1491
  3015     0410  2C12               	goto	u1490
  3016     0411                     u1491:
  3017     0411  2C19               	goto	l1669
  3018     0412                     u1490:
  3019     0412                     l1665:
  3020     0412  09A6               	comf	___awdiv@divisor,f
  3021     0413  09A7               	comf	___awdiv@divisor+1,f
  3022     0414  0AA6               	incf	___awdiv@divisor,f
  3023     0415  1903               	skipnz
  3024     0416  0AA7               	incf	___awdiv@divisor+1,f
  3025     0417                     l1667:
  3026     0417  01AC               	clrf	___awdiv@sign
  3027     0418  0AAC               	incf	___awdiv@sign,f
  3028     0419                     l1669:
  3029     0419  1FA9               	btfss	___awdiv@dividend+1,7
  3030     041A  2C1C               	goto	u1501
  3031     041B  2C1D               	goto	u1500
  3032     041C                     u1501:
  3033     041C  2C26               	goto	l1675
  3034     041D                     u1500:
  3035     041D                     l1671:
  3036     041D  09A8               	comf	___awdiv@dividend,f
  3037     041E  09A9               	comf	___awdiv@dividend+1,f
  3038     041F  0AA8               	incf	___awdiv@dividend,f
  3039     0420  1903               	skipnz
  3040     0421  0AA9               	incf	___awdiv@dividend+1,f
  3041     0422                     l1673:
  3042     0422  3001               	movlw	1
  3043     0423  00AA               	movwf	??___awdiv
  3044     0424  082A               	movf	??___awdiv,w
  3045     0425  06AC               	xorwf	___awdiv@sign,f
  3046     0426                     l1675:
  3047     0426  01AD               	clrf	___awdiv@quotient
  3048     0427  01AE               	clrf	___awdiv@quotient+1
  3049     0428                     l1677:
  3050     0428  0826               	movf	___awdiv@divisor,w
  3051     0429  0427               	iorwf	___awdiv@divisor+1,w
  3052     042A  1903               	btfsc	3,2
  3053     042B  2C2D               	goto	u1511
  3054     042C  2C2E               	goto	u1510
  3055     042D                     u1511:
  3056     042D  2C65               	goto	l1697
  3057     042E                     u1510:
  3058     042E                     l1679:
  3059     042E  01AB               	clrf	___awdiv@counter
  3060     042F  0AAB               	incf	___awdiv@counter,f
  3061     0430  2C3C               	goto	l1685
  3062     0431                     l1681:
  3063     0431  3001               	movlw	1
  3064     0432                     u1525:
  3065     0432  1003               	clrc
  3066     0433  0DA6               	rlf	___awdiv@divisor,f
  3067     0434  0DA7               	rlf	___awdiv@divisor+1,f
  3068     0435  3EFF               	addlw	-1
  3069     0436  1D03               	skipz
  3070     0437  2C32               	goto	u1525
  3071     0438                     l1683:
  3072     0438  3001               	movlw	1
  3073     0439  00AA               	movwf	??___awdiv
  3074     043A  082A               	movf	??___awdiv,w
  3075     043B  07AB               	addwf	___awdiv@counter,f
  3076     043C                     l1685:
  3077     043C  1FA7               	btfss	___awdiv@divisor+1,7
  3078     043D  2C3F               	goto	u1531
  3079     043E  2C40               	goto	u1530
  3080     043F                     u1531:
  3081     043F  2C31               	goto	l1681
  3082     0440                     u1530:
  3083     0440                     l1687:
  3084     0440  3001               	movlw	1
  3085     0441                     u1545:
  3086     0441  1003               	clrc
  3087     0442  0DAD               	rlf	___awdiv@quotient,f
  3088     0443  0DAE               	rlf	___awdiv@quotient+1,f
  3089     0444  3EFF               	addlw	-1
  3090     0445  1D03               	skipz
  3091     0446  2C41               	goto	u1545
  3092     0447  0827               	movf	___awdiv@divisor+1,w
  3093     0448  0229               	subwf	___awdiv@dividend+1,w
  3094     0449  1D03               	skipz
  3095     044A  2C4D               	goto	u1555
  3096     044B  0826               	movf	___awdiv@divisor,w
  3097     044C  0228               	subwf	___awdiv@dividend,w
  3098     044D                     u1555:
  3099     044D  1C03               	skipc
  3100     044E  2C50               	goto	u1551
  3101     044F  2C51               	goto	u1550
  3102     0450                     u1551:
  3103     0450  2C58               	goto	l1693
  3104     0451                     u1550:
  3105     0451                     l1689:
  3106     0451  0826               	movf	___awdiv@divisor,w
  3107     0452  02A8               	subwf	___awdiv@dividend,f
  3108     0453  0827               	movf	___awdiv@divisor+1,w
  3109     0454  1C03               	skipc
  3110     0455  03A9               	decf	___awdiv@dividend+1,f
  3111     0456  02A9               	subwf	___awdiv@dividend+1,f
  3112     0457                     l1691:
  3113     0457  142D               	bsf	___awdiv@quotient,0
  3114     0458                     l1693:
  3115     0458  3001               	movlw	1
  3116     0459                     u1565:
  3117     0459  1003               	clrc
  3118     045A  0CA7               	rrf	___awdiv@divisor+1,f
  3119     045B  0CA6               	rrf	___awdiv@divisor,f
  3120     045C  3EFF               	addlw	-1
  3121     045D  1D03               	skipz
  3122     045E  2C59               	goto	u1565
  3123     045F                     l1695:
  3124     045F  3001               	movlw	1
  3125     0460  02AB               	subwf	___awdiv@counter,f
  3126     0461  1D03               	btfss	3,2
  3127     0462  2C64               	goto	u1571
  3128     0463  2C65               	goto	u1570
  3129     0464                     u1571:
  3130     0464  2C40               	goto	l1687
  3131     0465                     u1570:
  3132     0465                     l1697:
  3133     0465  082C               	movf	___awdiv@sign,w
  3134     0466  1903               	btfsc	3,2
  3135     0467  2C69               	goto	u1581
  3136     0468  2C6A               	goto	u1580
  3137     0469                     u1581:
  3138     0469  2C6F               	goto	l1701
  3139     046A                     u1580:
  3140     046A                     l1699:
  3141     046A  09AD               	comf	___awdiv@quotient,f
  3142     046B  09AE               	comf	___awdiv@quotient+1,f
  3143     046C  0AAD               	incf	___awdiv@quotient,f
  3144     046D  1903               	skipnz
  3145     046E  0AAE               	incf	___awdiv@quotient+1,f
  3146     046F                     l1701:
  3147     046F  082E               	movf	___awdiv@quotient+1,w
  3148     0470  00A7               	movwf	?___awdiv+1
  3149     0471  082D               	movf	___awdiv@quotient,w
  3150     0472  00A6               	movwf	?___awdiv
  3151     0473                     l506:
  3152     0473  0008               	return
  3153     0474                     __end_of___awdiv:
  3154                           
  3155                           	psect	text11
  3156     0F83                     __ptext11:	
  3157 ;; *************** function _configpuertos *****************
  3158 ;; Defined at:
  3159 ;;		line 9 in file "confpuertos.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 2
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187     0F83                     _configpuertos:	
  3188                           ;psect for function _configpuertos
  3189                           
  3190     0F83                     l1811:	
  3191                           ;incstack = 0
  3192                           ; Regs used in _configpuertos: [wreg+status,2]
  3193                           
  3194                           
  3195                           ;confpuertos.c: 11:     TRISB = 0b11000000;
  3196     0F83  30C0               	movlw	192
  3197     0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3198     0F85  1303               	bcf	3,6	;RP1=0, select bank1
  3199     0F86  0086               	movwf	6	;volatile
  3200                           
  3201                           ;confpuertos.c: 12:     PORTB = 0b11000000;
  3202     0F87  30C0               	movlw	192
  3203     0F88  1283               	bcf	3,5	;RP0=0, select bank0
  3204     0F89  1303               	bcf	3,6	;RP1=0, select bank0
  3205     0F8A  0086               	movwf	6	;volatile
  3206     0F8B                     l1813:
  3207                           
  3208                           ;confpuertos.c: 13:     INTCONbits.GIE = 1;
  3209     0F8B  178B               	bsf	11,7	;volatile
  3210     0F8C                     l1815:
  3211                           
  3212                           ;confpuertos.c: 14:     INTCONbits.RBIE = 1;
  3213     0F8C  158B               	bsf	11,3	;volatile
  3214     0F8D                     l1817:
  3215                           
  3216                           ;confpuertos.c: 15:     INTCONbits.RBIF = 0;
  3217     0F8D  100B               	bcf	11,0	;volatile
  3218                           
  3219                           ;confpuertos.c: 16:     IOCB = 0b11000000;
  3220     0F8E  30C0               	movlw	192
  3221     0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  3222     0F90  1303               	bcf	3,6	;RP1=0, select bank1
  3223     0F91  0096               	movwf	22	;volatile
  3224                           
  3225                           ;confpuertos.c: 17:     WPUB = 0b11000000;
  3226     0F92  30C0               	movlw	192
  3227     0F93  0095               	movwf	21	;volatile
  3228     0F94                     l1819:
  3229                           
  3230                           ;confpuertos.c: 18:     OPTION_REGbits.nRBPU = 0;
  3231     0F94  1381               	bcf	1,7	;volatile
  3232     0F95                     l1821:
  3233                           
  3234                           ;confpuertos.c: 22:     TRISD = 0;
  3235     0F95  0188               	clrf	8	;volatile
  3236     0F96                     l1823:
  3237                           
  3238                           ;confpuertos.c: 23:     PORTD = 0;
  3239     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  3240     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  3241     0F98  0188               	clrf	8	;volatile
  3242     0F99                     l1825:
  3243                           
  3244                           ;confpuertos.c: 24:     TRISCbits.TRISC0 = 0;
  3245     0F99  1683               	bsf	3,5	;RP0=1, select bank1
  3246     0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  3247     0F9B  1007               	bcf	7,0	;volatile
  3248     0F9C                     l1827:
  3249                           
  3250                           ;confpuertos.c: 25:     TRISCbits.TRISC1 = 0;
  3251     0F9C  1087               	bcf	7,1	;volatile
  3252     0F9D                     l1829:
  3253                           
  3254                           ;confpuertos.c: 26:     PORTCbits.RC0 = 0;
  3255     0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  3256     0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  3257     0F9F  1007               	bcf	7,0	;volatile
  3258     0FA0                     l1831:
  3259                           
  3260                           ;confpuertos.c: 27:     PORTCbits.RC1 = 0;
  3261     0FA0  1087               	bcf	7,1	;volatile
  3262     0FA1                     l209:
  3263     0FA1  0008               	return
  3264     0FA2                     __end_of_configpuertos:
  3265                           
  3266                           	psect	text12
  3267     0323                     __ptext12:	
  3268 ;; *************** function ___fltol *****************
  3269 ;; Defined at:
  3270 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  f1              4    6[BANK0 ] void 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  exp1            1   15[BANK0 ] unsigned char 
  3275 ;;  sign1           1   14[BANK0 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  4    6[BANK0 ] long 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         0       4       0       0       0
  3286 ;;      Locals:         0       2       0       0       0
  3287 ;;      Temps:          0       4       0       0       0
  3288 ;;      Totals:         0      10       0       0       0
  3289 ;;Total ram usage:       10 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 2
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299     0323                     ___fltol:	
  3300                           ;psect for function ___fltol
  3301                           
  3302     0323                     l2021:	
  3303                           ;incstack = 0
  3304                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3305                           
  3306     0323  1003               	clrc
  3307     0324  1283               	bcf	3,5	;RP0=0, select bank0
  3308     0325  1303               	bcf	3,6	;RP1=0, select bank0
  3309     0326  0D28               	rlf	___fltol@f1+2,w
  3310     0327  0D29               	rlf	___fltol@f1+3,w
  3311     0328  00AF               	movwf	___fltol@exp1
  3312     0329  082F               	movf	___fltol@exp1,w
  3313     032A  1D03               	btfss	3,2
  3314     032B  2B2D               	goto	u2111
  3315     032C  2B2E               	goto	u2110
  3316     032D                     u2111:
  3317     032D  2B37               	goto	l2027
  3318     032E                     u2110:
  3319     032E                     l2023:
  3320     032E  3000               	movlw	0
  3321     032F  00A9               	movwf	?___fltol+3
  3322     0330  3000               	movlw	0
  3323     0331  00A8               	movwf	?___fltol+2
  3324     0332  3000               	movlw	0
  3325     0333  00A7               	movwf	?___fltol+1
  3326     0334  3000               	movlw	0
  3327     0335  00A6               	movwf	?___fltol
  3328     0336  2B9A               	goto	l539
  3329     0337                     l2027:
  3330     0337  0826               	movf	___fltol@f1,w
  3331     0338  00AA               	movwf	??___fltol
  3332     0339  0827               	movf	___fltol@f1+1,w
  3333     033A  00AB               	movwf	??___fltol+1
  3334     033B  0828               	movf	___fltol@f1+2,w
  3335     033C  00AC               	movwf	??___fltol+2
  3336     033D  0829               	movf	___fltol@f1+3,w
  3337     033E  00AD               	movwf	??___fltol+3
  3338     033F  301F               	movlw	31
  3339     0340                     u2125:
  3340     0340  1003               	clrc
  3341     0341  0CAD               	rrf	??___fltol+3,f
  3342     0342  0CAC               	rrf	??___fltol+2,f
  3343     0343  0CAB               	rrf	??___fltol+1,f
  3344     0344  0CAA               	rrf	??___fltol,f
  3345     0345                     u2120:
  3346     0345  3EFF               	addlw	-1
  3347     0346  1D03               	skipz
  3348     0347  2B40               	goto	u2125
  3349     0348  082A               	movf	??___fltol,w
  3350     0349  00AE               	movwf	___fltol@sign1
  3351     034A                     l2029:
  3352     034A  17A8               	bsf	___fltol@f1+2,7
  3353     034B                     l2031:
  3354     034B  30FF               	movlw	255
  3355     034C  05A6               	andwf	___fltol@f1,f
  3356     034D  30FF               	movlw	255
  3357     034E  05A7               	andwf	___fltol@f1+1,f
  3358     034F  30FF               	movlw	255
  3359     0350  05A8               	andwf	___fltol@f1+2,f
  3360     0351  3000               	movlw	0
  3361     0352  05A9               	andwf	___fltol@f1+3,f
  3362     0353                     l2033:
  3363     0353  3096               	movlw	150
  3364     0354  02AF               	subwf	___fltol@exp1,f
  3365     0355                     l2035:
  3366     0355  1FAF               	btfss	___fltol@exp1,7
  3367     0356  2B58               	goto	u2131
  3368     0357  2B59               	goto	u2130
  3369     0358                     u2131:
  3370     0358  2B73               	goto	l2045
  3371     0359                     u2130:
  3372     0359                     l2037:
  3373     0359  082F               	movf	___fltol@exp1,w
  3374     035A  3A80               	xorlw	128
  3375     035B  3E97               	addlw	151
  3376     035C  1803               	skipnc
  3377     035D  2B5F               	goto	u2141
  3378     035E  2B60               	goto	u2140
  3379     035F                     u2141:
  3380     035F  2B61               	goto	l2043
  3381     0360                     u2140:
  3382     0360  2B2E               	goto	l2023
  3383     0361                     l2043:
  3384     0361  3001               	movlw	1
  3385     0362                     u2155:
  3386     0362  1003               	clrc
  3387     0363  0CA9               	rrf	___fltol@f1+3,f
  3388     0364  0CA8               	rrf	___fltol@f1+2,f
  3389     0365  0CA7               	rrf	___fltol@f1+1,f
  3390     0366  0CA6               	rrf	___fltol@f1,f
  3391     0367  3EFF               	addlw	-1
  3392     0368  1D03               	skipz
  3393     0369  2B62               	goto	u2155
  3394     036A  3001               	movlw	1
  3395     036B  00AA               	movwf	??___fltol
  3396     036C  082A               	movf	??___fltol,w
  3397     036D  07AF               	addwf	___fltol@exp1,f
  3398     036E  1D03               	btfss	3,2
  3399     036F  2B71               	goto	u2161
  3400     0370  2B72               	goto	u2160
  3401     0371                     u2161:
  3402     0371  2B61               	goto	l2043
  3403     0372                     u2160:
  3404     0372  2B8A               	goto	l2053
  3405     0373                     l2045:
  3406     0373  3020               	movlw	32
  3407     0374  022F               	subwf	___fltol@exp1,w
  3408     0375  1C03               	skipc
  3409     0376  2B78               	goto	u2171
  3410     0377  2B79               	goto	u2170
  3411     0378                     u2171:
  3412     0378  2B85               	goto	l546
  3413     0379                     u2170:
  3414     0379  2B2E               	goto	l2023
  3415     037A                     l2051:
  3416     037A  3001               	movlw	1
  3417     037B  00AA               	movwf	??___fltol
  3418     037C                     u2185:
  3419     037C  1003               	clrc
  3420     037D  0DA6               	rlf	___fltol@f1,f
  3421     037E  0DA7               	rlf	___fltol@f1+1,f
  3422     037F  0DA8               	rlf	___fltol@f1+2,f
  3423     0380  0DA9               	rlf	___fltol@f1+3,f
  3424     0381  0BAA               	decfsz	??___fltol,f
  3425     0382  2B7C               	goto	u2185
  3426     0383  3001               	movlw	1
  3427     0384  02AF               	subwf	___fltol@exp1,f
  3428     0385                     l546:
  3429     0385  082F               	movf	___fltol@exp1,w
  3430     0386  1D03               	btfss	3,2
  3431     0387  2B89               	goto	u2191
  3432     0388  2B8A               	goto	u2190
  3433     0389                     u2191:
  3434     0389  2B7A               	goto	l2051
  3435     038A                     u2190:
  3436     038A                     l2053:
  3437     038A  082E               	movf	___fltol@sign1,w
  3438     038B  1903               	btfsc	3,2
  3439     038C  2B8E               	goto	u2201
  3440     038D  2B8F               	goto	u2200
  3441     038E                     u2201:
  3442     038E  2B9A               	goto	l549
  3443     038F                     u2200:
  3444     038F                     l2055:
  3445     038F  09A6               	comf	___fltol@f1,f
  3446     0390  09A7               	comf	___fltol@f1+1,f
  3447     0391  09A8               	comf	___fltol@f1+2,f
  3448     0392  09A9               	comf	___fltol@f1+3,f
  3449     0393  0AA6               	incf	___fltol@f1,f
  3450     0394  1903               	skipnz
  3451     0395  0AA7               	incf	___fltol@f1+1,f
  3452     0396  1903               	skipnz
  3453     0397  0AA8               	incf	___fltol@f1+2,f
  3454     0398  1903               	skipnz
  3455     0399  0AA9               	incf	___fltol@f1+3,f
  3456     039A                     l549:
  3457     039A                     l539:
  3458     039A  0008               	return
  3459     039B                     __end_of___fltol:
  3460                           
  3461                           	psect	text13
  3462     07D3                     __ptext13:	
  3463 ;; *************** function _Lcd_Write_String *****************
  3464 ;; Defined at:
  3465 ;;		line 117 in file "LCD.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  a               1    wreg     PTR unsigned char 
  3468 ;;		 -> STR_1(15), 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  a               1   11[BANK0 ] PTR unsigned char 
  3471 ;;		 -> STR_1(15), 
  3472 ;;  i               2    9[BANK0 ] int 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       0       0       0       0
  3483 ;;      Locals:         0       3       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         0       3       0       0       0
  3486 ;;Total ram usage:        3 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 4
  3489 ;; This function calls:
  3490 ;;		_Lcd_Write_Char
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496     07D3                     _Lcd_Write_String:	
  3497                           ;psect for function _Lcd_Write_String
  3498                           
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3502                           ;Lcd_Write_String@a stored from wreg
  3503     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3504     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  3505     07D5  00AB               	movwf	Lcd_Write_String@a
  3506     07D6                     l1881:
  3507                           
  3508                           ;LCD.c: 118:     int i;;LCD.c: 119:     for (i = 0; a[i] != '\0'; i++)
  3509     07D6  01A9               	clrf	Lcd_Write_String@i
  3510     07D7  01AA               	clrf	Lcd_Write_String@i+1
  3511     07D8  2FEE               	goto	l1887
  3512     07D9                     l1883:
  3513                           
  3514                           ;LCD.c: 120:         Lcd_Write_Char(a[i]);
  3515     07D9  0829               	movf	Lcd_Write_String@i,w
  3516     07DA  072B               	addwf	Lcd_Write_String@a,w
  3517     07DB  0084               	movwf	4
  3518     07DC  120A  158A  2000  120A  118A  	fcall	stringdir
  3519     07E1  120A  158A  274F  120A  118A  	fcall	_Lcd_Write_Char
  3520     07E6                     l1885:
  3521     07E6  3001               	movlw	1
  3522     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  3523     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  3524     07E9  07A9               	addwf	Lcd_Write_String@i,f
  3525     07EA  1803               	skipnc
  3526     07EB  0AAA               	incf	Lcd_Write_String@i+1,f
  3527     07EC  3000               	movlw	0
  3528     07ED  07AA               	addwf	Lcd_Write_String@i+1,f
  3529     07EE                     l1887:
  3530     07EE  0829               	movf	Lcd_Write_String@i,w
  3531     07EF  072B               	addwf	Lcd_Write_String@a,w
  3532     07F0  0084               	movwf	4
  3533     07F1  120A  158A  2000  120A  118A  	fcall	stringdir
  3534     07F6  3A00               	xorlw	0
  3535     07F7  1D03               	skipz
  3536     07F8  2FFA               	goto	u1941
  3537     07F9  2FFB               	goto	u1940
  3538     07FA                     u1941:
  3539     07FA  2FD9               	goto	l1883
  3540     07FB                     u1940:
  3541     07FB                     l180:
  3542     07FB  0008               	return
  3543     07FC                     __end_of_Lcd_Write_String:
  3544                           
  3545                           	psect	text14
  3546     0F4F                     __ptext14:	
  3547 ;; *************** function _Lcd_Write_Char *****************
  3548 ;; Defined at:
  3549 ;;		line 106 in file "LCD.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  a               1    wreg     unsigned char 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  a               1    8[BANK0 ] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       0       0       0       0
  3564 ;;      Locals:         0       1       0       0       0
  3565 ;;      Temps:          0       1       0       0       0
  3566 ;;      Totals:         0       2       0       0       0
  3567 ;;Total ram usage:        2 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 3
  3570 ;; This function calls:
  3571 ;;		_Lcd_Port
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;;		_Lcd_Write_String
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578     0F4F                     _Lcd_Write_Char:	
  3579                           ;psect for function _Lcd_Write_Char
  3580                           
  3581                           
  3582                           ;incstack = 0
  3583                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3584                           ;Lcd_Write_Char@a stored from wreg
  3585     0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  3586     0F50  1303               	bcf	3,6	;RP1=0, select bank0
  3587     0F51  00A8               	movwf	Lcd_Write_Char@a
  3588     0F52                     l1587:
  3589                           
  3590                           ;LCD.c: 110:     PORTCbits.RC1 = 1;
  3591     0F52  1487               	bsf	7,1	;volatile
  3592     0F53                     l1589:
  3593                           
  3594                           ;LCD.c: 111:     Lcd_Port(a);
  3595     0F53  0828               	movf	Lcd_Write_Char@a,w
  3596     0F54  120A  158A  27C4  120A  158A  	fcall	_Lcd_Port
  3597     0F59                     l1591:
  3598                           
  3599                           ;LCD.c: 112:     RC0 = 1;
  3600     0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3601     0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3602     0F5B  1407               	bsf	7,0	;volatile
  3603     0F5C                     l1593:
  3604                           
  3605                           ;LCD.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3606     0F5C  300C               	movlw	12
  3607     0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  3608     0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  3609     0F5F  00A7               	movwf	??_Lcd_Write_Char
  3610     0F60                     u2417:
  3611     0F60  0BA7               	decfsz	??_Lcd_Write_Char,f
  3612     0F61  2F60               	goto	u2417
  3613     0F62  0000               	nop
  3614     0F63                     l1595:
  3615                           
  3616                           ;LCD.c: 114:     RC0 = 0;
  3617     0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3618     0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3619     0F65  1007               	bcf	7,0	;volatile
  3620     0F66                     l174:
  3621     0F66  0008               	return
  3622     0F67                     __end_of_Lcd_Write_Char:
  3623                           
  3624                           	psect	text15
  3625     0FA2                     __ptext15:	
  3626 ;; *************** function _Lcd_Set_Cursor *****************
  3627 ;; Defined at:
  3628 ;;		line 67 in file "LCD.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  a               1    wreg     unsigned char 
  3631 ;;  b               1   10[BANK0 ] unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  a               1   11[BANK0 ] unsigned char 
  3634 ;;  temp            1   12[BANK0 ] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       1       0       0       0
  3645 ;;      Locals:         0       2       0       0       0
  3646 ;;      Temps:          0       0       0       0       0
  3647 ;;      Totals:         0       3       0       0       0
  3648 ;;Total ram usage:        3 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 4
  3651 ;; This function calls:
  3652 ;;		_Lcd_Cmd
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658     0FA2                     _Lcd_Set_Cursor:	
  3659                           ;psect for function _Lcd_Set_Cursor
  3660                           
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3664                           ;Lcd_Set_Cursor@a stored from wreg
  3665     0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  3666     0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  3667     0FA4  00AB               	movwf	Lcd_Set_Cursor@a
  3668     0FA5                     l1869:
  3669                           
  3670                           ;LCD.c: 68:     char temp;;LCD.c: 69:     if (a == 1) {
  3671     0FA5  032B               	decf	Lcd_Set_Cursor@a,w
  3672     0FA6  1D03               	btfss	3,2
  3673     0FA7  2FA9               	goto	u1921
  3674     0FA8  2FAA               	goto	u1920
  3675     0FA9                     u1921:
  3676     0FA9  2FB4               	goto	l1875
  3677     0FAA                     u1920:
  3678     0FAA                     l1871:
  3679                           
  3680                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  3681     0FAA  082A               	movf	Lcd_Set_Cursor@b,w
  3682     0FAB  3E7F               	addlw	127
  3683     0FAC  00AC               	movwf	Lcd_Set_Cursor@temp
  3684     0FAD                     l1873:
  3685                           
  3686                           ;LCD.c: 75:         Lcd_Cmd(temp);
  3687     0FAD  082C               	movf	Lcd_Set_Cursor@temp,w
  3688     0FAE  120A  158A  2767  120A  158A  	fcall	_Lcd_Cmd
  3689                           
  3690                           ;LCD.c: 76:     } else if (a == 2) {
  3691     0FB3  2FC3               	goto	l168
  3692     0FB4                     l1875:
  3693     0FB4  3002               	movlw	2
  3694     0FB5  062B               	xorwf	Lcd_Set_Cursor@a,w
  3695     0FB6  1D03               	btfss	3,2
  3696     0FB7  2FB9               	goto	u1931
  3697     0FB8  2FBA               	goto	u1930
  3698     0FB9                     u1931:
  3699     0FB9  2FC3               	goto	l168
  3700     0FBA                     u1930:
  3701     0FBA                     l1877:
  3702                           
  3703                           ;LCD.c: 77:         temp = 0xC0 + b - 1;
  3704     0FBA  082A               	movf	Lcd_Set_Cursor@b,w
  3705     0FBB  3EBF               	addlw	191
  3706     0FBC  00AC               	movwf	Lcd_Set_Cursor@temp
  3707     0FBD                     l1879:
  3708                           
  3709                           ;LCD.c: 82:         Lcd_Cmd(temp);
  3710     0FBD  082C               	movf	Lcd_Set_Cursor@temp,w
  3711     0FBE  120A  158A  2767  120A  158A  	fcall	_Lcd_Cmd
  3712     0FC3                     l168:
  3713     0FC3  0008               	return
  3714     0FC4                     __end_of_Lcd_Set_Cursor:
  3715                           
  3716                           	psect	text16
  3717     039B                     __ptext16:	
  3718 ;; *************** function _Lcd_Init *****************
  3719 ;; Defined at:
  3720 ;;		line 86 in file "LCD.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0, pclath, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0
  3736 ;;      Temps:          0       2       0       0       0
  3737 ;;      Totals:         0       2       0       0       0
  3738 ;;Total ram usage:        2 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; Hardware stack levels required when called: 4
  3741 ;; This function calls:
  3742 ;;		_Lcd_Cmd
  3743 ;;		_Lcd_Port
  3744 ;; This function is called by:
  3745 ;;		_main
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749     039B                     _Lcd_Init:	
  3750                           ;psect for function _Lcd_Init
  3751                           
  3752     039B                     l1843:	
  3753                           ;incstack = 0
  3754                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3755                           
  3756                           
  3757                           ;LCD.c: 87:     Lcd_Port(0x00);
  3758     039B  3000               	movlw	0
  3759     039C  120A  158A  27C4  120A  118A  	fcall	_Lcd_Port
  3760     03A1                     l1845:
  3761                           
  3762                           ;LCD.c: 88:     _delay((unsigned long)((110)*(4000000/4000.0)));
  3763     03A1  308F               	movlw	143
  3764     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3765     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3766     03A4  00AB               	movwf	??_Lcd_Init+1
  3767     03A5  30D9               	movlw	217
  3768     03A6  00AA               	movwf	??_Lcd_Init
  3769     03A7                     u2427:
  3770     03A7  0BAA               	decfsz	??_Lcd_Init,f
  3771     03A8  2BA7               	goto	u2427
  3772     03A9  0BAB               	decfsz	??_Lcd_Init+1,f
  3773     03AA  2BA7               	goto	u2427
  3774     03AB  2BAC               	nop2
  3775     03AC                     l1847:
  3776                           
  3777                           ;LCD.c: 89:     Lcd_Cmd(0x30);
  3778     03AC  3030               	movlw	48
  3779     03AD  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3780                           
  3781                           ;LCD.c: 90:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3782     03B2  3007               	movlw	7
  3783     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3784     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3785     03B5  00AB               	movwf	??_Lcd_Init+1
  3786     03B6  307C               	movlw	124
  3787     03B7  00AA               	movwf	??_Lcd_Init
  3788     03B8                     u2437:
  3789     03B8  0BAA               	decfsz	??_Lcd_Init,f
  3790     03B9  2BB8               	goto	u2437
  3791     03BA  0BAB               	decfsz	??_Lcd_Init+1,f
  3792     03BB  2BB8               	goto	u2437
  3793     03BC  0000               	nop
  3794     03BD                     l1849:
  3795                           
  3796                           ;LCD.c: 91:     Lcd_Cmd(0x30);
  3797     03BD  3030               	movlw	48
  3798     03BE  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3799     03C3                     l1851:
  3800                           
  3801                           ;LCD.c: 92:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  3802     03C3  3005               	movlw	5
  3803     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3804     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3805     03C6  00AA               	movwf	??_Lcd_Init
  3806     03C7                     u2447:
  3807     03C7  0BAA               	decfsz	??_Lcd_Init,f
  3808     03C8  2BC7               	goto	u2447
  3809     03C9  2BCA               	nop2
  3810                           
  3811                           ;LCD.c: 93:     Lcd_Cmd(0x30);
  3812     03CA  3030               	movlw	48
  3813     03CB  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3814     03D0                     l1853:
  3815                           
  3816                           ;LCD.c: 94:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  3817     03D0  3005               	movlw	5
  3818     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3819     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3820     03D3  00AA               	movwf	??_Lcd_Init
  3821     03D4                     u2457:
  3822     03D4  0BAA               	decfsz	??_Lcd_Init,f
  3823     03D5  2BD4               	goto	u2457
  3824     03D6  2BD7               	nop2
  3825     03D7                     l1855:
  3826                           
  3827                           ;LCD.c: 96:     Lcd_Cmd(0x38);
  3828     03D7  3038               	movlw	56
  3829     03D8  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3830                           
  3831                           ;LCD.c: 97:     _delay((unsigned long)((55)*(4000000/4000000.0)));
  3832     03DD  3011               	movlw	17
  3833     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3834     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3835     03E0  00AA               	movwf	??_Lcd_Init
  3836     03E1                     u2467:
  3837     03E1  0BAA               	decfsz	??_Lcd_Init,f
  3838     03E2  2BE1               	goto	u2467
  3839     03E3  0000               	nop
  3840     03E4                     l1857:
  3841                           
  3842                           ;LCD.c: 98:     Lcd_Cmd(0x08);
  3843     03E4  3008               	movlw	8
  3844     03E5  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3845     03EA                     l1859:
  3846                           
  3847                           ;LCD.c: 99:     _delay((unsigned long)((55)*(4000000/4000000.0)));
  3848     03EA  3011               	movlw	17
  3849     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3850     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3851     03ED  00AA               	movwf	??_Lcd_Init
  3852     03EE                     u2477:
  3853     03EE  0BAA               	decfsz	??_Lcd_Init,f
  3854     03EF  2BEE               	goto	u2477
  3855     03F0  0000               	nop
  3856                           
  3857                           ;LCD.c: 100:     Lcd_Cmd(0x01);
  3858     03F1  3001               	movlw	1
  3859     03F2  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3860     03F7                     l1861:
  3861                           
  3862                           ;LCD.c: 101:     _delay((unsigned long)((55)*(4000000/4000000.0)));
  3863     03F7  3011               	movlw	17
  3864     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3865     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3866     03FA  00AA               	movwf	??_Lcd_Init
  3867     03FB                     u2487:
  3868     03FB  0BAA               	decfsz	??_Lcd_Init,f
  3869     03FC  2BFB               	goto	u2487
  3870     03FD  0000               	nop
  3871     03FE                     l1863:
  3872                           
  3873                           ;LCD.c: 102:     Lcd_Cmd(0x06);
  3874     03FE  3006               	movlw	6
  3875     03FF  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3876     0404                     l1865:
  3877                           
  3878                           ;LCD.c: 103:     Lcd_Cmd(0x0C);
  3879     0404  300C               	movlw	12
  3880     0405  120A  158A  2767  120A  118A  	fcall	_Lcd_Cmd
  3881     040A                     l171:
  3882     040A  0008               	return
  3883     040B                     __end_of_Lcd_Init:
  3884                           
  3885                           	psect	text17
  3886     0F48                     __ptext17:	
  3887 ;; *************** function _Lcd_Clear *****************
  3888 ;; Defined at:
  3889 ;;		line 63 in file "LCD.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0
  3906 ;;      Totals:         0       0       0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 4
  3910 ;; This function calls:
  3911 ;;		_Lcd_Cmd
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917     0F48                     _Lcd_Clear:	
  3918                           ;psect for function _Lcd_Clear
  3919                           
  3920     0F48                     l1867:	
  3921                           ;incstack = 0
  3922                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3923                           
  3924                           
  3925                           ;LCD.c: 64:     Lcd_Cmd(0x01);
  3926     0F48  3001               	movlw	1
  3927     0F49  120A  158A  2767  120A  158A  	fcall	_Lcd_Cmd
  3928     0F4E                     l162:
  3929     0F4E  0008               	return
  3930     0F4F                     __end_of_Lcd_Clear:
  3931                           
  3932                           	psect	text18
  3933     0F67                     __ptext18:	
  3934 ;; *************** function _Lcd_Cmd *****************
  3935 ;; Defined at:
  3936 ;;		line 55 in file "LCD.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  a               1    wreg     unsigned char 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  a               1    9[BANK0 ] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0, pclath, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3950 ;;      Params:         0       0       0       0       0
  3951 ;;      Locals:         0       1       0       0       0
  3952 ;;      Temps:          0       2       0       0       0
  3953 ;;      Totals:         0       3       0       0       0
  3954 ;;Total ram usage:        3 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 3
  3957 ;; This function calls:
  3958 ;;		_Lcd_Port
  3959 ;; This function is called by:
  3960 ;;		_Lcd_Clear
  3961 ;;		_Lcd_Set_Cursor
  3962 ;;		_Lcd_Init
  3963 ;;		_Lcd_Shift_Right
  3964 ;;		_Lcd_Shift_Left
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968     0F67                     _Lcd_Cmd:	
  3969                           ;psect for function _Lcd_Cmd
  3970                           
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3974                           ;Lcd_Cmd@a stored from wreg
  3975     0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3976     0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3977     0F69  00A9               	movwf	Lcd_Cmd@a
  3978     0F6A                     l1597:
  3979                           
  3980                           ;LCD.c: 56:     PORTCbits.RC1 = 0;
  3981     0F6A  1087               	bcf	7,1	;volatile
  3982     0F6B                     l1599:
  3983                           
  3984                           ;LCD.c: 57:     Lcd_Port(a);
  3985     0F6B  0829               	movf	Lcd_Cmd@a,w
  3986     0F6C  120A  158A  27C4  120A  158A  	fcall	_Lcd_Port
  3987     0F71                     l1601:
  3988                           
  3989                           ;LCD.c: 58:     RC0 = 1;
  3990     0F71  1283               	bcf	3,5	;RP0=0, select bank0
  3991     0F72  1303               	bcf	3,6	;RP1=0, select bank0
  3992     0F73  1407               	bsf	7,0	;volatile
  3993     0F74                     l1603:
  3994                           
  3995                           ;LCD.c: 59:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3996     0F74  3006               	movlw	6
  3997     0F75  1283               	bcf	3,5	;RP0=0, select bank0
  3998     0F76  1303               	bcf	3,6	;RP1=0, select bank0
  3999     0F77  00A8               	movwf	??_Lcd_Cmd+1
  4000     0F78  302F               	movlw	47
  4001     0F79  00A7               	movwf	??_Lcd_Cmd
  4002     0F7A                     u2497:
  4003     0F7A  0BA7               	decfsz	??_Lcd_Cmd,f
  4004     0F7B  2F7A               	goto	u2497
  4005     0F7C  0BA8               	decfsz	??_Lcd_Cmd+1,f
  4006     0F7D  2F7A               	goto	u2497
  4007     0F7E  2F7F               	nop2
  4008     0F7F                     l1605:
  4009                           
  4010                           ;LCD.c: 60:     RC0 = 0;
  4011     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4012     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  4013     0F81  1007               	bcf	7,0	;volatile
  4014     0F82                     l159:
  4015     0F82  0008               	return
  4016     0F83                     __end_of_Lcd_Cmd:
  4017                           
  4018                           	psect	text19
  4019     0FC4                     __ptext19:	
  4020 ;; *************** function _Lcd_Port *****************
  4021 ;; Defined at:
  4022 ;;		line 13 in file "LCD.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  a               1    wreg     unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  a               1    6[BANK0 ] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       0       0       0       0
  4037 ;;      Locals:         0       1       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         0       1       0       0       0
  4040 ;;Total ram usage:        1 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 2
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_Lcd_Cmd
  4047 ;;		_Lcd_Init
  4048 ;;		_Lcd_Write_Char
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052     0FC4                     _Lcd_Port:	
  4053                           ;psect for function _Lcd_Port
  4054                           
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _Lcd_Port: [wreg]
  4058                           ;Lcd_Port@a stored from wreg
  4059     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  4060     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  4061     0FC6  00A6               	movwf	Lcd_Port@a
  4062     0FC7                     l1569:
  4063                           
  4064                           ;LCD.c: 14:     if (a & 1)
  4065     0FC7  1C26               	btfss	Lcd_Port@a,0
  4066     0FC8  2FCA               	goto	u1261
  4067     0FC9  2FCB               	goto	u1260
  4068     0FCA                     u1261:
  4069     0FCA  2FCD               	goto	l140
  4070     0FCB                     u1260:
  4071     0FCB                     l1571:
  4072                           
  4073                           ;LCD.c: 15:         PORTDbits.RD0 = 1;
  4074     0FCB  1408               	bsf	8,0	;volatile
  4075     0FCC  2FCE               	goto	l141
  4076     0FCD                     l140:	
  4077                           ;LCD.c: 16:     else
  4078                           
  4079                           
  4080                           ;LCD.c: 17:         PORTDbits.RD0 = 0;
  4081     0FCD  1008               	bcf	8,0	;volatile
  4082     0FCE                     l141:
  4083                           
  4084                           ;LCD.c: 19:     if (a & 2)
  4085     0FCE  1CA6               	btfss	Lcd_Port@a,1
  4086     0FCF  2FD1               	goto	u1271
  4087     0FD0  2FD2               	goto	u1270
  4088     0FD1                     u1271:
  4089     0FD1  2FD4               	goto	l142
  4090     0FD2                     u1270:
  4091     0FD2                     l1573:
  4092                           
  4093                           ;LCD.c: 20:         RD1 = 1;
  4094     0FD2  1488               	bsf	8,1	;volatile
  4095     0FD3  2FD5               	goto	l143
  4096     0FD4                     l142:	
  4097                           ;LCD.c: 21:     else
  4098                           
  4099                           
  4100                           ;LCD.c: 22:         RD1 = 0;
  4101     0FD4  1088               	bcf	8,1	;volatile
  4102     0FD5                     l143:
  4103                           
  4104                           ;LCD.c: 24:     if (a & 4)
  4105     0FD5  1D26               	btfss	Lcd_Port@a,2
  4106     0FD6  2FD8               	goto	u1281
  4107     0FD7  2FD9               	goto	u1280
  4108     0FD8                     u1281:
  4109     0FD8  2FDB               	goto	l144
  4110     0FD9                     u1280:
  4111     0FD9                     l1575:
  4112                           
  4113                           ;LCD.c: 25:         RD2 = 1;
  4114     0FD9  1508               	bsf	8,2	;volatile
  4115     0FDA  2FDC               	goto	l145
  4116     0FDB                     l144:	
  4117                           ;LCD.c: 26:     else
  4118                           
  4119                           
  4120                           ;LCD.c: 27:         RD2 = 0;
  4121     0FDB  1108               	bcf	8,2	;volatile
  4122     0FDC                     l145:
  4123                           
  4124                           ;LCD.c: 29:     if (a & 8)
  4125     0FDC  1DA6               	btfss	Lcd_Port@a,3
  4126     0FDD  2FDF               	goto	u1291
  4127     0FDE  2FE0               	goto	u1290
  4128     0FDF                     u1291:
  4129     0FDF  2FE2               	goto	l146
  4130     0FE0                     u1290:
  4131     0FE0                     l1577:
  4132                           
  4133                           ;LCD.c: 30:         RD3 = 1;
  4134     0FE0  1588               	bsf	8,3	;volatile
  4135     0FE1  2FE3               	goto	l147
  4136     0FE2                     l146:	
  4137                           ;LCD.c: 31:     else
  4138                           
  4139                           
  4140                           ;LCD.c: 32:         RD3 = 0;
  4141     0FE2  1188               	bcf	8,3	;volatile
  4142     0FE3                     l147:
  4143                           
  4144                           ;LCD.c: 34:     if (a & 16)
  4145     0FE3  1E26               	btfss	Lcd_Port@a,4
  4146     0FE4  2FE6               	goto	u1301
  4147     0FE5  2FE7               	goto	u1300
  4148     0FE6                     u1301:
  4149     0FE6  2FE9               	goto	l148
  4150     0FE7                     u1300:
  4151     0FE7                     l1579:
  4152                           
  4153                           ;LCD.c: 35:         RD4 = 1;
  4154     0FE7  1608               	bsf	8,4	;volatile
  4155     0FE8  2FEA               	goto	l149
  4156     0FE9                     l148:	
  4157                           ;LCD.c: 36:     else
  4158                           
  4159                           
  4160                           ;LCD.c: 37:         RD4 = 0;
  4161     0FE9  1208               	bcf	8,4	;volatile
  4162     0FEA                     l149:
  4163                           
  4164                           ;LCD.c: 39:     if (a & 32)
  4165     0FEA  1EA6               	btfss	Lcd_Port@a,5
  4166     0FEB  2FED               	goto	u1311
  4167     0FEC  2FEE               	goto	u1310
  4168     0FED                     u1311:
  4169     0FED  2FF0               	goto	l150
  4170     0FEE                     u1310:
  4171     0FEE                     l1581:
  4172                           
  4173                           ;LCD.c: 40:         RD5 = 1;
  4174     0FEE  1688               	bsf	8,5	;volatile
  4175     0FEF  2FF1               	goto	l151
  4176     0FF0                     l150:	
  4177                           ;LCD.c: 41:     else
  4178                           
  4179                           
  4180                           ;LCD.c: 42:         RD5 = 0;
  4181     0FF0  1288               	bcf	8,5	;volatile
  4182     0FF1                     l151:
  4183                           
  4184                           ;LCD.c: 44:     if (a & 64)
  4185     0FF1  1F26               	btfss	Lcd_Port@a,6
  4186     0FF2  2FF4               	goto	u1321
  4187     0FF3  2FF5               	goto	u1320
  4188     0FF4                     u1321:
  4189     0FF4  2FF7               	goto	l152
  4190     0FF5                     u1320:
  4191     0FF5                     l1583:
  4192                           
  4193                           ;LCD.c: 45:         RD6 = 1;
  4194     0FF5  1708               	bsf	8,6	;volatile
  4195     0FF6  2FF8               	goto	l153
  4196     0FF7                     l152:	
  4197                           ;LCD.c: 46:     else
  4198                           
  4199                           
  4200                           ;LCD.c: 47:         RD6 = 0;
  4201     0FF7  1308               	bcf	8,6	;volatile
  4202     0FF8                     l153:
  4203                           
  4204                           ;LCD.c: 49:     if (a & 128)
  4205     0FF8  1FA6               	btfss	Lcd_Port@a,7
  4206     0FF9  2FFB               	goto	u1331
  4207     0FFA  2FFC               	goto	u1330
  4208     0FFB                     u1331:
  4209     0FFB  2FFE               	goto	l154
  4210     0FFC                     u1330:
  4211     0FFC                     l1585:
  4212                           
  4213                           ;LCD.c: 50:         RD7 = 1;
  4214     0FFC  1788               	bsf	8,7	;volatile
  4215     0FFD  2FFF               	goto	l156
  4216     0FFE                     l154:	
  4217                           ;LCD.c: 51:     else
  4218                           
  4219                           
  4220                           ;LCD.c: 52:         RD7 = 0;
  4221     0FFE  1388               	bcf	8,7	;volatile
  4222     0FFF                     l156:
  4223     0FFF  0008               	return
  4224     1000                     __end_of_Lcd_Port:
  4225                           
  4226                           	psect	text20
  4227     0759                     __ptext20:	
  4228 ;; *************** function _ADC_read *****************
  4229 ;; Defined at:
  4230 ;;		line 44 in file "setupADC.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  channel         2    6[BANK0 ] int 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       2       0       0       0
  4245 ;;      Locals:         0       0       0       0       0
  4246 ;;      Temps:          0       1       0       0       0
  4247 ;;      Totals:         0       3       0       0       0
  4248 ;;Total ram usage:        3 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 2
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258     0759                     _ADC_read:	
  4259                           ;psect for function _ADC_read
  4260                           
  4261     0759                     l1889:	
  4262                           ;incstack = 0
  4263                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  4264                           
  4265                           
  4266                           ;setupADC.c: 45:     if(channel ==0){
  4267     0759  1283               	bcf	3,5	;RP0=0, select bank0
  4268     075A  1303               	bcf	3,6	;RP1=0, select bank0
  4269     075B  0826               	movf	ADC_read@channel,w
  4270     075C  0427               	iorwf	ADC_read@channel+1,w
  4271     075D  1D03               	btfss	3,2
  4272     075E  2F60               	goto	u1951
  4273     075F  2F61               	goto	u1950
  4274     0760                     u1951:
  4275     0760  2F6D               	goto	l1897
  4276     0761                     u1950:
  4277     0761                     l1891:
  4278                           
  4279                           ;setupADC.c: 46:         ADCON0bits.CHS = 0b0000;
  4280     0761  30C3               	movlw	-61
  4281     0762  059F               	andwf	31,f	;volatile
  4282     0763                     l1893:
  4283                           
  4284                           ;setupADC.c: 47:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  4285     0763  3020               	movlw	32
  4286     0764  1283               	bcf	3,5	;RP0=0, select bank0
  4287     0765  1303               	bcf	3,6	;RP1=0, select bank0
  4288     0766  00A8               	movwf	??_ADC_read
  4289     0767                     u2507:
  4290     0767  0BA8               	decfsz	??_ADC_read,f
  4291     0768  2F67               	goto	u2507
  4292     0769  0000               	nop
  4293     076A                     l1895:
  4294                           
  4295                           ;setupADC.c: 48:         ADCON0bits.GO = 1;
  4296     076A  1283               	bcf	3,5	;RP0=0, select bank0
  4297     076B  1303               	bcf	3,6	;RP1=0, select bank0
  4298     076C  149F               	bsf	31,1	;volatile
  4299     076D                     l1897:
  4300                           
  4301                           ;setupADC.c: 50:     if(channel ==1){
  4302     076D  0326               	decf	ADC_read@channel,w
  4303     076E  0427               	iorwf	ADC_read@channel+1,w
  4304     076F  1D03               	btfss	3,2
  4305     0770  2F72               	goto	u1961
  4306     0771  2F73               	goto	u1960
  4307     0772                     u1961:
  4308     0772  2F81               	goto	l1905
  4309     0773                     u1960:
  4310     0773                     l1899:
  4311                           
  4312                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  4313     0773  081F               	movf	31,w	;volatile
  4314     0774  39C3               	andlw	-61
  4315     0775  3804               	iorlw	4
  4316     0776  009F               	movwf	31	;volatile
  4317     0777                     l1901:
  4318                           
  4319                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  4320     0777  3020               	movlw	32
  4321     0778  1283               	bcf	3,5	;RP0=0, select bank0
  4322     0779  1303               	bcf	3,6	;RP1=0, select bank0
  4323     077A  00A8               	movwf	??_ADC_read
  4324     077B                     u2517:
  4325     077B  0BA8               	decfsz	??_ADC_read,f
  4326     077C  2F7B               	goto	u2517
  4327     077D  0000               	nop
  4328     077E                     l1903:
  4329                           
  4330                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  4331     077E  1283               	bcf	3,5	;RP0=0, select bank0
  4332     077F  1303               	bcf	3,6	;RP1=0, select bank0
  4333     0780  149F               	bsf	31,1	;volatile
  4334     0781                     l1905:
  4335                           
  4336                           ;setupADC.c: 55:     if(channel ==2){
  4337     0781  3002               	movlw	2
  4338     0782  0626               	xorwf	ADC_read@channel,w
  4339     0783  0427               	iorwf	ADC_read@channel+1,w
  4340     0784  1D03               	btfss	3,2
  4341     0785  2F87               	goto	u1971
  4342     0786  2F88               	goto	u1970
  4343     0787                     u1971:
  4344     0787  2F96               	goto	l115
  4345     0788                     u1970:
  4346     0788                     l1907:
  4347                           
  4348                           ;setupADC.c: 56:         ADCON0bits.CHS = 0b0010;
  4349     0788  081F               	movf	31,w	;volatile
  4350     0789  39C3               	andlw	-61
  4351     078A  3808               	iorlw	8
  4352     078B  009F               	movwf	31	;volatile
  4353     078C                     l1909:
  4354                           
  4355                           ;setupADC.c: 57:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  4356     078C  3020               	movlw	32
  4357     078D  1283               	bcf	3,5	;RP0=0, select bank0
  4358     078E  1303               	bcf	3,6	;RP1=0, select bank0
  4359     078F  00A8               	movwf	??_ADC_read
  4360     0790                     u2527:
  4361     0790  0BA8               	decfsz	??_ADC_read,f
  4362     0791  2F90               	goto	u2527
  4363     0792  0000               	nop
  4364     0793                     l1911:
  4365                           
  4366                           ;setupADC.c: 58:         ADCON0bits.GO = 1;
  4367     0793  1283               	bcf	3,5	;RP0=0, select bank0
  4368     0794  1303               	bcf	3,6	;RP1=0, select bank0
  4369     0795  149F               	bsf	31,1	;volatile
  4370     0796                     l115:
  4371     0796  0008               	return
  4372     0797                     __end_of_ADC_read:
  4373                           
  4374                           	psect	text21
  4375     0719                     __ptext21:	
  4376 ;; *************** function _ADC_config *****************
  4377 ;; Defined at:
  4378 ;;		line 11 in file "setupADC.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  channel         2    6[BANK0 ] int 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4392 ;;      Params:         0       2       0       0       0
  4393 ;;      Locals:         0       0       0       0       0
  4394 ;;      Temps:          0       1       0       0       0
  4395 ;;      Totals:         0       3       0       0       0
  4396 ;;Total ram usage:        3 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 2
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406     0719                     _ADC_config:	
  4407                           ;psect for function _ADC_config
  4408                           
  4409     0719                     l1833:	
  4410                           ;incstack = 0
  4411                           ; Regs used in _ADC_config: [wreg]
  4412                           
  4413                           
  4414                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  4415     0719  1283               	bcf	3,5	;RP0=0, select bank0
  4416     071A  1303               	bcf	3,6	;RP1=0, select bank0
  4417     071B  1C26               	btfss	ADC_config@channel,0
  4418     071C  2F1E               	goto	u1891
  4419     071D  2F1F               	goto	u1890
  4420     071E                     u1891:
  4421     071E  2F26               	goto	l106
  4422     071F                     u1890:
  4423     071F                     l1835:
  4424                           
  4425                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  4426     071F  1005               	bcf	5,0	;volatile
  4427                           
  4428                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  4429     0720  1683               	bsf	3,5	;RP0=1, select bank1
  4430     0721  1303               	bcf	3,6	;RP1=0, select bank1
  4431     0722  1405               	bsf	5,0	;volatile
  4432                           
  4433                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  4434     0723  1683               	bsf	3,5	;RP0=1, select bank3
  4435     0724  1703               	bsf	3,6	;RP1=1, select bank3
  4436     0725  1408               	bsf	8,0	;volatile
  4437     0726                     l106:	
  4438                           ;setupADC.c: 16:     }
  4439                           
  4440                           
  4441                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  4442     0726  1283               	bcf	3,5	;RP0=0, select bank0
  4443     0727  1303               	bcf	3,6	;RP1=0, select bank0
  4444     0728  1CA6               	btfss	ADC_config@channel,1
  4445     0729  2F2B               	goto	u1901
  4446     072A  2F2C               	goto	u1900
  4447     072B                     u1901:
  4448     072B  2F33               	goto	l107
  4449     072C                     u1900:
  4450     072C                     l1837:
  4451                           
  4452                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  4453     072C  1085               	bcf	5,1	;volatile
  4454                           
  4455                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  4456     072D  1683               	bsf	3,5	;RP0=1, select bank1
  4457     072E  1303               	bcf	3,6	;RP1=0, select bank1
  4458     072F  1485               	bsf	5,1	;volatile
  4459                           
  4460                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  4461     0730  1683               	bsf	3,5	;RP0=1, select bank3
  4462     0731  1703               	bsf	3,6	;RP1=1, select bank3
  4463     0732  1488               	bsf	8,1	;volatile
  4464     0733                     l107:	
  4465                           ;setupADC.c: 22:     }
  4466                           
  4467                           
  4468                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  4469     0733  1283               	bcf	3,5	;RP0=0, select bank0
  4470     0734  1303               	bcf	3,6	;RP1=0, select bank0
  4471     0735  1D26               	btfss	ADC_config@channel,2
  4472     0736  2F38               	goto	u1911
  4473     0737  2F39               	goto	u1910
  4474     0738                     u1911:
  4475     0738  2F40               	goto	l108
  4476     0739                     u1910:
  4477     0739                     l1839:
  4478                           
  4479                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  4480     0739  1105               	bcf	5,2	;volatile
  4481                           
  4482                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  4483     073A  1683               	bsf	3,5	;RP0=1, select bank1
  4484     073B  1303               	bcf	3,6	;RP1=0, select bank1
  4485     073C  1505               	bsf	5,2	;volatile
  4486                           
  4487                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  4488     073D  1683               	bsf	3,5	;RP0=1, select bank3
  4489     073E  1703               	bsf	3,6	;RP1=1, select bank3
  4490     073F  1508               	bsf	8,2	;volatile
  4491     0740                     l108:	
  4492                           ;setupADC.c: 27:     }
  4493                           
  4494                           
  4495                           ;setupADC.c: 29:     INTCONbits.PEIE = 1;
  4496     0740  170B               	bsf	11,6	;volatile
  4497                           
  4498                           ;setupADC.c: 30:     PIE1bits.ADIE = 1;
  4499     0741  1683               	bsf	3,5	;RP0=1, select bank1
  4500     0742  1303               	bcf	3,6	;RP1=0, select bank1
  4501     0743  170C               	bsf	12,6	;volatile
  4502                           
  4503                           ;setupADC.c: 31:     PIR1bits.ADIF = 0;
  4504     0744  1283               	bcf	3,5	;RP0=0, select bank0
  4505     0745  1303               	bcf	3,6	;RP1=0, select bank0
  4506     0746  130C               	bcf	12,6	;volatile
  4507                           
  4508                           ;setupADC.c: 33:     ADCON0bits.ADCS1 = 0;
  4509     0747  139F               	bcf	31,7	;volatile
  4510                           
  4511                           ;setupADC.c: 34:     ADCON0bits.ADCS0 = 1;
  4512     0748  171F               	bsf	31,6	;volatile
  4513                           
  4514                           ;setupADC.c: 36:     ADCON1bits.VCFG1 = 0;
  4515     0749  1683               	bsf	3,5	;RP0=1, select bank1
  4516     074A  1303               	bcf	3,6	;RP1=0, select bank1
  4517     074B  129F               	bcf	31,5	;volatile
  4518                           
  4519                           ;setupADC.c: 37:     ADCON1bits.VCFG0 = 0;
  4520     074C  121F               	bcf	31,4	;volatile
  4521                           
  4522                           ;setupADC.c: 39:     ADCON1bits.ADFM = 0;
  4523     074D  139F               	bcf	31,7	;volatile
  4524                           
  4525                           ;setupADC.c: 41:     ADCON0bits.ADON = 1;
  4526     074E  1283               	bcf	3,5	;RP0=0, select bank0
  4527     074F  1303               	bcf	3,6	;RP1=0, select bank0
  4528     0750  141F               	bsf	31,0	;volatile
  4529     0751                     l1841:
  4530                           
  4531                           ;setupADC.c: 42:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  4532     0751  3020               	movlw	32
  4533     0752  1283               	bcf	3,5	;RP0=0, select bank0
  4534     0753  1303               	bcf	3,6	;RP1=0, select bank0
  4535     0754  00A8               	movwf	??_ADC_config
  4536     0755                     u2537:
  4537     0755  0BA8               	decfsz	??_ADC_config,f
  4538     0756  2F55               	goto	u2537
  4539     0757  0000               	nop
  4540     0758                     l109:
  4541     0758  0008               	return
  4542     0759                     __end_of_ADC_config:
  4543                           
  4544                           	psect	text22
  4545     059A                     __ptext22:	
  4546 ;; *************** function _isr *****************
  4547 ;; Defined at:
  4548 ;;		line 55 in file "main.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0
  4564 ;;      Temps:          0       6       0       0       0
  4565 ;;      Totals:         0       6       0       0       0
  4566 ;;Total ram usage:        6 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 1
  4569 ;; This function calls:
  4570 ;;		___xxtofl
  4571 ;; This function is called by:
  4572 ;;		Interrupt level 1
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576     059A                     _isr:	
  4577                           ;psect for function _isr
  4578                           
  4579     059A                     i1l2101:
  4580                           
  4581                           ;main.c: 57:     if(INTCONbits.RBIF){
  4582     059A  1C0B               	btfss	11,0	;volatile
  4583     059B  2D9D               	goto	u235_21
  4584     059C  2D9E               	goto	u235_20
  4585     059D                     u235_21:
  4586     059D  2DAF               	goto	i1l2113
  4587     059E                     u235_20:
  4588     059E                     i1l2103:
  4589                           
  4590                           ;main.c: 58:         if(PORTBbits.RB7 == 0){
  4591     059E  1B86               	btfsc	6,7	;volatile
  4592     059F  2DA1               	goto	u236_21
  4593     05A0  2DA2               	goto	u236_20
  4594     05A1                     u236_21:
  4595     05A1  2DA6               	goto	i1l2107
  4596     05A2                     u236_20:
  4597     05A2                     i1l2105:
  4598                           
  4599                           ;main.c: 59:             cont = 1;
  4600     05A2  3001               	movlw	1
  4601     05A3  00D2               	movwf	_cont
  4602     05A4  3000               	movlw	0
  4603     05A5  00D3               	movwf	_cont+1
  4604     05A6                     i1l2107:
  4605                           
  4606                           ;main.c: 61:         if(PORTBbits.RB6 == 0){
  4607     05A6  1B06               	btfsc	6,6	;volatile
  4608     05A7  2DA9               	goto	u237_21
  4609     05A8  2DAA               	goto	u237_20
  4610     05A9                     u237_21:
  4611     05A9  2DAE               	goto	i1l2111
  4612     05AA                     u237_20:
  4613     05AA                     i1l2109:
  4614                           
  4615                           ;main.c: 62:             cont = 2;
  4616     05AA  3002               	movlw	2
  4617     05AB  00D2               	movwf	_cont
  4618     05AC  3000               	movlw	0
  4619     05AD  00D3               	movwf	_cont+1
  4620     05AE                     i1l2111:
  4621                           
  4622                           ;main.c: 64:         INTCONbits.RBIF = 0;
  4623     05AE  100B               	bcf	11,0	;volatile
  4624     05AF                     i1l2113:
  4625                           
  4626                           ;main.c: 67:     if(PIR1bits.ADIF){
  4627     05AF  1F0C               	btfss	12,6	;volatile
  4628     05B0  2DB2               	goto	u238_21
  4629     05B1  2DB3               	goto	u238_20
  4630     05B2                     u238_21:
  4631     05B2  2DEB               	goto	i1l64
  4632     05B3                     u238_20:
  4633     05B3                     i1l2115:
  4634                           
  4635                           ;main.c: 68:         if(ADCON0bits.CHS == 0){
  4636     05B3  0C1F               	rrf	31,w	;volatile
  4637     05B4  00A0               	movwf	??_isr
  4638     05B5  0C20               	rrf	??_isr,w
  4639     05B6  390F               	andlw	15
  4640     05B7  3A00               	xorlw	0
  4641     05B8  1D03               	skipz
  4642     05B9  2DBB               	goto	u239_21
  4643     05BA  2DBC               	goto	u239_20
  4644     05BB                     u239_21:
  4645     05BB  2DDA               	goto	i1l2119
  4646     05BC                     u239_20:
  4647     05BC                     i1l2117:
  4648                           
  4649                           ;main.c: 69:             lecADC0 = ADRESH;
  4650     05BC  081E               	movf	30,w	;volatile
  4651     05BD  00A0               	movwf	??_isr
  4652     05BE  01A1               	clrf	??_isr+1
  4653     05BF  01A2               	clrf	??_isr+2
  4654     05C0  01A3               	clrf	??_isr+3
  4655     05C1  0823               	movf	??_isr+3,w
  4656     05C2  00F3               	movwf	___xxtofl@val+3
  4657     05C3  0822               	movf	??_isr+2,w
  4658     05C4  00F2               	movwf	___xxtofl@val+2
  4659     05C5  0821               	movf	??_isr+1,w
  4660     05C6  00F1               	movwf	___xxtofl@val+1
  4661     05C7  0820               	movf	??_isr,w
  4662     05C8  00F0               	movwf	___xxtofl@val
  4663     05C9  3000               	movlw	0
  4664     05CA  120A  118A  21CE  120A  118A  	fcall	___xxtofl
  4665     05CF  0873               	movf	?___xxtofl+3,w
  4666     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  4667     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  4668     05D2  00D1               	movwf	_lecADC0+3
  4669     05D3  0872               	movf	?___xxtofl+2,w
  4670     05D4  00D0               	movwf	_lecADC0+2
  4671     05D5  0871               	movf	?___xxtofl+1,w
  4672     05D6  00CF               	movwf	_lecADC0+1
  4673     05D7  0870               	movf	?___xxtofl,w
  4674     05D8  00CE               	movwf	_lecADC0
  4675                           
  4676                           ;main.c: 70:         }
  4677     05D9  2DEA               	goto	i1l2123
  4678     05DA                     i1l2119:
  4679     05DA  0C1F               	rrf	31,w	;volatile
  4680     05DB  00A0               	movwf	??_isr
  4681     05DC  0C20               	rrf	??_isr,w
  4682     05DD  390F               	andlw	15
  4683     05DE  3A01               	xorlw	1
  4684     05DF  1D03               	skipz
  4685     05E0  2DE2               	goto	u240_21
  4686     05E1  2DE3               	goto	u240_20
  4687     05E2                     u240_21:
  4688     05E2  2DEA               	goto	i1l2123
  4689     05E3                     u240_20:
  4690     05E3                     i1l2121:
  4691                           
  4692                           ;main.c: 72:             lecADC1 = ADRESH;
  4693     05E3  081E               	movf	30,w	;volatile
  4694     05E4  00A0               	movwf	??_isr
  4695     05E5  01A1               	clrf	??_isr+1
  4696     05E6  0820               	movf	??_isr,w
  4697     05E7  00D8               	movwf	_lecADC1
  4698     05E8  0821               	movf	??_isr+1,w
  4699     05E9  00D9               	movwf	_lecADC1+1
  4700     05EA                     i1l2123:
  4701                           
  4702                           ;main.c: 74:         ADIF = 0;
  4703     05EA  130C               	bcf	12,6	;volatile
  4704     05EB                     i1l64:
  4705     05EB  0825               	movf	??_isr+5,w
  4706     05EC  008A               	movwf	10
  4707     05ED  0E24               	swapf	??_isr+4,w
  4708     05EE  0083               	movwf	3
  4709     05EF  0EFE               	swapf	btemp,f
  4710     05F0  0E7E               	swapf	btemp,w
  4711     05F1  0009               	retfie
  4712     05F2                     __end_of_isr:
  4713                           
  4714                           	psect	intentry
  4715     0004                     __pintentry:	
  4716                           ;incstack = 0
  4717                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4718                           
  4719     0004                     interrupt_function:
  4720     007E                     saved_w	set	btemp
  4721     0004  00FE               	movwf	btemp
  4722     0005  0E03               	swapf	3,w
  4723     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4724     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4725     0008  00A4               	movwf	??_isr+4
  4726     0009  080A               	movf	10,w
  4727     000A  00A5               	movwf	??_isr+5
  4728     000B  120A  118A  2D9A   	ljmp	_isr
  4729                           
  4730                           	psect	text23
  4731     01CE                     __ptext23:	
  4732 ;; *************** function ___xxtofl *****************
  4733 ;; Defined at:
  4734 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  sign            1    wreg     unsigned char 
  4737 ;;  val             4    0[COMMON] long 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  sign            1    8[COMMON] unsigned char 
  4740 ;;  arg             4   10[COMMON] unsigned long 
  4741 ;;  exp             1    9[COMMON] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  4    0[COMMON] unsigned char 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4751 ;;      Params:         4       0       0       0       0
  4752 ;;      Locals:         6       0       0       0       0
  4753 ;;      Temps:          4       0       0       0       0
  4754 ;;      Totals:        14       0       0       0       0
  4755 ;;Total ram usage:       14 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_isr
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764     01CE                     ___xxtofl:	
  4765                           ;psect for function ___xxtofl
  4766                           
  4767                           
  4768                           ;incstack = 0
  4769                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4770                           ;___xxtofl@sign stored from wreg
  4771     01CE  00F8               	movwf	___xxtofl@sign
  4772     01CF                     i1l2057:
  4773     01CF  0878               	movf	___xxtofl@sign,w
  4774     01D0  1903               	btfsc	3,2
  4775     01D1  29D3               	goto	u221_21
  4776     01D2  29D4               	goto	u221_20
  4777     01D3                     u221_21:
  4778     01D3  29E8               	goto	i1l2063
  4779     01D4                     u221_20:
  4780     01D4                     i1l2059:
  4781     01D4  1FF3               	btfss	___xxtofl@val+3,7
  4782     01D5  29D7               	goto	u222_21
  4783     01D6  29D8               	goto	u222_20
  4784     01D7                     u222_21:
  4785     01D7  29E8               	goto	i1l2063
  4786     01D8                     u222_20:
  4787     01D8                     i1l2061:
  4788     01D8  0970               	comf	___xxtofl@val,w
  4789     01D9  00FA               	movwf	___xxtofl@arg
  4790     01DA  0971               	comf	___xxtofl@val+1,w
  4791     01DB  00FB               	movwf	___xxtofl@arg+1
  4792     01DC  0972               	comf	___xxtofl@val+2,w
  4793     01DD  00FC               	movwf	___xxtofl@arg+2
  4794     01DE  0973               	comf	___xxtofl@val+3,w
  4795     01DF  00FD               	movwf	___xxtofl@arg+3
  4796     01E0  0AFA               	incf	___xxtofl@arg,f
  4797     01E1  1903               	skipnz
  4798     01E2  0AFB               	incf	___xxtofl@arg+1,f
  4799     01E3  1903               	skipnz
  4800     01E4  0AFC               	incf	___xxtofl@arg+2,f
  4801     01E5  1903               	skipnz
  4802     01E6  0AFD               	incf	___xxtofl@arg+3,f
  4803     01E7  29F0               	goto	i1l786
  4804     01E8                     i1l2063:
  4805     01E8  0873               	movf	___xxtofl@val+3,w
  4806     01E9  00FD               	movwf	___xxtofl@arg+3
  4807     01EA  0872               	movf	___xxtofl@val+2,w
  4808     01EB  00FC               	movwf	___xxtofl@arg+2
  4809     01EC  0871               	movf	___xxtofl@val+1,w
  4810     01ED  00FB               	movwf	___xxtofl@arg+1
  4811     01EE  0870               	movf	___xxtofl@val,w
  4812     01EF  00FA               	movwf	___xxtofl@arg
  4813     01F0                     i1l786:
  4814     01F0  0873               	movf	___xxtofl@val+3,w
  4815     01F1  0472               	iorwf	___xxtofl@val+2,w
  4816     01F2  0471               	iorwf	___xxtofl@val+1,w
  4817     01F3  0470               	iorwf	___xxtofl@val,w
  4818     01F4  1D03               	skipz
  4819     01F5  29F7               	goto	u223_21
  4820     01F6  29F8               	goto	u223_20
  4821     01F7                     u223_21:
  4822     01F7  2A01               	goto	i1l2069
  4823     01F8                     u223_20:
  4824     01F8                     i1l2065:
  4825     01F8  3000               	movlw	0
  4826     01F9  00F3               	movwf	?___xxtofl+3
  4827     01FA  3000               	movlw	0
  4828     01FB  00F2               	movwf	?___xxtofl+2
  4829     01FC  3000               	movlw	0
  4830     01FD  00F1               	movwf	?___xxtofl+1
  4831     01FE  3000               	movlw	0
  4832     01FF  00F0               	movwf	?___xxtofl
  4833     0200  2A85               	goto	i1l788
  4834     0201                     i1l2069:
  4835     0201  3096               	movlw	150
  4836     0202  00F9               	movwf	___xxtofl@exp
  4837     0203  2A11               	goto	i1l2073
  4838     0204                     i1l2071:
  4839     0204  3001               	movlw	1
  4840     0205  00F4               	movwf	??___xxtofl
  4841     0206  0874               	movf	??___xxtofl,w
  4842     0207  07F9               	addwf	___xxtofl@exp,f
  4843     0208  3001               	movlw	1
  4844     0209                     u224_25:
  4845     0209  1003               	clrc
  4846     020A  0CFD               	rrf	___xxtofl@arg+3,f
  4847     020B  0CFC               	rrf	___xxtofl@arg+2,f
  4848     020C  0CFB               	rrf	___xxtofl@arg+1,f
  4849     020D  0CFA               	rrf	___xxtofl@arg,f
  4850     020E  3EFF               	addlw	-1
  4851     020F  1D03               	skipz
  4852     0210  2A09               	goto	u224_25
  4853     0211                     i1l2073:
  4854     0211  30FE               	movlw	254
  4855     0212  057D               	andwf	___xxtofl@arg+3,w
  4856     0213  1D03               	btfss	3,2
  4857     0214  2A16               	goto	u225_21
  4858     0215  2A17               	goto	u225_20
  4859     0216                     u225_21:
  4860     0216  2A04               	goto	i1l2071
  4861     0217                     u225_20:
  4862     0217  2A33               	goto	i1l792
  4863     0218                     i1l2075:
  4864     0218  3001               	movlw	1
  4865     0219  00F4               	movwf	??___xxtofl
  4866     021A  0874               	movf	??___xxtofl,w
  4867     021B  07F9               	addwf	___xxtofl@exp,f
  4868     021C                     i1l2077:
  4869     021C  3001               	movlw	1
  4870     021D  07FA               	addwf	___xxtofl@arg,f
  4871     021E  3000               	movlw	0
  4872     021F  1803               	skipnc
  4873     0220  3001               	movlw	1
  4874     0221  07FB               	addwf	___xxtofl@arg+1,f
  4875     0222  3000               	movlw	0
  4876     0223  1803               	skipnc
  4877     0224  3001               	movlw	1
  4878     0225  07FC               	addwf	___xxtofl@arg+2,f
  4879     0226  3000               	movlw	0
  4880     0227  1803               	skipnc
  4881     0228  3001               	movlw	1
  4882     0229  07FD               	addwf	___xxtofl@arg+3,f
  4883     022A                     i1l2079:
  4884     022A  3001               	movlw	1
  4885     022B                     u226_25:
  4886     022B  1003               	clrc
  4887     022C  0CFD               	rrf	___xxtofl@arg+3,f
  4888     022D  0CFC               	rrf	___xxtofl@arg+2,f
  4889     022E  0CFB               	rrf	___xxtofl@arg+1,f
  4890     022F  0CFA               	rrf	___xxtofl@arg,f
  4891     0230  3EFF               	addlw	-1
  4892     0231  1D03               	skipz
  4893     0232  2A2B               	goto	u226_25
  4894     0233                     i1l792:
  4895     0233  30FF               	movlw	255
  4896     0234  057D               	andwf	___xxtofl@arg+3,w
  4897     0235  1D03               	btfss	3,2
  4898     0236  2A38               	goto	u227_21
  4899     0237  2A39               	goto	u227_20
  4900     0238                     u227_21:
  4901     0238  2A18               	goto	i1l2075
  4902     0239                     u227_20:
  4903     0239  2A45               	goto	i1l2083
  4904     023A                     i1l2081:
  4905     023A  3001               	movlw	1
  4906     023B  02F9               	subwf	___xxtofl@exp,f
  4907     023C  3001               	movlw	1
  4908     023D  00F4               	movwf	??___xxtofl
  4909     023E                     u228_25:
  4910     023E  1003               	clrc
  4911     023F  0DFA               	rlf	___xxtofl@arg,f
  4912     0240  0DFB               	rlf	___xxtofl@arg+1,f
  4913     0241  0DFC               	rlf	___xxtofl@arg+2,f
  4914     0242  0DFD               	rlf	___xxtofl@arg+3,f
  4915     0243  0BF4               	decfsz	??___xxtofl,f
  4916     0244  2A3E               	goto	u228_25
  4917     0245                     i1l2083:
  4918     0245  1BFC               	btfsc	___xxtofl@arg+2,7
  4919     0246  2A48               	goto	u229_21
  4920     0247  2A49               	goto	u229_20
  4921     0248                     u229_21:
  4922     0248  2A4F               	goto	i1l799
  4923     0249                     u229_20:
  4924     0249                     i1l2085:
  4925     0249  3002               	movlw	2
  4926     024A  0279               	subwf	___xxtofl@exp,w
  4927     024B  1803               	skipnc
  4928     024C  2A4E               	goto	u230_21
  4929     024D  2A4F               	goto	u230_20
  4930     024E                     u230_21:
  4931     024E  2A3A               	goto	i1l2081
  4932     024F                     u230_20:
  4933     024F                     i1l799:
  4934     024F  1879               	btfsc	___xxtofl@exp,0
  4935     0250  2A52               	goto	u231_21
  4936     0251  2A53               	goto	u231_20
  4937     0252                     u231_21:
  4938     0252  2A5B               	goto	i1l800
  4939     0253                     u231_20:
  4940     0253                     i1l2087:
  4941     0253  30FF               	movlw	255
  4942     0254  05FA               	andwf	___xxtofl@arg,f
  4943     0255  30FF               	movlw	255
  4944     0256  05FB               	andwf	___xxtofl@arg+1,f
  4945     0257  307F               	movlw	127
  4946     0258  05FC               	andwf	___xxtofl@arg+2,f
  4947     0259  30FF               	movlw	255
  4948     025A  05FD               	andwf	___xxtofl@arg+3,f
  4949     025B                     i1l800:
  4950     025B  1003               	clrc
  4951     025C  0CF9               	rrf	___xxtofl@exp,f
  4952     025D                     i1l2089:
  4953     025D  0879               	movf	___xxtofl@exp,w
  4954     025E  00F4               	movwf	??___xxtofl
  4955     025F  01F5               	clrf	??___xxtofl+1
  4956     0260  01F6               	clrf	??___xxtofl+2
  4957     0261  01F7               	clrf	??___xxtofl+3
  4958     0262  3018               	movlw	24
  4959     0263                     u232_25:
  4960     0263  1003               	clrc
  4961     0264  0DF4               	rlf	??___xxtofl,f
  4962     0265  0DF5               	rlf	??___xxtofl+1,f
  4963     0266  0DF6               	rlf	??___xxtofl+2,f
  4964     0267  0DF7               	rlf	??___xxtofl+3,f
  4965     0268                     u232_20:
  4966     0268  3EFF               	addlw	-1
  4967     0269  1D03               	skipz
  4968     026A  2A63               	goto	u232_25
  4969     026B  0874               	movf	??___xxtofl,w
  4970     026C  04FA               	iorwf	___xxtofl@arg,f
  4971     026D  0875               	movf	??___xxtofl+1,w
  4972     026E  04FB               	iorwf	___xxtofl@arg+1,f
  4973     026F  0876               	movf	??___xxtofl+2,w
  4974     0270  04FC               	iorwf	___xxtofl@arg+2,f
  4975     0271  0877               	movf	??___xxtofl+3,w
  4976     0272  04FD               	iorwf	___xxtofl@arg+3,f
  4977     0273                     i1l2091:
  4978     0273  0878               	movf	___xxtofl@sign,w
  4979     0274  1903               	btfsc	3,2
  4980     0275  2A77               	goto	u233_21
  4981     0276  2A78               	goto	u233_20
  4982     0277                     u233_21:
  4983     0277  2A7D               	goto	i1l2097
  4984     0278                     u233_20:
  4985     0278                     i1l2093:
  4986     0278  1FF3               	btfss	___xxtofl@val+3,7
  4987     0279  2A7B               	goto	u234_21
  4988     027A  2A7C               	goto	u234_20
  4989     027B                     u234_21:
  4990     027B  2A7D               	goto	i1l2097
  4991     027C                     u234_20:
  4992     027C                     i1l2095:
  4993     027C  17FD               	bsf	___xxtofl@arg+3,7
  4994     027D                     i1l2097:
  4995     027D  087D               	movf	___xxtofl@arg+3,w
  4996     027E  00F3               	movwf	?___xxtofl+3
  4997     027F  087C               	movf	___xxtofl@arg+2,w
  4998     0280  00F2               	movwf	?___xxtofl+2
  4999     0281  087B               	movf	___xxtofl@arg+1,w
  5000     0282  00F1               	movwf	?___xxtofl+1
  5001     0283  087A               	movf	___xxtofl@arg,w
  5002     0284  00F0               	movwf	?___xxtofl
  5003     0285                     i1l788:
  5004     0285  0008               	return
  5005     0286                     __end_of___xxtofl:
  5006     007E                     btemp	set	126	;btemp
  5007     007E                     wtemp0	set	126
  5008                           
  5009                           	psect	idloc
  5010                           
  5011                           ;Config register IDLOC0 @ 0x2000
  5012                           ;	unspecified, using default values
  5013     2000                     	org	8192
  5014     2000  3FFF               	dw	16383
  5015                           
  5016                           ;Config register IDLOC1 @ 0x2001
  5017                           ;	unspecified, using default values
  5018     2001                     	org	8193
  5019     2001  3FFF               	dw	16383
  5020                           
  5021                           ;Config register IDLOC2 @ 0x2002
  5022                           ;	unspecified, using default values
  5023     2002                     	org	8194
  5024     2002  3FFF               	dw	16383
  5025                           
  5026                           ;Config register IDLOC3 @ 0x2003
  5027                           ;	unspecified, using default values
  5028     2003                     	org	8195
  5029     2003  3FFF               	dw	16383
  5030                           
  5031                           	psect	config
  5032                           
  5033                           ;Config register CONFIG1 @ 0x2007
  5034                           ;	Oscillator Selection bits
  5035                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5036                           ;	Watchdog Timer Enable bit
  5037                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5038                           ;	Power-up Timer Enable bit
  5039                           ;	PWRTE = OFF, PWRT disabled
  5040                           ;	RE3/MCLR pin function select bit
  5041                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5042                           ;	Code Protection bit
  5043                           ;	CP = OFF, Program memory code protection is disabled
  5044                           ;	Data Code Protection bit
  5045                           ;	CPD = OFF, Data memory code protection is disabled
  5046                           ;	Brown Out Reset Selection bits
  5047                           ;	BOREN = OFF, BOR disabled
  5048                           ;	Internal External Switchover bit
  5049                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5050                           ;	Fail-Safe Clock Monitor Enabled bit
  5051                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5052                           ;	Low Voltage Programming Enable bit
  5053                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5054                           ;	In-Circuit Debugger Mode bit
  5055                           ;	DEBUG = 0x1, unprogramme  5056     2007                     	org	8199
  5057     2007  20D4               	dw	8404
  5058                           
  5059                           ;Config register CONFIG2 @ 0x2008
  5060                           ;	Brown-out Reset Selection bit
  5061                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5062                           ;	Flash Program Memory Self Write Enable bits
  5063                           ;	WRT = OFF, Write protection off
  5064     2008                     	org	8200
  5065     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl

Critical Paths under _main in BANK0

    _main->_mapeo
    _mapeo->___aldiv
    ___aldiv->___lmul
    _descomponer->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7417
                         _ADC_config
                           _ADC_read
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fltol
                      _configpuertos
                        _descomponer
                          _inttochar
                              _mapeo
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mapeo                                               12     7      5    1459
                                             34 BANK0     12     7      5
                            ___aldiv
                            ___fltol (ARG)
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             19 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _inttochar                                            1     1      0     220
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _descomponer                                          9     5      4    2638
                                             15 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              6 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _configpuertos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              6 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     321
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              7 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1    1168
                                             10 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                             10 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              7 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2     218
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     142
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0     398
                                              0 BANK0      6     6      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___fltol
   _configpuertos
   _descomponer
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _inttochar
   _mapeo
     ___aldiv
       ___lmul (ARG)
     ___fltol (ARG)
     ___lmul (ARG)
   _setupINTOSC

 _isr (ROOT)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3D       5       76.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 27 12:07:30 2023

                       pc 0002                        l80 04A8                        l81 04B5  
                      l82 04C2                        l83 04CE                        l85 04DB  
                      l77 0481                        l78 048E                        l79 049B  
            ___awdiv@sign 002C            ?_configpuertos 0070                        fsr 0004  
          mapeo@resultado 004B                       l106 0726                       l107 0733  
                     l115 0796                       l108 0740                       l140 0FCD  
                     l109 0758                       l141 0FCE                       l213 0643  
                     l150 0FF0                       l142 0FD4                       l151 0FF1  
                     l143 0FD5                       l152 0FF7                       l144 0FDB  
                     l153 0FF8                       l145 0FDC                       l209 0FA1  
                     l154 0FFE                       l146 0FE2                       l162 0F4E  
                     l226 0643                       l147 0FE3                       l171 040A  
                     l235 053E                       l156 0FFF                       l148 0FE9  
                     l180 07FB                       l149 0FEA                       l174 0F66  
                     l159 0F82                       l168 0FC3                       l506 0473  
                     l418 029A                       l267 06D2                       l428 0322  
                     l519 0599                       l367 068B                       l625 0718  
                     l546 0385                       l539 039A                       l635 07D2  
                     l549 039A                       _RC0 0038                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _isr 059A                       fsr0 0004              ___awmod@sign 002C  
            ___fltol@exp1 002F                      l2001 0631                      l2021 0323  
                    l2031 034B                      l2023 032E                      l2015 063B  
                    l2007 0633                      l2033 0353                      l2017 0641  
                    l2009 0639                      l2051 037A                      l2043 0361  
                    l2035 0355                      l2027 0337                      l2131 0060  
                    l2053 038A                      l2037 0359                      l2045 0373  
                    l2029 034A                      l2141 00B4                      l2133 0085  
                    l2125 0026                      l2055 038F                      l2151 00F7  
                    l2143 00BA                      l2135 009A                      l2127 0050  
                    l1601 0F71                      l2161 0122                      l2153 00FF  
                    l2145 00D1                      l2137 00A2                      l2129 0056  
                    l1603 0F74                      l1611 0652                      l2171 0167  
                    l2163 0138                      l2155 0107                      l2147 00D9  
                    l2139 00AA                      l1605 0F7F                      l1701 046F  
                    l1621 0286                      l1613 0669                      l2181 01AA  
                    l2173 016D                      l2165 014D                      l2157 0111  
                    l2149 00E1                      l1711 054B                      l1631 02AD  
                    l1623 0289                      l1615 0672                      l1607 0644  
                    l2183 01B2                      l2175 0184                      l2167 0155  
                    l2159 0117                      l1721 055F                      l1713 054D  
                    l1705 053F                      l1641 02D1                      l1633 02B5  
                    l1625 028D                      l1617 0683                      l1609 064E  
                    l1801 04AF                      l2185 01BA                      l2177 018C  
                    l2169 015D                      l1571 0FCB                      l1811 0F83  
                    l1731 057E                      l1723 0566                      l1715 0551  
                    l1707 0542                      l1651 0304                      l1643 02DA  
                    l1635 02BD                      l1627 029E                      l1803 04BC  
                    l2187 01C4                      l2179 0194                      l1901 0777  
                    l1581 0FEE                      l1573 0FD2                      l1821 0F95  
                    l1813 0F8B                      l1661 040B                      l1733 0585  
                    l1725 056A                      l1717 0556                      l1709 0546  
                    l1645 02EC                      l1637 02C0                      l1653 030A  
                    l1629 02A9                      l1805 04C8                      l1911 0793  
                    l1903 077E                      l1583 0FF5                      l1575 0FD9  
                    l1591 0F59                      l1831 0FA0                      l1823 0F96  
                    l1815 0F8C                      l1671 041D                      l1663 040E  
                    l1727 056E                      l1719 055C                      l1735 058B  
                    l1751 06E7                      l1743 06D3                      l1655 030F  
                    l1647 02FA                      l1639 02CD                      l1807 04D4  
                    l1841 0751                      l1833 0719                      l1905 0781  
                    l1585 0FFC                      l1577 0FE0                      l1569 0FC7  
                    l1593 0F5C                      l1825 0F99                      l1817 0F8D  
                    l1681 0431                      l1673 0422                      l1665 0412  
                    l1737 0590                      l1729 0578                      l1761 0707  
                    l1753 06EB                      l1745 06D7                      l1921 0514  
                    l1657 031A                      l1649 02FB                      l1913 068F  
                    l1809 04D8                      l1835 071F                      l1907 0788  
                    l1579 0FE7                      l1851 03C3                      l1843 039B  
                    l1595 0F63                      l1587 0F52                      l1827 0F9C  
                    l1819 0F94                      l1691 0457                      l1683 0438  
                    l1675 0426                      l1667 0417                      l1739 0595  
                    l1763 070E                      l1755 06EF                      l1747 06DD  
                    l1771 079F                      l1931 0523                      l1923 051B  
                    l1915 06CE                      l1837 072C                      l1909 078C  
                    l1597 0F6A                      l1861 03F7                      l1853 03D0  
                    l1845 03A1                      l1589 0F53                      l1829 0F9D  
                    l1693 0458                      l1685 043C                      l1677 0428  
                    l1669 0419                      l1757 0700                      l1749 06E0  
                    l1765 0714                      l1781 07BB                      l1773 07A2  
                    l1839 0739                      l1599 0F6B                      l1863 03FE  
                    l1855 03D7                      l1847 03AC                      l1871 0FAA  
                    l1695 045F                      l1687 0440                      l1679 042E  
                    l1759 0706                      l1783 07C1                      l1775 07A9  
                    l1919 04DC                      l1951 05FC                      l1943 05F5  
                    l1791 0477                      l1865 0404                      l1857 03E4  
                    l1849 03BD                      l1873 0FAD                      l1881 07D6  
                    l1689 0451                      l1697 0465                      l1785 07C8  
                    l1777 07AD                      l1769 0797                      l1937 0537  
                    l1929 051D                      l1961 0609                      l1953 0601  
                    l1945 05FA                      l1793 047D                      l1891 0761  
                    l1867 0F48                      l1859 03EA                      l1875 0FB4  
                    l1883 07D9                      l1699 046A                      l1779 07B1  
                    l1787 07CE                      l1939 053D                      l1795 0488  
                    l1893 0763                      l1877 0FBA                      l1869 0FA5  
                    l1885 07E6                      l1797 0495                      l1895 076A  
                    l1879 0FBD                      l1887 07EE                      l1991 0623  
                    l1983 061B                      l1975 0613                      l1967 060B  
                    l1959 0603                      l1799 04A2                      l1897 076D  
                    l1889 0759                      l1993 0629                      l1985 0621  
                    l1977 0619                      l1969 0611                      l1899 0773  
                    l1999 062B                      _ADIF 0066                      ?_isr 0070  
                    STR_1 0806                      u2000 053D                      u2001 053C  
                    u2010 05FA                      u2011 05F9                      u1300 0FE7  
                    u2100 0641                      u2020 0601                      u1301 0FE6  
                    u2101 0640                      u2021 0600                      u1310 0FEE  
                    u2110 032E                      u2030 0609                      u1311 0FED  
                    u2111 032D                      u2031 0608                      u1320 0FF5  
                    u2200 038F                      u2120 0345                      u2040 0611  
                    u1400 029E                      u1321 0FF4                      u2201 038E  
                    u2041 0610                      u1401 029D                      u1330 0FFC  
                    u2130 0359                      u2050 0619                      u1410 02BD  
                    u1331 0FFB                      u2131 0358                      u2051 0618  
                    u1411 02BC                      u1260 0FCB                      u2140 0360  
                    u1500 041D                      u2060 0621                      u1340 0652  
                    _IOCB 0096                      u1261 0FCA                      u2141 035F  
                    u2125 0340                      u1501 041C                      u2061 0620  
                    u1341 0651                      u1270 0FD2                      u1510 042E  
                    u2070 0629                      u1430 02D1                      u1271 0FD1  
                    u1511 042D                      u2071 0628                      u1431 02D0  
                    u1351 065B                      u1280 0FD9                      u2160 0372  
                    u1600 0551                      u2080 0631                      u1352 0662  
                    u1281 0FD8                      u2161 0371                      u1601 0550  
                    u2081 0630                      u1425 02C2                      u1353 0669  
                    u1290 0FE0                      u2170 0379                      u1530 0440  
                    u1610 055C                      u2090 0639                      u1450 02EC  
                    u1291 0FDF                      u2171 0378                      u2155 0362  
                    u1531 043F                      u1611 055B                      u2091 0638  
                    u1451 02EB                      u1700 06EF                      u1380 0683  
                    u1525 0432                      u1701 06EE                      u1445 02D3  
                    u1381 0682                      u1365 066B                      u2190 038A  
                    u1550 0451                      u1630 056E                      u1470 030A  
                    u1390 028D                      u2191 0389                      u1551 0450  
                    u1631 056D                      u1471 0309                      u1455 02E8  
                    u1391 028C                      u1375 0673                      u1640 0578  
                    u1720 0700                      u1800 07CE                      u1480 030F  
                    u2417 0F60                      u2185 037C                      u1545 0441  
                    u1641 0577                      u1625 0560                      u1721 06FF  
                    u1801 07CD                      u1481 030E                      u1465 02FC  
                    u1570 0465                      u1490 0412                      u1810 047D  
                    u2507 0767                      u2427 03A7                      u1571 0464  
                    u1555 044D                      u1491 0411                      u1715 06F0  
                    u1811 047C                      u1900 072C                      u1580 046A  
                    u1660 058B                      u1740 0714                      u1820 0488  
                    u1901 072B                      u2517 077B                      u2437 03B8  
                    u1581 0469                      u1565 0459                      u1661 058A  
                    u1645 0574                      u1741 0713                      u1725 06FC  
                    u1821 0487                      u1910 0739                      u1670 0590  
                    u1590 0546                      u1750 079F                      u1830 0495  
                    u1911 0738                      u2527 0790                      u2447 03C7  
                    u1671 058F                      u1655 057F                      u1591 0545  
                    u1735 0708                      u1751 079E                      u1831 0494  
                    u1920 0FAA                      u1680 06DD                      u1840 04A2  
                    u2537 0755                      u2457 03D4                      u1921 0FA9  
                    u1681 06DC                      u1841 04A1                      u1930 0FBA  
                    u1770 07B1                      u1850 04AF                      u2467 03E1  
                    u1931 0FB9                      u1771 07B0                      u1851 04AE  
                    u1940 07FB                      u1780 07BB                      u1860 04BC  
                    u2477 03EE                      u1941 07FA                      u1781 07BA  
                    u1765 07A3                      u1861 04BB                      u1950 0761  
                    u1870 04C8                      u1951 0760                      u2487 03FB  
                    u1695 06E1                      u1871 04C7                      u1960 0773  
                    u1880 04D4                      u1961 0772                      u2497 0F7A  
                    u1785 07B7                      u1881 04D3                      u1890 071F  
                    u1970 0788                      u1891 071E                      u1971 0787  
                    u1795 07C2                      u1980 051B                      u1981 051A  
                    u1990 0523                      u1991 0522                      i1l64 05EB  
                    _WPUB 0095         ?_Lcd_Write_String 0070                      _cont 0052  
                    _main 0026                      btemp 007E                      start 000E  
      ??_Lcd_Write_String 0029          __end_of_ADC_read 0797           __end_of_Lcd_Cmd 0F83  
                   ??_isr 0020             ___fltol@sign1 002E           __end_of___aldiv 0323  
                   ?_main 0070           __end_of___awdiv 0474           __end_of___awmod 059A  
         __end_of___fltol 039B           ___awdiv@divisor 0026           __end_of___lwdiv 0719  
         __end_of___lwmod 07D3                     i1l800 025B                     i1l792 0233  
                   i1l786 01F0                     i1l788 0285                     i1l799 024F  
         ___awdiv@counter 002B                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088       ___lmul@multiplicand 002A  
                   _mapeo 068C                     pclath 000A                     status 0003  
                   wtemp0 007E               mapeo@outmax 0045               mapeo@outmin 0044  
        __end_of_Lcd_Init 040B          __end_of_Lcd_Port 1000           __initialization 0011  
            __end_of_main 01CE           ??_configpuertos 0026                    ??_main 004E  
                  ?_mapeo 0042                    _ADRESH 001E          ___awdiv@dividend 0028  
                  i1l2101 059A                    i1l2111 05AE                    i1l2103 059E  
                  i1l2121 05E3                    i1l2105 05A2                    i1l2113 05AF  
                  i1l2123 05EA                    i1l2115 05B3                    i1l2107 05A6  
                  i1l2061 01D8                    i1l2117 05BC                    i1l2109 05AA  
                  i1l2071 0204                    i1l2063 01E8                    i1l2119 05DA  
                  i1l2081 023A                    i1l2073 0211                    i1l2065 01F8  
                  i1l2057 01CF                    i1l2091 0273                    i1l2083 0245  
                  i1l2075 0218                    i1l2059 01D4                    i1l2093 0278  
                  i1l2085 0249                    i1l2077 021C                    i1l2069 0201  
                  i1l2095 027C                    i1l2087 0253                    i1l2079 022A  
                  i1l2097 027D                    i1l2089 025D                    u221_20 01D4  
                  u221_21 01D3                    u230_20 024F                    u222_20 01D8  
                  u230_21 024E                    u222_21 01D7                    u231_20 0253  
                  u223_20 01F8                    u231_21 0252                    u223_21 01F7  
                  u232_20 0268                    u240_20 05E3                    u240_21 05E2  
                  u232_25 0263                    u224_25 0209                    u233_20 0278  
                  u225_20 0217                    u233_21 0277                    u225_21 0216  
                  u234_20 027C                    u234_21 027B                    u226_25 022B  
                  u227_20 0239                    u235_20 059E                    u227_21 0238  
                  u235_21 059D                    u236_20 05A2                    u236_21 05A1  
                  u228_25 023E                    u229_20 0249                    u237_20 05AA  
                  u229_21 0248                    u237_21 05A9                    u238_20 05B3  
                  u238_21 05B2                    u239_20 05BC                    u239_21 05BB  
               ??_Lcd_Cmd 0027          __end_of___xxtofl 0286              ??_ADC_config 0028  
                  ___lmul 0644                 ??___aldiv 003B                 ??___awdiv 002A  
               ??___awmod 002A                 ??___fltol 002A                 ??___lwdiv 002A  
               ??___lwmod 002A          ___awdiv@quotient 002D           ___awmod@divisor 0026  
         ___awmod@counter 002B              ?_setupINTOSC 0070                    saved_w 007E  
               ?_ADC_read 0026        __end_of_ADC_config 0759           Lcd_Set_Cursor@a 002B  
         Lcd_Set_Cursor@b 002A              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070   __end_of__initialization 0022         __end_of_Lcd_Clear 0F4F  
              ___fltol@f1 0026           descomponer@cent 0035            __pcstackCOMMON 0070  
           __end_of_mapeo 06D3            _Lcd_Set_Cursor 0FA2            _OPTION_REGbits 0081  
         ADC_read@channel 0026                ??_ADC_read 0028                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_mapeo 0047                __pbssBANK0 004E  
              __pmaintext 0026                   ?___lmul 0026                _centesimas 005A  
              __pintentry 0004            ___lmul@product 002F    __end_of_Lcd_Set_Cursor 0FC4  
               ?___xxtofl 0070                ??_Lcd_Init 002A                ??_Lcd_Port 0026  
              __stringtab 0800            _Lcd_Write_Char 0F4F                   _Lcd_Cmd 0F67  
                 ___aldiv 0286                   ___awdiv 040B                   ___awmod 053F  
                 ___fltol 0323                   ___lwdiv 06D3                   ___lwmod 0797  
                 _lecADC0 004E                   _lecADC1 0058                   _decimas 005B  
               _ANSELbits 0188           ?_Lcd_Set_Cursor 002A                   __ptext1 0474  
                 __ptext2 068C                   __ptext3 0644                   __ptext4 0286  
                 __ptext5 05F2                   __ptext6 04DC                   __ptext7 0797  
                 __ptext8 06D3                   __ptext9 053F                   _valADC0 0056  
                 _valADC1 0054                ??___xxtofl 0074          ___awmod@dividend 0028  
        ___aldiv@dividend 0037         __end_of_inttochar 0644    __end_of_Lcd_Write_Char 0F67  
    end_of_initialization 0022          ___aldiv@quotient 003E                 Lcd_Port@a 0026  
   __end_of_configpuertos 0FA2                 _PORTAbits 0005                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008             ??_descomponer 0033  
           ___xxtofl@sign 0078                 _TRISAbits 0085                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 002B         Lcd_Write_String@i 0029  
               _Lcd_Clear 0F48            __end_of___lmul 068C          _Lcd_Write_String 07D3  
              mapeo@inmax 0043                mapeo@inmin 0042       start_initialization 0011  
              mapeo@valor 004D               __end_of_isr 05F2       __end_of_descomponer 053F  
       ADC_config@channel 0026                ?_Lcd_Clear 0070                  ??___lmul 002E  
         Lcd_Write_Char@a 0028                 ___latbits 0002            descomponer@dec 0037  
           __pcstackBANK0 0020            descomponer@num 0031            descomponer@pos 002F  
          descomponer@uni 0036           setupINTOSC@IRCF 0026                  ?_Lcd_Cmd 0070  
        ___lwdiv@dividend 0028          ??_Lcd_Set_Cursor 002B                  ?___aldiv 0033  
            inttochar@num 0026                  ?___awdiv 0026                  ?___awmod 0026  
                ?___fltol 0026                  ?___lwdiv 0026                  ?___lwmod 0026  
               __pstrings 0800               _descomponer 04DC                  _ADC_read 0759  
        ___lwdiv@quotient 002B           ___aldiv@divisor 0033         interrupt_function 0004  
         ___aldiv@counter 003C                 _inttochar 05F2                  _PIE1bits 008C  
                Lcd_Cmd@a 0029                  _PIR1bits 000C               ??_Lcd_Clear 002A  
              _ADCON0bits 001F               __stringbase 0805                _ADCON1bits 009F  
           ??_setupINTOSC 0026          ??_Lcd_Write_Char 0027                  _Lcd_Init 039B  
                _Lcd_Port 0FC4         ___lmul@multiplier 0026  __end_of_Lcd_Write_String 07FC  
              ?_inttochar 0070                _ADC_config 0719        __end_of__stringtab 0806  
                ___xxtofl 01CE           ___lwdiv@divisor 0026           ___lwdiv@counter 002D  
                __ptext10 040B                  __ptext11 0F83                  __ptext20 0759  
                __ptext12 0323                  __ptext21 0719                  __ptext13 07D3  
                __ptext22 059A                  __ptext14 0F4F                  __ptext23 01CE  
                __ptext15 0FA2                  __ptext16 039B                  __ptext17 0F48  
                __ptext18 0F67                  __ptext19 0FC4       __end_of_setupINTOSC 04DC  
                _unidades 005C                _INTCONbits 000B                  intlevel1 0000  
        ___lwmod@dividend 0028               ??_inttochar 0026                 stringcode 0800  
              _OSCCONbits 008F               ?_ADC_config 0026        Lcd_Set_Cursor@temp 002C  
           _configpuertos 0F83               _setupINTOSC 0474              ?_descomponer 002F  
         ___lwmod@divisor 0026           ___lwmod@counter 002B                  stringdir 0800  
                stringtab 0800              ___aldiv@sign 003D  
