

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 27 03:23:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385     0000                     	;# 
   386     0001                     	;# 
   387     0002                     	;# 
   388     0003                     	;# 
   389     0004                     	;# 
   390     0005                     	;# 
   391     0006                     	;# 
   392     0007                     	;# 
   393     0008                     	;# 
   394     0009                     	;# 
   395     000A                     	;# 
   396     000B                     	;# 
   397     000C                     	;# 
   398     000D                     	;# 
   399     000E                     	;# 
   400     000E                     	;# 
   401     000F                     	;# 
   402     0010                     	;# 
   403     0011                     	;# 
   404     0012                     	;# 
   405     0013                     	;# 
   406     0014                     	;# 
   407     0015                     	;# 
   408     0015                     	;# 
   409     0016                     	;# 
   410     0017                     	;# 
   411     0018                     	;# 
   412     0019                     	;# 
   413     001A                     	;# 
   414     001B                     	;# 
   415     001B                     	;# 
   416     001C                     	;# 
   417     001D                     	;# 
   418     001E                     	;# 
   419     001F                     	;# 
   420     0081                     	;# 
   421     0085                     	;# 
   422     0086                     	;# 
   423     0087                     	;# 
   424     0088                     	;# 
   425     0089                     	;# 
   426     008C                     	;# 
   427     008D                     	;# 
   428     008E                     	;# 
   429     008F                     	;# 
   430     0090                     	;# 
   431     0091                     	;# 
   432     0092                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0093                     	;# 
   436     0094                     	;# 
   437     0095                     	;# 
   438     0096                     	;# 
   439     0097                     	;# 
   440     0098                     	;# 
   441     0099                     	;# 
   442     009A                     	;# 
   443     009B                     	;# 
   444     009C                     	;# 
   445     009D                     	;# 
   446     009E                     	;# 
   447     009F                     	;# 
   448     0105                     	;# 
   449     0107                     	;# 
   450     0108                     	;# 
   451     0109                     	;# 
   452     010C                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     010E                     	;# 
   456     010F                     	;# 
   457     0185                     	;# 
   458     0187                     	;# 
   459     0188                     	;# 
   460     0189                     	;# 
   461     018C                     	;# 
   462     018D                     	;# 
   463     0000                     	;# 
   464     0001                     	;# 
   465     0002                     	;# 
   466     0003                     	;# 
   467     0004                     	;# 
   468     0005                     	;# 
   469     0006                     	;# 
   470     0007                     	;# 
   471     0008                     	;# 
   472     0009                     	;# 
   473     000A                     	;# 
   474     000B                     	;# 
   475     000C                     	;# 
   476     000D                     	;# 
   477     000E                     	;# 
   478     000E                     	;# 
   479     000F                     	;# 
   480     0010                     	;# 
   481     0011                     	;# 
   482     0012                     	;# 
   483     0013                     	;# 
   484     0014                     	;# 
   485     0015                     	;# 
   486     0015                     	;# 
   487     0016                     	;# 
   488     0017                     	;# 
   489     0018                     	;# 
   490     0019                     	;# 
   491     001A                     	;# 
   492     001B                     	;# 
   493     001B                     	;# 
   494     001C                     	;# 
   495     001D                     	;# 
   496     001E                     	;# 
   497     001F                     	;# 
   498     0081                     	;# 
   499     0085                     	;# 
   500     0086                     	;# 
   501     0087                     	;# 
   502     0088                     	;# 
   503     0089                     	;# 
   504     008C                     	;# 
   505     008D                     	;# 
   506     008E                     	;# 
   507     008F                     	;# 
   508     0090                     	;# 
   509     0091                     	;# 
   510     0092                     	;# 
   511     0093                     	;# 
   512     0093                     	;# 
   513     0093                     	;# 
   514     0094                     	;# 
   515     0095                     	;# 
   516     0096                     	;# 
   517     0097                     	;# 
   518     0098                     	;# 
   519     0099                     	;# 
   520     009A                     	;# 
   521     009B                     	;# 
   522     009C                     	;# 
   523     009D                     	;# 
   524     009E                     	;# 
   525     009F                     	;# 
   526     0105                     	;# 
   527     0107                     	;# 
   528     0108                     	;# 
   529     0109                     	;# 
   530     010C                     	;# 
   531     010C                     	;# 
   532     010D                     	;# 
   533     010E                     	;# 
   534     010F                     	;# 
   535     0185                     	;# 
   536     0187                     	;# 
   537     0188                     	;# 
   538     0189                     	;# 
   539     018C                     	;# 
   540     018D                     	;# 
   541     0000                     	;# 
   542     0001                     	;# 
   543     0002                     	;# 
   544     0003                     	;# 
   545     0004                     	;# 
   546     0005                     	;# 
   547     0006                     	;# 
   548     0007                     	;# 
   549     0008                     	;# 
   550     0009                     	;# 
   551     000A                     	;# 
   552     000B                     	;# 
   553     000C                     	;# 
   554     000D                     	;# 
   555     000E                     	;# 
   556     000E                     	;# 
   557     000F                     	;# 
   558     0010                     	;# 
   559     0011                     	;# 
   560     0012                     	;# 
   561     0013                     	;# 
   562     0014                     	;# 
   563     0015                     	;# 
   564     0015                     	;# 
   565     0016                     	;# 
   566     0017                     	;# 
   567     0018                     	;# 
   568     0019                     	;# 
   569     001A                     	;# 
   570     001B                     	;# 
   571     001B                     	;# 
   572     001C                     	;# 
   573     001D                     	;# 
   574     001E                     	;# 
   575     001F                     	;# 
   576     0081                     	;# 
   577     0085                     	;# 
   578     0086                     	;# 
   579     0087                     	;# 
   580     0088                     	;# 
   581     0089                     	;# 
   582     008C                     	;# 
   583     008D                     	;# 
   584     008E                     	;# 
   585     008F                     	;# 
   586     0090                     	;# 
   587     0091                     	;# 
   588     0092                     	;# 
   589     0093                     	;# 
   590     0093                     	;# 
   591     0093                     	;# 
   592     0094                     	;# 
   593     0095                     	;# 
   594     0096                     	;# 
   595     0097                     	;# 
   596     0098                     	;# 
   597     0099                     	;# 
   598     009A                     	;# 
   599     009B                     	;# 
   600     009C                     	;# 
   601     009D                     	;# 
   602     009E                     	;# 
   603     009F                     	;# 
   604     0105                     	;# 
   605     0107                     	;# 
   606     0108                     	;# 
   607     0109                     	;# 
   608     010C                     	;# 
   609     010C                     	;# 
   610     010D                     	;# 
   611     010E                     	;# 
   612     010F                     	;# 
   613     0185                     	;# 
   614     0187                     	;# 
   615     0188                     	;# 
   616     0189                     	;# 
   617     018C                     	;# 
   618     018D                     	;# 
   619     0007                     _PORTC	set	7
   620     0008                     _PORTD	set	8
   621     0006                     _PORTB	set	6
   622     0008                     _PORTDbits	set	8
   623     0005                     _PORTAbits	set	5
   624     001E                     _ADRESH	set	30
   625     001F                     _ADCON0bits	set	31
   626     000C                     _PIR1bits	set	12
   627     0006                     _PORTBbits	set	6
   628     000B                     _INTCONbits	set	11
   629     0043                     _RD3	set	67
   630     0047                     _RD7	set	71
   631     0046                     _RD6	set	70
   632     0045                     _RD5	set	69
   633     0044                     _RD4	set	68
   634     0066                     _ADIF	set	102
   635     0087                     _TRISC	set	135
   636     0088                     _TRISD	set	136
   637     0081                     _OPTION_REGbits	set	129
   638     0095                     _WPUB	set	149
   639     0096                     _IOCB	set	150
   640     0086                     _TRISB	set	134
   641     009F                     _ADCON1bits	set	159
   642     008C                     _PIE1bits	set	140
   643     0085                     _TRISAbits	set	133
   644     008F                     _OSCCONbits	set	143
   645     0188                     _ANSELbits	set	392
   646                           
   647                           	psect	strings
   648     0800                     __pstrings:
   649     0800                     stringtab:
   650     0800                     __stringtab:
   651     0800                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0800                     stringdir:
   655     0800  3008               	movlw	high stringdir
   656     0801  008A               	movwf	10
   657     0802  0804               	movf	4,w
   658     0803  0A84               	incf	4,f
   659     0804  0782               	addwf	2,f
   660     0805                     __stringbase:
   661     0805  3400               	retlw	0
   662     0806                     __end_of__stringtab:
   663     0806                     STR_1:
   664     0806  3453               	retlw	83	;'S'
   665     0807  3431               	retlw	49	;'1'
   666     0808  343A               	retlw	58	;':'
   667     0809  3420               	retlw	32	;' '
   668     080A  3420               	retlw	32	;' '
   669     080B  3420               	retlw	32	;' '
   670     080C  3453               	retlw	83	;'S'
   671     080D  3432               	retlw	50	;'2'
   672     080E  343A               	retlw	58	;':'
   673     080F  3420               	retlw	32	;' '
   674     0810  3420               	retlw	32	;' '
   675     0811  3453               	retlw	83	;'S'
   676     0812  3433               	retlw	51	;'3'
   677     0813  343A               	retlw	58	;':'
   678     0814  3400               	retlw	0
   679                           
   680                           	psect	cinit
   681     0011                     start_initialization:	
   682                           ; #config settings
   683                           
   684     0011                     __initialization:
   685                           
   686                           ; Clear objects allocated to BANK0
   687     0011  1283               	bcf	3,5	;RP0=0, select bank0
   688     0012  1303               	bcf	3,6	;RP1=0, select bank0
   689     0013  01CE               	clrf	__pbssBANK0& (0+127)
   690     0014  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   691     0015  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   692     0016  01D1               	clrf	(__pbssBANK0+3)& (0+127)
   693     0017  01D2               	clrf	(__pbssBANK0+4)& (0+127)
   694     0018  01D3               	clrf	(__pbssBANK0+5)& (0+127)
   695     0019  01D4               	clrf	(__pbssBANK0+6)& (0+127)
   696     001A  01D5               	clrf	(__pbssBANK0+7)& (0+127)
   697     001B  01D6               	clrf	(__pbssBANK0+8)& (0+127)
   698     001C  01D7               	clrf	(__pbssBANK0+9)& (0+127)
   699     001D  01D8               	clrf	(__pbssBANK0+10)& (0+127)
   700     001E  01D9               	clrf	(__pbssBANK0+11)& (0+127)
   701     001F  01DA               	clrf	(__pbssBANK0+12)& (0+127)
   702     0020  01DB               	clrf	(__pbssBANK0+13)& (0+127)
   703     0021  01DC               	clrf	(__pbssBANK0+14)& (0+127)
   704     0022                     end_of_initialization:	
   705                           ;End of C runtime variable initialization code
   706                           
   707     0022                     __end_of__initialization:
   708     0022  0183               	clrf	3
   709     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   710                           
   711                           	psect	bssBANK0
   712     004E                     __pbssBANK0:
   713     004E                     _lecADC0:
   714     004E                     	ds	4
   715     0052                     _cont:
   716     0052                     	ds	2
   717     0054                     _valADC1:
   718     0054                     	ds	2
   719     0056                     _valADC0:
   720     0056                     	ds	2
   721     0058                     _lecADC1:
   722     0058                     	ds	2
   723     005A                     _centesimas:
   724     005A                     	ds	1
   725     005B                     _decimas:
   726     005B                     	ds	1
   727     005C                     _unidades:
   728     005C                     	ds	1
   729                           
   730                           	psect	cstackCOMMON
   731     0070                     __pcstackCOMMON:
   732     0070                     ?_setupINTOSC:
   733     0070                     ?_configpuertos:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_Lcd_Init:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_Lcd_Clear:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_Lcd_Write_String:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_inttochar:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_Lcd_Write_Char:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_isr:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_main:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_Lcd_Port:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_Lcd_Cmd:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?___xxtofl:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ___xxtofl@val:	
   767                           ; 4 bytes @ 0x0
   768                           
   769                           
   770                           ; 4 bytes @ 0x0
   771     0070                     	ds	4
   772     0074                     ??___xxtofl:
   773                           
   774                           ; 1 bytes @ 0x4
   775     0074                     	ds	4
   776     0078                     ___xxtofl@sign:
   777                           
   778                           ; 1 bytes @ 0x8
   779     0078                     	ds	1
   780     0079                     ___xxtofl@exp:
   781                           
   782                           ; 1 bytes @ 0x9
   783     0079                     	ds	1
   784     007A                     ___xxtofl@arg:
   785                           
   786                           ; 4 bytes @ 0xA
   787     007A                     	ds	4
   788                           
   789                           	psect	cstackBANK0
   790     0020                     __pcstackBANK0:
   791     0020                     ??_isr:
   792                           
   793                           ; 1 bytes @ 0x0
   794     0020                     	ds	6
   795     0026                     ??_setupINTOSC:
   796     0026                     ??_configpuertos:	
   797                           ; 1 bytes @ 0x6
   798                           
   799     0026                     ?_setup_ADC:	
   800                           ; 1 bytes @ 0x6
   801                           
   802     0026                     ?_iniciarADC:	
   803                           ; 1 bytes @ 0x6
   804                           
   805     0026                     ??_inttochar:	
   806                           ; 1 bytes @ 0x6
   807                           
   808     0026                     ??_Lcd_Port:	
   809                           ; 1 bytes @ 0x6
   810                           
   811     0026                     ?___awdiv:	
   812                           ; 1 bytes @ 0x6
   813                           
   814     0026                     ?___awmod:	
   815                           ; 2 bytes @ 0x6
   816                           
   817     0026                     ?___lwdiv:	
   818                           ; 2 bytes @ 0x6
   819                           
   820     0026                     ?___lwmod:	
   821                           ; 2 bytes @ 0x6
   822                           
   823     0026                     ?___lmul:	
   824                           ; 2 bytes @ 0x6
   825                           
   826     0026                     ?___fltol:	
   827                           ; 4 bytes @ 0x6
   828                           
   829     0026                     setupINTOSC@IRCF:	
   830                           ; 4 bytes @ 0x6
   831                           
   832     0026                     Lcd_Port@a:	
   833                           ; 1 bytes @ 0x6
   834                           
   835     0026                     inttochar@num:	
   836                           ; 1 bytes @ 0x6
   837                           
   838     0026                     setup_ADC@chan:	
   839                           ; 1 bytes @ 0x6
   840                           
   841     0026                     iniciarADC@channel:	
   842                           ; 2 bytes @ 0x6
   843                           
   844     0026                     ___awdiv@divisor:	
   845                           ; 2 bytes @ 0x6
   846                           
   847     0026                     ___awmod@divisor:	
   848                           ; 2 bytes @ 0x6
   849                           
   850     0026                     ___lwdiv@divisor:	
   851                           ; 2 bytes @ 0x6
   852                           
   853     0026                     ___lwmod@divisor:	
   854                           ; 2 bytes @ 0x6
   855                           
   856     0026                     ___lmul@multiplier:	
   857                           ; 2 bytes @ 0x6
   858                           
   859     0026                     ___fltol@f1:	
   860                           ; 4 bytes @ 0x6
   861                           
   862                           
   863                           ; 4 bytes @ 0x6
   864     0026                     	ds	1
   865     0027                     ??_Lcd_Write_Char:
   866     0027                     ??_Lcd_Cmd:	
   867                           ; 1 bytes @ 0x7
   868                           
   869                           
   870                           ; 1 bytes @ 0x7
   871     0027                     	ds	1
   872     0028                     ??_setup_ADC:
   873     0028                     ??_iniciarADC:	
   874                           ; 1 bytes @ 0x8
   875                           
   876     0028                     Lcd_Write_Char@temp:	
   877                           ; 1 bytes @ 0x8
   878                           
   879     0028                     ___awdiv@dividend:	
   880                           ; 1 bytes @ 0x8
   881                           
   882     0028                     ___awmod@dividend:	
   883                           ; 2 bytes @ 0x8
   884                           
   885     0028                     ___lwdiv@dividend:	
   886                           ; 2 bytes @ 0x8
   887                           
   888     0028                     ___lwmod@dividend:	
   889                           ; 2 bytes @ 0x8
   890                           
   891                           
   892                           ; 2 bytes @ 0x8
   893     0028                     	ds	1
   894     0029                     Lcd_Cmd@a:
   895     0029                     Lcd_Write_Char@y:	
   896                           ; 1 bytes @ 0x9
   897                           
   898                           
   899                           ; 1 bytes @ 0x9
   900     0029                     	ds	1
   901     002A                     ??_Lcd_Init:
   902     002A                     ??_Lcd_Clear:	
   903                           ; 1 bytes @ 0xA
   904                           
   905     002A                     ?_Lcd_Set_Cursor:	
   906                           ; 1 bytes @ 0xA
   907                           
   908     002A                     ??___awdiv:	
   909                           ; 1 bytes @ 0xA
   910                           
   911     002A                     ??___awmod:	
   912                           ; 1 bytes @ 0xA
   913                           
   914     002A                     ??___fltol:	
   915                           ; 1 bytes @ 0xA
   916                           
   917     002A                     ??___lwdiv:	
   918                           ; 1 bytes @ 0xA
   919                           
   920     002A                     ??___lwmod:	
   921                           ; 1 bytes @ 0xA
   922                           
   923     002A                     Lcd_Set_Cursor@b:	
   924                           ; 1 bytes @ 0xA
   925                           
   926     002A                     Lcd_Write_Char@a:	
   927                           ; 1 bytes @ 0xA
   928                           
   929     002A                     ___lmul@multiplicand:	
   930                           ; 1 bytes @ 0xA
   931                           
   932                           
   933                           ; 4 bytes @ 0xA
   934     002A                     	ds	1
   935     002B                     ??_Lcd_Set_Cursor:
   936     002B                     ??_Lcd_Write_String:	
   937                           ; 1 bytes @ 0xB
   938                           
   939     002B                     ___awdiv@counter:	
   940                           ; 1 bytes @ 0xB
   941                           
   942     002B                     ___awmod@counter:	
   943                           ; 1 bytes @ 0xB
   944                           
   945     002B                     ___lwmod@counter:	
   946                           ; 1 bytes @ 0xB
   947                           
   948     002B                     Lcd_Write_String@i:	
   949                           ; 1 bytes @ 0xB
   950                           
   951     002B                     ___lwdiv@quotient:	
   952                           ; 2 bytes @ 0xB
   953                           
   954                           
   955                           ; 2 bytes @ 0xB
   956     002B                     	ds	1
   957     002C                     Lcd_Set_Cursor@a:
   958     002C                     ___awdiv@sign:	
   959                           ; 1 bytes @ 0xC
   960                           
   961     002C                     ___awmod@sign:	
   962                           ; 1 bytes @ 0xC
   963                           
   964                           
   965                           ; 1 bytes @ 0xC
   966     002C                     	ds	1
   967     002D                     Lcd_Set_Cursor@z:
   968     002D                     Lcd_Write_String@a:	
   969                           ; 1 bytes @ 0xD
   970                           
   971     002D                     ___lwdiv@counter:	
   972                           ; 1 bytes @ 0xD
   973                           
   974     002D                     ___awdiv@quotient:	
   975                           ; 1 bytes @ 0xD
   976                           
   977                           
   978                           ; 2 bytes @ 0xD
   979     002D                     	ds	1
   980     002E                     ??___lmul:
   981     002E                     Lcd_Set_Cursor@y:	
   982                           ; 1 bytes @ 0xE
   983                           
   984     002E                     ___fltol@sign1:	
   985                           ; 1 bytes @ 0xE
   986                           
   987                           
   988                           ; 1 bytes @ 0xE
   989     002E                     	ds	1
   990     002F                     ?_descomponer:
   991     002F                     Lcd_Set_Cursor@temp:	
   992                           ; 1 bytes @ 0xF
   993                           
   994     002F                     ___fltol@exp1:	
   995                           ; 1 bytes @ 0xF
   996                           
   997     002F                     descomponer@pos:	
   998                           ; 1 bytes @ 0xF
   999                           
  1000     002F                     ___lmul@product:	
  1001                           ; 2 bytes @ 0xF
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0xF
  1005     002F                     	ds	2
  1006     0031                     descomponer@num:
  1007                           
  1008                           ; 2 bytes @ 0x11
  1009     0031                     	ds	2
  1010     0033                     ??_descomponer:
  1011     0033                     ?___aldiv:	
  1012                           ; 1 bytes @ 0x13
  1013                           
  1014     0033                     ___aldiv@divisor:	
  1015                           ; 4 bytes @ 0x13
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x13
  1019     0033                     	ds	2
  1020     0035                     descomponer@cent:
  1021                           
  1022                           ; 1 bytes @ 0x15
  1023     0035                     	ds	1
  1024     0036                     descomponer@uni:
  1025                           
  1026                           ; 1 bytes @ 0x16
  1027     0036                     	ds	1
  1028     0037                     descomponer@dec:
  1029     0037                     ___aldiv@dividend:	
  1030                           ; 1 bytes @ 0x17
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x17
  1034     0037                     	ds	4
  1035     003B                     ??___aldiv:
  1036                           
  1037                           ; 1 bytes @ 0x1B
  1038     003B                     	ds	1
  1039     003C                     ___aldiv@counter:
  1040                           
  1041                           ; 1 bytes @ 0x1C
  1042     003C                     	ds	1
  1043     003D                     ___aldiv@sign:
  1044                           
  1045                           ; 1 bytes @ 0x1D
  1046     003D                     	ds	1
  1047     003E                     ___aldiv@quotient:
  1048                           
  1049                           ; 4 bytes @ 0x1E
  1050     003E                     	ds	4
  1051     0042                     ?_mapeo:
  1052     0042                     mapeo@inmin:	
  1053                           ; 2 bytes @ 0x22
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x22
  1057     0042                     	ds	1
  1058     0043                     mapeo@inmax:
  1059                           
  1060                           ; 1 bytes @ 0x23
  1061     0043                     	ds	1
  1062     0044                     mapeo@outmin:
  1063                           
  1064                           ; 1 bytes @ 0x24
  1065     0044                     	ds	1
  1066     0045                     mapeo@outmax:
  1067                           
  1068                           ; 2 bytes @ 0x25
  1069     0045                     	ds	2
  1070     0047                     ??_mapeo:
  1071                           
  1072                           ; 1 bytes @ 0x27
  1073     0047                     	ds	4
  1074     004B                     mapeo@resultado:
  1075                           
  1076                           ; 2 bytes @ 0x2B
  1077     004B                     	ds	2
  1078     004D                     mapeo@valor:
  1079                           
  1080                           ; 1 bytes @ 0x2D
  1081     004D                     	ds	1
  1082     004E                     ??_main:
  1083                           
  1084                           	psect	maintext
  1085     0026                     __pmaintext:	
  1086                           ; 1 bytes @ 0x2E
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 78 in file "main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : B00/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels required when called: 5
  1112 ;; This function calls:
  1113 ;;		_Lcd_Clear
  1114 ;;		_Lcd_Init
  1115 ;;		_Lcd_Set_Cursor
  1116 ;;		_Lcd_Write_Char
  1117 ;;		_Lcd_Write_String
  1118 ;;		___fltol
  1119 ;;		_configpuertos
  1120 ;;		_descomponer
  1121 ;;		_iniciarADC
  1122 ;;		_inttochar
  1123 ;;		_mapeo
  1124 ;;		_setupINTOSC
  1125 ;;		_setup_ADC
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131     0026                     _main:	
  1132                           ;psect for function _main
  1133                           
  1134     0026                     l2100:	
  1135                           ;incstack = 0
  1136                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1137                           
  1138                           
  1139                           ;main.c: 79:     setupINTOSC(6);
  1140     0026  3006               	movlw	6
  1141     0027  120A  118A  2404  120A  118A  	fcall	_setupINTOSC
  1142                           
  1143                           ;main.c: 80:     configpuertos();
  1144     002C  120A  158A  274E  120A  118A  	fcall	_configpuertos
  1145                           
  1146                           ;main.c: 81:     setup_ADC(0x03);
  1147     0031  3003               	movlw	3
  1148     0032  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0033  1303               	bcf	3,6	;RP1=0, select bank0
  1150     0034  00A6               	movwf	setup_ADC@chan
  1151     0035  3000               	movlw	0
  1152     0036  00A7               	movwf	setup_ADC@chan+1
  1153     0037  120A  118A  2758  120A  118A  	fcall	_setup_ADC
  1154                           
  1155                           ;main.c: 82:     Lcd_Init();
  1156     003C  120A  118A  24CF  120A  118A  	fcall	_Lcd_Init
  1157                           
  1158                           ;main.c: 83:     Lcd_Clear();
  1159     0041  120A  158A  2725  120A  118A  	fcall	_Lcd_Clear
  1160                           
  1161                           ;main.c: 84:     Lcd_Set_Cursor(1,2);
  1162     0046  3002               	movlw	2
  1163     0047  1283               	bcf	3,5	;RP0=0, select bank0
  1164     0048  1303               	bcf	3,6	;RP1=0, select bank0
  1165     0049  00AA               	movwf	Lcd_Set_Cursor@b
  1166     004A  3001               	movlw	1
  1167     004B  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1168     0050                     l2102:
  1169                           
  1170                           ;main.c: 85:     Lcd_Write_String("S1:   S2:  S3:");
  1171     0050  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1172     0051  120A  118A  27D6  120A  118A  	fcall	_Lcd_Write_String
  1173     0056                     l2104:
  1174                           
  1175                           ;main.c: 89:         iniciarADC(0);
  1176     0056  3000               	movlw	0
  1177     0057  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0058  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0059  00A6               	movwf	iniciarADC@channel
  1180     005A  00A7               	movwf	iniciarADC@channel+1
  1181     005B  120A  118A  2798  120A  118A  	fcall	_iniciarADC
  1182     0060                     l2106:
  1183                           
  1184                           ;main.c: 90:         valADC0 = mapeo(lecADC0, 0, 255, 0, 500);
  1185     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1186     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1187     0062  01C2               	clrf	mapeo@inmin
  1188     0063  30FF               	movlw	255
  1189     0064  00C3               	movwf	mapeo@inmax
  1190     0065  01C4               	clrf	mapeo@outmin
  1191     0066  30F4               	movlw	244
  1192     0067  00C5               	movwf	mapeo@outmax
  1193     0068  3001               	movlw	1
  1194     0069  00C6               	movwf	mapeo@outmax+1
  1195     006A  0851               	movf	_lecADC0+3,w
  1196     006B  00A9               	movwf	___fltol@f1+3
  1197     006C  0850               	movf	_lecADC0+2,w
  1198     006D  00A8               	movwf	___fltol@f1+2
  1199     006E  084F               	movf	_lecADC0+1,w
  1200     006F  00A7               	movwf	___fltol@f1+1
  1201     0070  084E               	movf	_lecADC0,w
  1202     0071  00A6               	movwf	___fltol@f1
  1203     0072  120A  118A  2323  120A  118A  	fcall	___fltol
  1204     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1205     0078  1303               	bcf	3,6	;RP1=0, select bank0
  1206     0079  0826               	movf	?___fltol,w
  1207     007A  120A  118A  26CB  120A  118A  	fcall	_mapeo
  1208     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0081  0843               	movf	?_mapeo+1,w
  1211     0082  00D7               	movwf	_valADC0+1
  1212     0083  0842               	movf	?_mapeo,w
  1213     0084  00D6               	movwf	_valADC0
  1214     0085                     l2108:
  1215                           
  1216                           ;main.c: 91:         unidades = inttochar(descomponer(2, valADC0));
  1217     0085  3002               	movlw	2
  1218     0086  00AF               	movwf	descomponer@pos
  1219     0087  3000               	movlw	0
  1220     0088  00B0               	movwf	descomponer@pos+1
  1221     0089  0857               	movf	_valADC0+1,w
  1222     008A  00B2               	movwf	descomponer@num+1
  1223     008B  0856               	movf	_valADC0,w
  1224     008C  00B1               	movwf	descomponer@num
  1225     008D  120A  118A  246C  120A  118A  	fcall	_descomponer
  1226     0092  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1227     0097  1283               	bcf	3,5	;RP0=0, select bank0
  1228     0098  1303               	bcf	3,6	;RP1=0, select bank0
  1229     0099  00DC               	movwf	_unidades
  1230     009A                     l2110:
  1231                           
  1232                           ;main.c: 92:         Lcd_Set_Cursor(2,1);
  1233     009A  01AA               	clrf	Lcd_Set_Cursor@b
  1234     009B  0AAA               	incf	Lcd_Set_Cursor@b,f
  1235     009C  3002               	movlw	2
  1236     009D  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1237     00A2                     l2112:
  1238                           
  1239                           ;main.c: 93:         Lcd_Write_Char(unidades);
  1240     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1241     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1242     00A4  085C               	movf	_unidades,w
  1243     00A5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1244     00AA                     l2114:
  1245                           
  1246                           ;main.c: 94:         Lcd_Set_Cursor(2,2);
  1247     00AA  3002               	movlw	2
  1248     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1249     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1250     00AD  00AA               	movwf	Lcd_Set_Cursor@b
  1251     00AE  3002               	movlw	2
  1252     00AF  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1253     00B4                     l2116:
  1254                           
  1255                           ;main.c: 95:         Lcd_Write_Char('.');
  1256     00B4  302E               	movlw	46
  1257     00B5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1258     00BA                     l2118:
  1259                           
  1260                           ;main.c: 96:         decimas = inttochar(descomponer(1, valADC0));
  1261     00BA  3001               	movlw	1
  1262     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1263     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1264     00BD  00AF               	movwf	descomponer@pos
  1265     00BE  3000               	movlw	0
  1266     00BF  00B0               	movwf	descomponer@pos+1
  1267     00C0  0857               	movf	_valADC0+1,w
  1268     00C1  00B2               	movwf	descomponer@num+1
  1269     00C2  0856               	movf	_valADC0,w
  1270     00C3  00B1               	movwf	descomponer@num
  1271     00C4  120A  118A  246C  120A  118A  	fcall	_descomponer
  1272     00C9  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1273     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1274     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1275     00D0  00DB               	movwf	_decimas
  1276     00D1                     l2120:
  1277                           
  1278                           ;main.c: 97:         Lcd_Set_Cursor(2,3);
  1279     00D1  3003               	movlw	3
  1280     00D2  00AA               	movwf	Lcd_Set_Cursor@b
  1281     00D3  3002               	movlw	2
  1282     00D4  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1283     00D9                     l2122:
  1284                           
  1285                           ;main.c: 98:         Lcd_Write_Char(decimas);
  1286     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1287     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1288     00DB  085B               	movf	_decimas,w
  1289     00DC  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1290     00E1                     l2124:
  1291                           
  1292                           ;main.c: 99:         centesimas = inttochar(descomponer(0, valADC0));
  1293     00E1  3000               	movlw	0
  1294     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1295     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1296     00E4  00AF               	movwf	descomponer@pos
  1297     00E5  00B0               	movwf	descomponer@pos+1
  1298     00E6  0857               	movf	_valADC0+1,w
  1299     00E7  00B2               	movwf	descomponer@num+1
  1300     00E8  0856               	movf	_valADC0,w
  1301     00E9  00B1               	movwf	descomponer@num
  1302     00EA  120A  118A  246C  120A  118A  	fcall	_descomponer
  1303     00EF  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1304     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1305     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1306     00F6  00DA               	movwf	_centesimas
  1307     00F7                     l2126:
  1308                           
  1309                           ;main.c: 100:         Lcd_Set_Cursor(2,4);
  1310     00F7  3004               	movlw	4
  1311     00F8  00AA               	movwf	Lcd_Set_Cursor@b
  1312     00F9  3002               	movlw	2
  1313     00FA  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1314     00FF                     l2128:
  1315                           
  1316                           ;main.c: 101:         Lcd_Write_Char(centesimas);
  1317     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1318     0100  1303               	bcf	3,6	;RP1=0, select bank0
  1319     0101  085A               	movf	_centesimas,w
  1320     0102  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1321     0107                     l2130:
  1322                           
  1323                           ;main.c: 102:         Lcd_Set_Cursor(2,5);
  1324     0107  3005               	movlw	5
  1325     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1327     010A  00AA               	movwf	Lcd_Set_Cursor@b
  1328     010B  3002               	movlw	2
  1329     010C  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1330     0111                     l2132:
  1331                           
  1332                           ;main.c: 103:         Lcd_Write_Char('V');
  1333     0111  3056               	movlw	86
  1334     0112  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1335     0117                     l2134:
  1336                           
  1337                           ;main.c: 106:         iniciarADC(1);
  1338     0117  3001               	movlw	1
  1339     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1340     0119  1303               	bcf	3,6	;RP1=0, select bank0
  1341     011A  00A6               	movwf	iniciarADC@channel
  1342     011B  3000               	movlw	0
  1343     011C  00A7               	movwf	iniciarADC@channel+1
  1344     011D  120A  118A  2798  120A  118A  	fcall	_iniciarADC
  1345     0122                     l2136:
  1346                           
  1347                           ;main.c: 107:         valADC1 = mapeo(lecADC1, 0, 255, 0, 500);
  1348     0122  1283               	bcf	3,5	;RP0=0, select bank0
  1349     0123  1303               	bcf	3,6	;RP1=0, select bank0
  1350     0124  01C2               	clrf	mapeo@inmin
  1351     0125  30FF               	movlw	255
  1352     0126  00C3               	movwf	mapeo@inmax
  1353     0127  01C4               	clrf	mapeo@outmin
  1354     0128  30F4               	movlw	244
  1355     0129  00C5               	movwf	mapeo@outmax
  1356     012A  3001               	movlw	1
  1357     012B  00C6               	movwf	mapeo@outmax+1
  1358     012C  0858               	movf	_lecADC1,w
  1359     012D  120A  118A  26CB  120A  118A  	fcall	_mapeo
  1360     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1361     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1362     0134  0843               	movf	?_mapeo+1,w
  1363     0135  00D5               	movwf	_valADC1+1
  1364     0136  0842               	movf	?_mapeo,w
  1365     0137  00D4               	movwf	_valADC1
  1366     0138                     l2138:
  1367                           
  1368                           ;main.c: 108:         unidades = inttochar(descomponer(2, valADC1));
  1369     0138  3002               	movlw	2
  1370     0139  00AF               	movwf	descomponer@pos
  1371     013A  3000               	movlw	0
  1372     013B  00B0               	movwf	descomponer@pos+1
  1373     013C  0855               	movf	_valADC1+1,w
  1374     013D  00B2               	movwf	descomponer@num+1
  1375     013E  0854               	movf	_valADC1,w
  1376     013F  00B1               	movwf	descomponer@num
  1377     0140  120A  118A  246C  120A  118A  	fcall	_descomponer
  1378     0145  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1379     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1380     014B  1303               	bcf	3,6	;RP1=0, select bank0
  1381     014C  00DC               	movwf	_unidades
  1382     014D                     l2140:
  1383                           
  1384                           ;main.c: 109:         Lcd_Set_Cursor(2,7);
  1385     014D  3007               	movlw	7
  1386     014E  00AA               	movwf	Lcd_Set_Cursor@b
  1387     014F  3002               	movlw	2
  1388     0150  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1389     0155                     l2142:
  1390                           
  1391                           ;main.c: 110:         Lcd_Write_Char(unidades);
  1392     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1393     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1394     0157  085C               	movf	_unidades,w
  1395     0158  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1396     015D                     l2144:
  1397                           
  1398                           ;main.c: 111:         Lcd_Set_Cursor(2,8);
  1399     015D  3008               	movlw	8
  1400     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1401     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1402     0160  00AA               	movwf	Lcd_Set_Cursor@b
  1403     0161  3002               	movlw	2
  1404     0162  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1405     0167                     l2146:
  1406                           
  1407                           ;main.c: 112:         Lcd_Write_Char('.');
  1408     0167  302E               	movlw	46
  1409     0168  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1410     016D                     l2148:
  1411                           
  1412                           ;main.c: 113:         decimas = inttochar(descomponer(1, valADC1));
  1413     016D  3001               	movlw	1
  1414     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1415     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1416     0170  00AF               	movwf	descomponer@pos
  1417     0171  3000               	movlw	0
  1418     0172  00B0               	movwf	descomponer@pos+1
  1419     0173  0855               	movf	_valADC1+1,w
  1420     0174  00B2               	movwf	descomponer@num+1
  1421     0175  0854               	movf	_valADC1,w
  1422     0176  00B1               	movwf	descomponer@num
  1423     0177  120A  118A  246C  120A  118A  	fcall	_descomponer
  1424     017C  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1425     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1427     0183  00DB               	movwf	_decimas
  1428     0184                     l2150:
  1429                           
  1430                           ;main.c: 114:         Lcd_Set_Cursor(2,9);
  1431     0184  3009               	movlw	9
  1432     0185  00AA               	movwf	Lcd_Set_Cursor@b
  1433     0186  3002               	movlw	2
  1434     0187  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1435     018C                     l2152:
  1436                           
  1437                           ;main.c: 115:         Lcd_Write_Char(decimas);
  1438     018C  1283               	bcf	3,5	;RP0=0, select bank0
  1439     018D  1303               	bcf	3,6	;RP1=0, select bank0
  1440     018E  085B               	movf	_decimas,w
  1441     018F  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1442     0194                     l2154:
  1443                           
  1444                           ;main.c: 116:         centesimas = inttochar(descomponer(0, valADC1));
  1445     0194  3000               	movlw	0
  1446     0195  1283               	bcf	3,5	;RP0=0, select bank0
  1447     0196  1303               	bcf	3,6	;RP1=0, select bank0
  1448     0197  00AF               	movwf	descomponer@pos
  1449     0198  00B0               	movwf	descomponer@pos+1
  1450     0199  0855               	movf	_valADC1+1,w
  1451     019A  00B2               	movwf	descomponer@num+1
  1452     019B  0854               	movf	_valADC1,w
  1453     019C  00B1               	movwf	descomponer@num
  1454     019D  120A  118A  246C  120A  118A  	fcall	_descomponer
  1455     01A2  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1456     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1457     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1458     01A9  00DA               	movwf	_centesimas
  1459     01AA                     l2156:
  1460                           
  1461                           ;main.c: 117:         Lcd_Set_Cursor(2,10);
  1462     01AA  300A               	movlw	10
  1463     01AB  00AA               	movwf	Lcd_Set_Cursor@b
  1464     01AC  3002               	movlw	2
  1465     01AD  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1466     01B2                     l2158:
  1467                           
  1468                           ;main.c: 118:         Lcd_Write_Char(centesimas);
  1469     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1470     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1471     01B4  085A               	movf	_centesimas,w
  1472     01B5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1473     01BA                     l2160:
  1474                           
  1475                           ;main.c: 119:         Lcd_Set_Cursor(2,11);
  1476     01BA  300B               	movlw	11
  1477     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1478     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1479     01BD  00AA               	movwf	Lcd_Set_Cursor@b
  1480     01BE  3002               	movlw	2
  1481     01BF  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1482     01C4                     l2162:
  1483                           
  1484                           ;main.c: 120:         Lcd_Write_Char('V');
  1485     01C4  3056               	movlw	86
  1486     01C5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1487     01CA  2856               	goto	l2104
  1488     01CB  120A  118A  280E   	ljmp	start
  1489     01CE                     __end_of_main:
  1490                           
  1491                           	psect	text1
  1492     0758                     __ptext1:	
  1493 ;; *************** function _setup_ADC *****************
  1494 ;; Defined at:
  1495 ;;		line 11 in file "setupADC.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  chan            2    6[BANK0 ] int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       2       0       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       1       0       0       0
  1512 ;;      Totals:         0       3       0       0       0
  1513 ;;Total ram usage:        3 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 2
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523     0758                     _setup_ADC:	
  1524                           ;psect for function _setup_ADC
  1525                           
  1526     0758                     l1814:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _setup_ADC: [wreg]
  1529                           
  1530                           
  1531                           ;setupADC.c: 12:     if((chan & 0x01) == 1){
  1532     0758  1283               	bcf	3,5	;RP0=0, select bank0
  1533     0759  1303               	bcf	3,6	;RP1=0, select bank0
  1534     075A  1C26               	btfss	setup_ADC@chan,0
  1535     075B  2F5D               	goto	u1851
  1536     075C  2F5E               	goto	u1850
  1537     075D                     u1851:
  1538     075D  2F65               	goto	l106
  1539     075E                     u1850:
  1540     075E                     l1816:
  1541                           
  1542                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  1543     075E  1005               	bcf	5,0	;volatile
  1544                           
  1545                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  1546     075F  1683               	bsf	3,5	;RP0=1, select bank1
  1547     0760  1303               	bcf	3,6	;RP1=0, select bank1
  1548     0761  1405               	bsf	5,0	;volatile
  1549                           
  1550                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  1551     0762  1683               	bsf	3,5	;RP0=1, select bank3
  1552     0763  1703               	bsf	3,6	;RP1=1, select bank3
  1553     0764  1408               	bsf	8,0	;volatile
  1554     0765                     l106:	
  1555                           ;setupADC.c: 16:     }
  1556                           
  1557                           
  1558                           ;setupADC.c: 17:     if((chan & 0x02) == 0x02){
  1559     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1560     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1561     0767  1CA6               	btfss	setup_ADC@chan,1
  1562     0768  2F6A               	goto	u1861
  1563     0769  2F6B               	goto	u1860
  1564     076A                     u1861:
  1565     076A  2F72               	goto	l107
  1566     076B                     u1860:
  1567     076B                     l1818:
  1568                           
  1569                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  1570     076B  1085               	bcf	5,1	;volatile
  1571                           
  1572                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  1573     076C  1683               	bsf	3,5	;RP0=1, select bank1
  1574     076D  1303               	bcf	3,6	;RP1=0, select bank1
  1575     076E  1485               	bsf	5,1	;volatile
  1576                           
  1577                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  1578     076F  1683               	bsf	3,5	;RP0=1, select bank3
  1579     0770  1703               	bsf	3,6	;RP1=1, select bank3
  1580     0771  1488               	bsf	8,1	;volatile
  1581     0772                     l107:	
  1582                           ;setupADC.c: 22:     }
  1583                           
  1584                           
  1585                           ;setupADC.c: 23:     if((chan & 0x04) == 0x4){
  1586     0772  1283               	bcf	3,5	;RP0=0, select bank0
  1587     0773  1303               	bcf	3,6	;RP1=0, select bank0
  1588     0774  1D26               	btfss	setup_ADC@chan,2
  1589     0775  2F77               	goto	u1871
  1590     0776  2F78               	goto	u1870
  1591     0777                     u1871:
  1592     0777  2F7F               	goto	l108
  1593     0778                     u1870:
  1594     0778                     l1820:
  1595                           
  1596                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  1597     0778  1105               	bcf	5,2	;volatile
  1598                           
  1599                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  1600     0779  1683               	bsf	3,5	;RP0=1, select bank1
  1601     077A  1303               	bcf	3,6	;RP1=0, select bank1
  1602     077B  1505               	bsf	5,2	;volatile
  1603                           
  1604                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  1605     077C  1683               	bsf	3,5	;RP0=1, select bank3
  1606     077D  1703               	bsf	3,6	;RP1=1, select bank3
  1607     077E  1508               	bsf	8,2	;volatile
  1608     077F                     l108:	
  1609                           ;setupADC.c: 27:     }
  1610                           
  1611                           
  1612                           ;setupADC.c: 29:     INTCONbits.PEIE = 1;
  1613     077F  170B               	bsf	11,6	;volatile
  1614                           
  1615                           ;setupADC.c: 30:     PIE1bits.ADIE = 1;
  1616     0780  1683               	bsf	3,5	;RP0=1, select bank1
  1617     0781  1303               	bcf	3,6	;RP1=0, select bank1
  1618     0782  170C               	bsf	12,6	;volatile
  1619                           
  1620                           ;setupADC.c: 31:     PIR1bits.ADIF = 0;
  1621     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1622     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1623     0785  130C               	bcf	12,6	;volatile
  1624                           
  1625                           ;setupADC.c: 33:     ADCON0bits.ADCS1 = 0;
  1626     0786  139F               	bcf	31,7	;volatile
  1627                           
  1628                           ;setupADC.c: 34:     ADCON0bits.ADCS0 = 1;
  1629     0787  171F               	bsf	31,6	;volatile
  1630                           
  1631                           ;setupADC.c: 36:     ADCON1bits.VCFG1 = 0;
  1632     0788  1683               	bsf	3,5	;RP0=1, select bank1
  1633     0789  1303               	bcf	3,6	;RP1=0, select bank1
  1634     078A  129F               	bcf	31,5	;volatile
  1635                           
  1636                           ;setupADC.c: 37:     ADCON1bits.VCFG0 = 0;
  1637     078B  121F               	bcf	31,4	;volatile
  1638                           
  1639                           ;setupADC.c: 39:     ADCON1bits.ADFM = 0;
  1640     078C  139F               	bcf	31,7	;volatile
  1641                           
  1642                           ;setupADC.c: 41:     ADCON0bits.ADON = 1;
  1643     078D  1283               	bcf	3,5	;RP0=0, select bank0
  1644     078E  1303               	bcf	3,6	;RP1=0, select bank0
  1645     078F  141F               	bsf	31,0	;volatile
  1646     0790                     l1822:
  1647                           
  1648                           ;setupADC.c: 42:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1649     0790  3020               	movlw	32
  1650     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1651     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1652     0793  00A8               	movwf	??_setup_ADC
  1653     0794                     u2397:
  1654     0794  0BA8               	decfsz	??_setup_ADC,f
  1655     0795  2F94               	goto	u2397
  1656     0796  0000               	nop
  1657     0797                     l109:
  1658     0797  0008               	return
  1659     0798                     __end_of_setup_ADC:
  1660                           
  1661                           	psect	text2
  1662     0404                     __ptext2:	
  1663 ;; *************** function _setupINTOSC *****************
  1664 ;; Defined at:
  1665 ;;		line 10 in file "oscilador.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  IRCF            1    wreg     unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  IRCF            1    6[BANK0 ] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       1       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         0       1       0       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 2
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693     0404                     _setupINTOSC:	
  1694                           ;psect for function _setupINTOSC
  1695                           
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1699                           ;setupINTOSC@IRCF stored from wreg
  1700     0404  1283               	bcf	3,5	;RP0=0, select bank0
  1701     0405  1303               	bcf	3,6	;RP1=0, select bank0
  1702     0406  00A6               	movwf	setupINTOSC@IRCF
  1703     0407                     l1776:
  1704                           
  1705                           ;oscilador.c: 11:     if (IRCF == 7){
  1706     0407  3007               	movlw	7
  1707     0408  0626               	xorwf	setupINTOSC@IRCF,w
  1708     0409  1D03               	btfss	3,2
  1709     040A  2C0C               	goto	u1771
  1710     040B  2C0D               	goto	u1770
  1711     040C                     u1771:
  1712     040C  2C11               	goto	l77
  1713     040D                     u1770:
  1714     040D                     l1778:
  1715                           
  1716                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1717     040D  3070               	movlw	112
  1718     040E  1683               	bsf	3,5	;RP0=1, select bank1
  1719     040F  1303               	bcf	3,6	;RP1=0, select bank1
  1720     0410  048F               	iorwf	15,f	;volatile
  1721     0411                     l77:	
  1722                           ;oscilador.c: 13:     }
  1723                           
  1724                           
  1725                           ;oscilador.c: 14:     if (IRCF == 6){
  1726     0411  3006               	movlw	6
  1727     0412  1283               	bcf	3,5	;RP0=0, select bank0
  1728     0413  0626               	xorwf	setupINTOSC@IRCF,w
  1729     0414  1D03               	btfss	3,2
  1730     0415  2C17               	goto	u1781
  1731     0416  2C18               	goto	u1780
  1732     0417                     u1781:
  1733     0417  2C1E               	goto	l78
  1734     0418                     u1780:
  1735     0418                     l1780:
  1736                           
  1737                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1738     0418  1683               	bsf	3,5	;RP0=1, select bank1
  1739     0419  1303               	bcf	3,6	;RP1=0, select bank1
  1740     041A  080F               	movf	15,w	;volatile
  1741     041B  398F               	andlw	-113
  1742     041C  3860               	iorlw	96
  1743     041D  008F               	movwf	15	;volatile
  1744     041E                     l78:	
  1745                           ;oscilador.c: 16:     }
  1746                           
  1747                           
  1748                           ;oscilador.c: 17:     if (IRCF == 5){
  1749     041E  3005               	movlw	5
  1750     041F  1283               	bcf	3,5	;RP0=0, select bank0
  1751     0420  0626               	xorwf	setupINTOSC@IRCF,w
  1752     0421  1D03               	btfss	3,2
  1753     0422  2C24               	goto	u1791
  1754     0423  2C25               	goto	u1790
  1755     0424                     u1791:
  1756     0424  2C2B               	goto	l79
  1757     0425                     u1790:
  1758     0425                     l1782:
  1759                           
  1760                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1761     0425  1683               	bsf	3,5	;RP0=1, select bank1
  1762     0426  1303               	bcf	3,6	;RP1=0, select bank1
  1763     0427  080F               	movf	15,w	;volatile
  1764     0428  398F               	andlw	-113
  1765     0429  3850               	iorlw	80
  1766     042A  008F               	movwf	15	;volatile
  1767     042B                     l79:	
  1768                           ;oscilador.c: 19:     }
  1769                           
  1770                           
  1771                           ;oscilador.c: 20:     if (IRCF == 4){
  1772     042B  3004               	movlw	4
  1773     042C  1283               	bcf	3,5	;RP0=0, select bank0
  1774     042D  0626               	xorwf	setupINTOSC@IRCF,w
  1775     042E  1D03               	btfss	3,2
  1776     042F  2C31               	goto	u1801
  1777     0430  2C32               	goto	u1800
  1778     0431                     u1801:
  1779     0431  2C38               	goto	l80
  1780     0432                     u1800:
  1781     0432                     l1784:
  1782                           
  1783                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1784     0432  1683               	bsf	3,5	;RP0=1, select bank1
  1785     0433  1303               	bcf	3,6	;RP1=0, select bank1
  1786     0434  080F               	movf	15,w	;volatile
  1787     0435  398F               	andlw	-113
  1788     0436  3840               	iorlw	64
  1789     0437  008F               	movwf	15	;volatile
  1790     0438                     l80:	
  1791                           ;oscilador.c: 22:     }
  1792                           
  1793                           
  1794                           ;oscilador.c: 23:     if (IRCF == 3){
  1795     0438  3003               	movlw	3
  1796     0439  1283               	bcf	3,5	;RP0=0, select bank0
  1797     043A  0626               	xorwf	setupINTOSC@IRCF,w
  1798     043B  1D03               	btfss	3,2
  1799     043C  2C3E               	goto	u1811
  1800     043D  2C3F               	goto	u1810
  1801     043E                     u1811:
  1802     043E  2C45               	goto	l81
  1803     043F                     u1810:
  1804     043F                     l1786:
  1805                           
  1806                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1807     043F  1683               	bsf	3,5	;RP0=1, select bank1
  1808     0440  1303               	bcf	3,6	;RP1=0, select bank1
  1809     0441  080F               	movf	15,w	;volatile
  1810     0442  398F               	andlw	-113
  1811     0443  3830               	iorlw	48
  1812     0444  008F               	movwf	15	;volatile
  1813     0445                     l81:	
  1814                           ;oscilador.c: 25:     }
  1815                           
  1816                           
  1817                           ;oscilador.c: 26:     if (IRCF == 2){
  1818     0445  3002               	movlw	2
  1819     0446  1283               	bcf	3,5	;RP0=0, select bank0
  1820     0447  0626               	xorwf	setupINTOSC@IRCF,w
  1821     0448  1D03               	btfss	3,2
  1822     0449  2C4B               	goto	u1821
  1823     044A  2C4C               	goto	u1820
  1824     044B                     u1821:
  1825     044B  2C52               	goto	l82
  1826     044C                     u1820:
  1827     044C                     l1788:
  1828                           
  1829                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1830     044C  1683               	bsf	3,5	;RP0=1, select bank1
  1831     044D  1303               	bcf	3,6	;RP1=0, select bank1
  1832     044E  080F               	movf	15,w	;volatile
  1833     044F  398F               	andlw	-113
  1834     0450  3820               	iorlw	32
  1835     0451  008F               	movwf	15	;volatile
  1836     0452                     l82:	
  1837                           ;oscilador.c: 28:     }
  1838                           
  1839                           
  1840                           ;oscilador.c: 29:     if (IRCF == 1){
  1841     0452  1283               	bcf	3,5	;RP0=0, select bank0
  1842     0453  0326               	decf	setupINTOSC@IRCF,w
  1843     0454  1D03               	btfss	3,2
  1844     0455  2C57               	goto	u1831
  1845     0456  2C58               	goto	u1830
  1846     0457                     u1831:
  1847     0457  2C5E               	goto	l83
  1848     0458                     u1830:
  1849     0458                     l1790:
  1850                           
  1851                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1852     0458  1683               	bsf	3,5	;RP0=1, select bank1
  1853     0459  1303               	bcf	3,6	;RP1=0, select bank1
  1854     045A  080F               	movf	15,w	;volatile
  1855     045B  398F               	andlw	-113
  1856     045C  3810               	iorlw	16
  1857     045D  008F               	movwf	15	;volatile
  1858     045E                     l83:	
  1859                           ;oscilador.c: 31:     }
  1860                           
  1861                           
  1862                           ;oscilador.c: 32:     if (IRCF == 0){
  1863     045E  1283               	bcf	3,5	;RP0=0, select bank0
  1864     045F  0826               	movf	setupINTOSC@IRCF,w
  1865     0460  1D03               	btfss	3,2
  1866     0461  2C63               	goto	u1841
  1867     0462  2C64               	goto	u1840
  1868     0463                     u1841:
  1869     0463  2C68               	goto	l1794
  1870     0464                     u1840:
  1871     0464                     l1792:
  1872                           
  1873                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1874     0464  308F               	movlw	-113
  1875     0465  1683               	bsf	3,5	;RP0=1, select bank1
  1876     0466  1303               	bcf	3,6	;RP1=0, select bank1
  1877     0467  058F               	andwf	15,f	;volatile
  1878     0468                     l1794:
  1879                           
  1880                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1881     0468  1683               	bsf	3,5	;RP0=1, select bank1
  1882     0469  1303               	bcf	3,6	;RP1=0, select bank1
  1883     046A  140F               	bsf	15,0	;volatile
  1884     046B                     l85:
  1885     046B  0008               	return
  1886     046C                     __end_of_setupINTOSC:
  1887                           
  1888                           	psect	text3
  1889     06CB                     __ptext3:	
  1890 ;; *************** function _mapeo *****************
  1891 ;; Defined at:
  1892 ;;		line 113 in file "conversiones.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  valor           1    wreg     unsigned char 
  1895 ;;  inmin           1   34[BANK0 ] unsigned char 
  1896 ;;  inmax           1   35[BANK0 ] unsigned char 
  1897 ;;  outmin          1   36[BANK0 ] unsigned char 
  1898 ;;  outmax          2   37[BANK0 ] unsigned int 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  valor           1   45[BANK0 ] unsigned char 
  1901 ;;  resultado       2   43[BANK0 ] unsigned int 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  2   34[BANK0 ] unsigned int 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       5       0       0       0
  1912 ;;      Locals:         0       3       0       0       0
  1913 ;;      Temps:          0       4       0       0       0
  1914 ;;      Totals:         0      12       0       0       0
  1915 ;;Total ram usage:       12 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 3
  1918 ;; This function calls:
  1919 ;;		___aldiv
  1920 ;;		___lmul
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926     06CB                     _mapeo:	
  1927                           ;psect for function _mapeo
  1928                           
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _mapeo: [wreg+status,2+status,0+pclath+cstack]
  1932                           ;mapeo@valor stored from wreg
  1933     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1934     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1935     06CD  00CD               	movwf	mapeo@valor
  1936     06CE                     l1888:
  1937                           
  1938                           ;conversiones.c: 114:     uint16_t resultado;;conversiones.c: 115:     resultado = (((ou
      +                          tmax-outmin)* (long long)(valor-inmin))/inmax)+outmin;
  1939     06CE  0843               	movf	mapeo@inmax,w
  1940     06CF  00C7               	movwf	??_mapeo
  1941     06D0  01C8               	clrf	??_mapeo+1
  1942     06D1  01C9               	clrf	??_mapeo+2
  1943     06D2  01CA               	clrf	??_mapeo+3
  1944     06D3  084A               	movf	??_mapeo+3,w
  1945     06D4  00B6               	movwf	___aldiv@divisor+3
  1946     06D5  0849               	movf	??_mapeo+2,w
  1947     06D6  00B5               	movwf	___aldiv@divisor+2
  1948     06D7  0848               	movf	??_mapeo+1,w
  1949     06D8  00B4               	movwf	___aldiv@divisor+1
  1950     06D9  0847               	movf	??_mapeo,w
  1951     06DA  00B3               	movwf	___aldiv@divisor
  1952     06DB  0844               	movf	mapeo@outmin,w
  1953     06DC  0245               	subwf	mapeo@outmax,w
  1954     06DD  00A6               	movwf	___lmul@multiplier
  1955     06DE  0846               	movf	mapeo@outmax+1,w
  1956     06DF  1C03               	skipc
  1957     06E0  0346               	decf	mapeo@outmax+1,w
  1958     06E1  00A7               	movwf	___lmul@multiplier+1
  1959     06E2  01A8               	clrf	___lmul@multiplier+2
  1960     06E3  01A9               	clrf	___lmul@multiplier+3
  1961     06E4  0842               	movf	mapeo@inmin,w
  1962     06E5  024D               	subwf	mapeo@valor,w
  1963     06E6  00AA               	movwf	___lmul@multiplicand
  1964     06E7  01AB               	clrf	___lmul@multiplicand+1
  1965     06E8  1C03               	skipc
  1966     06E9  03AB               	decf	___lmul@multiplicand+1,f
  1967     06EA  01AC               	clrf	___lmul@multiplicand+2
  1968     06EB  1BAB               	btfsc	___lmul@multiplicand+1,7
  1969     06EC  03AC               	decf	___lmul@multiplicand+2,f
  1970     06ED  082C               	movf	___lmul@multiplicand+2,w
  1971     06EE  00AD               	movwf	___lmul@multiplicand+3
  1972     06EF  120A  118A  2683  120A  118A  	fcall	___lmul
  1973     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1974     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1975     06F6  0829               	movf	?___lmul+3,w
  1976     06F7  00BA               	movwf	___aldiv@dividend+3
  1977     06F8  0828               	movf	?___lmul+2,w
  1978     06F9  00B9               	movwf	___aldiv@dividend+2
  1979     06FA  0827               	movf	?___lmul+1,w
  1980     06FB  00B8               	movwf	___aldiv@dividend+1
  1981     06FC  0826               	movf	?___lmul,w
  1982     06FD  00B7               	movwf	___aldiv@dividend
  1983     06FE  120A  118A  2286  120A  118A  	fcall	___aldiv
  1984     0703  1283               	bcf	3,5	;RP0=0, select bank0
  1985     0704  1303               	bcf	3,6	;RP1=0, select bank0
  1986     0705  0844               	movf	mapeo@outmin,w
  1987     0706  0733               	addwf	?___aldiv,w
  1988     0707  00CB               	movwf	mapeo@resultado
  1989     0708  3000               	movlw	0
  1990     0709  1803               	skipnc
  1991     070A  3001               	movlw	1
  1992     070B  0734               	addwf	?___aldiv+1,w
  1993     070C  00CC               	movwf	mapeo@resultado+1
  1994     070D                     l1890:
  1995                           
  1996                           ;conversiones.c: 116:     return resultado;
  1997     070D  084C               	movf	mapeo@resultado+1,w
  1998     070E  00C3               	movwf	?_mapeo+1
  1999     070F  084B               	movf	mapeo@resultado,w
  2000     0710  00C2               	movwf	?_mapeo
  2001     0711                     l254:
  2002     0711  0008               	return
  2003     0712                     __end_of_mapeo:
  2004                           
  2005                           	psect	text4
  2006     0683                     __ptext4:	
  2007 ;; *************** function ___lmul *****************
  2008 ;; Defined at:
  2009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  multiplier      4    6[BANK0 ] unsigned long 
  2012 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  product         4   15[BANK0 ] unsigned long 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  4    6[BANK0 ] unsigned long 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         0       8       0       0       0
  2025 ;;      Locals:         0       4       0       0       0
  2026 ;;      Temps:          0       1       0       0       0
  2027 ;;      Totals:         0      13       0       0       0
  2028 ;;Total ram usage:       13 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 2
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_mapeo
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038     0683                     ___lmul:	
  2039                           ;psect for function ___lmul
  2040                           
  2041     0683                     l1592:	
  2042                           ;incstack = 0
  2043                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2044                           
  2045     0683  3000               	movlw	0
  2046     0684  1283               	bcf	3,5	;RP0=0, select bank0
  2047     0685  1303               	bcf	3,6	;RP1=0, select bank0
  2048     0686  00B2               	movwf	___lmul@product+3
  2049     0687  3000               	movlw	0
  2050     0688  00B1               	movwf	___lmul@product+2
  2051     0689  3000               	movlw	0
  2052     068A  00B0               	movwf	___lmul@product+1
  2053     068B  3000               	movlw	0
  2054     068C  00AF               	movwf	___lmul@product
  2055     068D                     l1594:
  2056     068D  1C26               	btfss	___lmul@multiplier,0
  2057     068E  2E90               	goto	u1301
  2058     068F  2E91               	goto	u1300
  2059     0690                     u1301:
  2060     0690  2EA8               	goto	l1598
  2061     0691                     u1300:
  2062     0691                     l1596:
  2063     0691  082A               	movf	___lmul@multiplicand,w
  2064     0692  07AF               	addwf	___lmul@product,f
  2065     0693  082B               	movf	___lmul@multiplicand+1,w
  2066     0694  1103               	clrz
  2067     0695  1803               	skipnc
  2068     0696  3E01               	addlw	1
  2069     0697  1903               	skipnz
  2070     0698  2E9A               	goto	u1311
  2071     0699  07B0               	addwf	___lmul@product+1,f
  2072     069A                     u1311:
  2073     069A  082C               	movf	___lmul@multiplicand+2,w
  2074     069B  1103               	clrz
  2075     069C  1803               	skipnc
  2076     069D  3E01               	addlw	1
  2077     069E  1903               	skipnz
  2078     069F  2EA1               	goto	u1312
  2079     06A0  07B1               	addwf	___lmul@product+2,f
  2080     06A1                     u1312:
  2081     06A1  082D               	movf	___lmul@multiplicand+3,w
  2082     06A2  1103               	clrz
  2083     06A3  1803               	skipnc
  2084     06A4  3E01               	addlw	1
  2085     06A5  1903               	skipnz
  2086     06A6  2EA8               	goto	u1313
  2087     06A7  07B2               	addwf	___lmul@product+3,f
  2088     06A8                     u1313:
  2089     06A8                     l1598:
  2090     06A8  3001               	movlw	1
  2091     06A9  00AE               	movwf	??___lmul
  2092     06AA                     u1325:
  2093     06AA  1003               	clrc
  2094     06AB  0DAA               	rlf	___lmul@multiplicand,f
  2095     06AC  0DAB               	rlf	___lmul@multiplicand+1,f
  2096     06AD  0DAC               	rlf	___lmul@multiplicand+2,f
  2097     06AE  0DAD               	rlf	___lmul@multiplicand+3,f
  2098     06AF  0BAE               	decfsz	??___lmul,f
  2099     06B0  2EAA               	goto	u1325
  2100     06B1                     l1600:
  2101     06B1  3001               	movlw	1
  2102     06B2                     u1335:
  2103     06B2  1003               	clrc
  2104     06B3  0CA9               	rrf	___lmul@multiplier+3,f
  2105     06B4  0CA8               	rrf	___lmul@multiplier+2,f
  2106     06B5  0CA7               	rrf	___lmul@multiplier+1,f
  2107     06B6  0CA6               	rrf	___lmul@multiplier,f
  2108     06B7  3EFF               	addlw	-1
  2109     06B8  1D03               	skipz
  2110     06B9  2EB2               	goto	u1335
  2111     06BA  0829               	movf	___lmul@multiplier+3,w
  2112     06BB  0428               	iorwf	___lmul@multiplier+2,w
  2113     06BC  0427               	iorwf	___lmul@multiplier+1,w
  2114     06BD  0426               	iorwf	___lmul@multiplier,w
  2115     06BE  1D03               	skipz
  2116     06BF  2EC1               	goto	u1341
  2117     06C0  2EC2               	goto	u1340
  2118     06C1                     u1341:
  2119     06C1  2E8D               	goto	l1594
  2120     06C2                     u1340:
  2121     06C2                     l1602:
  2122     06C2  0832               	movf	___lmul@product+3,w
  2123     06C3  00A9               	movwf	?___lmul+3
  2124     06C4  0831               	movf	___lmul@product+2,w
  2125     06C5  00A8               	movwf	?___lmul+2
  2126     06C6  0830               	movf	___lmul@product+1,w
  2127     06C7  00A7               	movwf	?___lmul+1
  2128     06C8  082F               	movf	___lmul@product,w
  2129     06C9  00A6               	movwf	?___lmul
  2130     06CA                     l354:
  2131     06CA  0008               	return
  2132     06CB                     __end_of___lmul:
  2133                           
  2134                           	psect	text5
  2135     0286                     __ptext5:	
  2136 ;; *************** function ___aldiv *****************
  2137 ;; Defined at:
  2138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  divisor         4   19[BANK0 ] long 
  2141 ;;  dividend        4   23[BANK0 ] long 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  quotient        4   30[BANK0 ] long 
  2144 ;;  sign            1   29[BANK0 ] unsigned char 
  2145 ;;  counter         1   28[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  4   19[BANK0 ] long 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       8       0       0       0
  2156 ;;      Locals:         0       6       0       0       0
  2157 ;;      Temps:          0       1       0       0       0
  2158 ;;      Totals:         0      15       0       0       0
  2159 ;;Total ram usage:       15 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 2
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_mapeo
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169     0286                     ___aldiv:	
  2170                           ;psect for function ___aldiv
  2171                           
  2172     0286                     l1606:	
  2173                           ;incstack = 0
  2174                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2175                           
  2176     0286  1283               	bcf	3,5	;RP0=0, select bank0
  2177     0287  1303               	bcf	3,6	;RP1=0, select bank0
  2178     0288  01BD               	clrf	___aldiv@sign
  2179     0289                     l1608:
  2180     0289  1FB6               	btfss	___aldiv@divisor+3,7
  2181     028A  2A8C               	goto	u1351
  2182     028B  2A8D               	goto	u1350
  2183     028C                     u1351:
  2184     028C  2A9A               	goto	l405
  2185     028D                     u1350:
  2186     028D                     l1610:
  2187     028D  09B3               	comf	___aldiv@divisor,f
  2188     028E  09B4               	comf	___aldiv@divisor+1,f
  2189     028F  09B5               	comf	___aldiv@divisor+2,f
  2190     0290  09B6               	comf	___aldiv@divisor+3,f
  2191     0291  0AB3               	incf	___aldiv@divisor,f
  2192     0292  1903               	skipnz
  2193     0293  0AB4               	incf	___aldiv@divisor+1,f
  2194     0294  1903               	skipnz
  2195     0295  0AB5               	incf	___aldiv@divisor+2,f
  2196     0296  1903               	skipnz
  2197     0297  0AB6               	incf	___aldiv@divisor+3,f
  2198     0298  01BD               	clrf	___aldiv@sign
  2199     0299  0ABD               	incf	___aldiv@sign,f
  2200     029A                     l405:
  2201     029A  1FBA               	btfss	___aldiv@dividend+3,7
  2202     029B  2A9D               	goto	u1361
  2203     029C  2A9E               	goto	u1360
  2204     029D                     u1361:
  2205     029D  2AAD               	goto	l1616
  2206     029E                     u1360:
  2207     029E                     l1612:
  2208     029E  09B7               	comf	___aldiv@dividend,f
  2209     029F  09B8               	comf	___aldiv@dividend+1,f
  2210     02A0  09B9               	comf	___aldiv@dividend+2,f
  2211     02A1  09BA               	comf	___aldiv@dividend+3,f
  2212     02A2  0AB7               	incf	___aldiv@dividend,f
  2213     02A3  1903               	skipnz
  2214     02A4  0AB8               	incf	___aldiv@dividend+1,f
  2215     02A5  1903               	skipnz
  2216     02A6  0AB9               	incf	___aldiv@dividend+2,f
  2217     02A7  1903               	skipnz
  2218     02A8  0ABA               	incf	___aldiv@dividend+3,f
  2219     02A9                     l1614:
  2220     02A9  3001               	movlw	1
  2221     02AA  00BB               	movwf	??___aldiv
  2222     02AB  083B               	movf	??___aldiv,w
  2223     02AC  06BD               	xorwf	___aldiv@sign,f
  2224     02AD                     l1616:
  2225     02AD  3000               	movlw	0
  2226     02AE  00C1               	movwf	___aldiv@quotient+3
  2227     02AF  3000               	movlw	0
  2228     02B0  00C0               	movwf	___aldiv@quotient+2
  2229     02B1  3000               	movlw	0
  2230     02B2  00BF               	movwf	___aldiv@quotient+1
  2231     02B3  3000               	movlw	0
  2232     02B4  00BE               	movwf	___aldiv@quotient
  2233     02B5                     l1618:
  2234     02B5  0836               	movf	___aldiv@divisor+3,w
  2235     02B6  0435               	iorwf	___aldiv@divisor+2,w
  2236     02B7  0434               	iorwf	___aldiv@divisor+1,w
  2237     02B8  0433               	iorwf	___aldiv@divisor,w
  2238     02B9  1903               	skipnz
  2239     02BA  2ABC               	goto	u1371
  2240     02BB  2ABD               	goto	u1370
  2241     02BC                     u1371:
  2242     02BC  2B0A               	goto	l1638
  2243     02BD                     u1370:
  2244     02BD                     l1620:
  2245     02BD  01BC               	clrf	___aldiv@counter
  2246     02BE  0ABC               	incf	___aldiv@counter,f
  2247     02BF  2ACD               	goto	l1624
  2248     02C0                     l1622:
  2249     02C0  3001               	movlw	1
  2250     02C1  00BB               	movwf	??___aldiv
  2251     02C2                     u1385:
  2252     02C2  1003               	clrc
  2253     02C3  0DB3               	rlf	___aldiv@divisor,f
  2254     02C4  0DB4               	rlf	___aldiv@divisor+1,f
  2255     02C5  0DB5               	rlf	___aldiv@divisor+2,f
  2256     02C6  0DB6               	rlf	___aldiv@divisor+3,f
  2257     02C7  0BBB               	decfsz	??___aldiv,f
  2258     02C8  2AC2               	goto	u1385
  2259     02C9  3001               	movlw	1
  2260     02CA  00BB               	movwf	??___aldiv
  2261     02CB  083B               	movf	??___aldiv,w
  2262     02CC  07BC               	addwf	___aldiv@counter,f
  2263     02CD                     l1624:
  2264     02CD  1FB6               	btfss	___aldiv@divisor+3,7
  2265     02CE  2AD0               	goto	u1391
  2266     02CF  2AD1               	goto	u1390
  2267     02D0                     u1391:
  2268     02D0  2AC0               	goto	l1622
  2269     02D1                     u1390:
  2270     02D1                     l1626:
  2271     02D1  3001               	movlw	1
  2272     02D2  00BB               	movwf	??___aldiv
  2273     02D3                     u1405:
  2274     02D3  1003               	clrc
  2275     02D4  0DBE               	rlf	___aldiv@quotient,f
  2276     02D5  0DBF               	rlf	___aldiv@quotient+1,f
  2277     02D6  0DC0               	rlf	___aldiv@quotient+2,f
  2278     02D7  0DC1               	rlf	___aldiv@quotient+3,f
  2279     02D8  0BBB               	decfsz	??___aldiv,f
  2280     02D9  2AD3               	goto	u1405
  2281     02DA                     l1628:
  2282     02DA  0836               	movf	___aldiv@divisor+3,w
  2283     02DB  023A               	subwf	___aldiv@dividend+3,w
  2284     02DC  1D03               	skipz
  2285     02DD  2AE8               	goto	u1415
  2286     02DE  0835               	movf	___aldiv@divisor+2,w
  2287     02DF  0239               	subwf	___aldiv@dividend+2,w
  2288     02E0  1D03               	skipz
  2289     02E1  2AE8               	goto	u1415
  2290     02E2  0834               	movf	___aldiv@divisor+1,w
  2291     02E3  0238               	subwf	___aldiv@dividend+1,w
  2292     02E4  1D03               	skipz
  2293     02E5  2AE8               	goto	u1415
  2294     02E6  0833               	movf	___aldiv@divisor,w
  2295     02E7  0237               	subwf	___aldiv@dividend,w
  2296     02E8                     u1415:
  2297     02E8  1C03               	skipc
  2298     02E9  2AEB               	goto	u1411
  2299     02EA  2AEC               	goto	u1410
  2300     02EB                     u1411:
  2301     02EB  2AFB               	goto	l1634
  2302     02EC                     u1410:
  2303     02EC                     l1630:
  2304     02EC  0833               	movf	___aldiv@divisor,w
  2305     02ED  02B7               	subwf	___aldiv@dividend,f
  2306     02EE  0834               	movf	___aldiv@divisor+1,w
  2307     02EF  1C03               	skipc
  2308     02F0  0F34               	incfsz	___aldiv@divisor+1,w
  2309     02F1  02B8               	subwf	___aldiv@dividend+1,f
  2310     02F2  0835               	movf	___aldiv@divisor+2,w
  2311     02F3  1C03               	skipc
  2312     02F4  0F35               	incfsz	___aldiv@divisor+2,w
  2313     02F5  02B9               	subwf	___aldiv@dividend+2,f
  2314     02F6  0836               	movf	___aldiv@divisor+3,w
  2315     02F7  1C03               	skipc
  2316     02F8  0F36               	incfsz	___aldiv@divisor+3,w
  2317     02F9  02BA               	subwf	___aldiv@dividend+3,f
  2318     02FA                     l1632:
  2319     02FA  143E               	bsf	___aldiv@quotient,0
  2320     02FB                     l1634:
  2321     02FB  3001               	movlw	1
  2322     02FC                     u1425:
  2323     02FC  1003               	clrc
  2324     02FD  0CB6               	rrf	___aldiv@divisor+3,f
  2325     02FE  0CB5               	rrf	___aldiv@divisor+2,f
  2326     02FF  0CB4               	rrf	___aldiv@divisor+1,f
  2327     0300  0CB3               	rrf	___aldiv@divisor,f
  2328     0301  3EFF               	addlw	-1
  2329     0302  1D03               	skipz
  2330     0303  2AFC               	goto	u1425
  2331     0304                     l1636:
  2332     0304  3001               	movlw	1
  2333     0305  02BC               	subwf	___aldiv@counter,f
  2334     0306  1D03               	btfss	3,2
  2335     0307  2B09               	goto	u1431
  2336     0308  2B0A               	goto	u1430
  2337     0309                     u1431:
  2338     0309  2AD1               	goto	l1626
  2339     030A                     u1430:
  2340     030A                     l1638:
  2341     030A  083D               	movf	___aldiv@sign,w
  2342     030B  1903               	btfsc	3,2
  2343     030C  2B0E               	goto	u1441
  2344     030D  2B0F               	goto	u1440
  2345     030E                     u1441:
  2346     030E  2B1A               	goto	l1642
  2347     030F                     u1440:
  2348     030F                     l1640:
  2349     030F  09BE               	comf	___aldiv@quotient,f
  2350     0310  09BF               	comf	___aldiv@quotient+1,f
  2351     0311  09C0               	comf	___aldiv@quotient+2,f
  2352     0312  09C1               	comf	___aldiv@quotient+3,f
  2353     0313  0ABE               	incf	___aldiv@quotient,f
  2354     0314  1903               	skipnz
  2355     0315  0ABF               	incf	___aldiv@quotient+1,f
  2356     0316  1903               	skipnz
  2357     0317  0AC0               	incf	___aldiv@quotient+2,f
  2358     0318  1903               	skipnz
  2359     0319  0AC1               	incf	___aldiv@quotient+3,f
  2360     031A                     l1642:
  2361     031A  0841               	movf	___aldiv@quotient+3,w
  2362     031B  00B6               	movwf	?___aldiv+3
  2363     031C  0840               	movf	___aldiv@quotient+2,w
  2364     031D  00B5               	movwf	?___aldiv+2
  2365     031E  083F               	movf	___aldiv@quotient+1,w
  2366     031F  00B4               	movwf	?___aldiv+1
  2367     0320  083E               	movf	___aldiv@quotient,w
  2368     0321  00B3               	movwf	?___aldiv
  2369     0322                     l415:
  2370     0322  0008               	return
  2371     0323                     __end_of___aldiv:
  2372                           
  2373                           	psect	text6
  2374     05E5                     __ptext6:	
  2375 ;; *************** function _inttochar *****************
  2376 ;; Defined at:
  2377 ;;		line 15 in file "conversiones.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  num             1    wreg     unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  num             1    6[BANK0 ] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      unsigned char 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       0       0
  2392 ;;      Locals:         0       1       0       0       0
  2393 ;;      Temps:          0       0       0       0       0
  2394 ;;      Totals:         0       1       0       0       0
  2395 ;;Total ram usage:        1 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 2
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405     05E5                     _inttochar:	
  2406                           ;psect for function _inttochar
  2407                           
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2411                           ;inttochar@num stored from wreg
  2412     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2413     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2414     05E7  00A6               	movwf	inttochar@num
  2415     05E8                     l1918:
  2416                           
  2417                           ;conversiones.c: 16:     if(num == 0){
  2418     05E8  0826               	movf	inttochar@num,w
  2419     05E9  1D03               	btfss	3,2
  2420     05EA  2DEC               	goto	u1991
  2421     05EB  2DED               	goto	u1990
  2422     05EC                     u1991:
  2423     05EC  2DEF               	goto	l1926
  2424     05ED                     u1990:
  2425     05ED                     l1920:
  2426                           
  2427                           ;conversiones.c: 17:         return '0';
  2428     05ED  3030               	movlw	48
  2429     05EE  2E36               	goto	l200
  2430     05EF                     l1926:
  2431     05EF  0326               	decf	inttochar@num,w
  2432     05F0  1D03               	btfss	3,2
  2433     05F1  2DF3               	goto	u2001
  2434     05F2  2DF4               	goto	u2000
  2435     05F3                     u2001:
  2436     05F3  2DF6               	goto	l1934
  2437     05F4                     u2000:
  2438     05F4                     l1928:
  2439                           
  2440                           ;conversiones.c: 20:         return '1';
  2441     05F4  3031               	movlw	49
  2442     05F5  2E36               	goto	l200
  2443     05F6                     l1934:
  2444     05F6  3002               	movlw	2
  2445     05F7  0626               	xorwf	inttochar@num,w
  2446     05F8  1D03               	btfss	3,2
  2447     05F9  2DFB               	goto	u2011
  2448     05FA  2DFC               	goto	u2010
  2449     05FB                     u2011:
  2450     05FB  2DFE               	goto	l1942
  2451     05FC                     u2010:
  2452     05FC                     l1936:
  2453                           
  2454                           ;conversiones.c: 23:         return '2';
  2455     05FC  3032               	movlw	50
  2456     05FD  2E36               	goto	l200
  2457     05FE                     l1942:
  2458     05FE  3003               	movlw	3
  2459     05FF  0626               	xorwf	inttochar@num,w
  2460     0600  1D03               	btfss	3,2
  2461     0601  2E03               	goto	u2021
  2462     0602  2E04               	goto	u2020
  2463     0603                     u2021:
  2464     0603  2E06               	goto	l1950
  2465     0604                     u2020:
  2466     0604                     l1944:
  2467                           
  2468                           ;conversiones.c: 26:         return '3';
  2469     0604  3033               	movlw	51
  2470     0605  2E36               	goto	l200
  2471     0606                     l1950:
  2472     0606  3004               	movlw	4
  2473     0607  0626               	xorwf	inttochar@num,w
  2474     0608  1D03               	btfss	3,2
  2475     0609  2E0B               	goto	u2031
  2476     060A  2E0C               	goto	u2030
  2477     060B                     u2031:
  2478     060B  2E0E               	goto	l1958
  2479     060C                     u2030:
  2480     060C                     l1952:
  2481                           
  2482                           ;conversiones.c: 29:         return '4';
  2483     060C  3034               	movlw	52
  2484     060D  2E36               	goto	l200
  2485     060E                     l1958:
  2486     060E  3005               	movlw	5
  2487     060F  0626               	xorwf	inttochar@num,w
  2488     0610  1D03               	btfss	3,2
  2489     0611  2E13               	goto	u2041
  2490     0612  2E14               	goto	u2040
  2491     0613                     u2041:
  2492     0613  2E16               	goto	l1966
  2493     0614                     u2040:
  2494     0614                     l1960:
  2495                           
  2496                           ;conversiones.c: 32:         return '5';
  2497     0614  3035               	movlw	53
  2498     0615  2E36               	goto	l200
  2499     0616                     l1966:
  2500     0616  3006               	movlw	6
  2501     0617  0626               	xorwf	inttochar@num,w
  2502     0618  1D03               	btfss	3,2
  2503     0619  2E1B               	goto	u2051
  2504     061A  2E1C               	goto	u2050
  2505     061B                     u2051:
  2506     061B  2E1E               	goto	l1974
  2507     061C                     u2050:
  2508     061C                     l1968:
  2509                           
  2510                           ;conversiones.c: 35:         return '6';
  2511     061C  3036               	movlw	54
  2512     061D  2E36               	goto	l200
  2513     061E                     l1974:
  2514     061E  3007               	movlw	7
  2515     061F  0626               	xorwf	inttochar@num,w
  2516     0620  1D03               	btfss	3,2
  2517     0621  2E23               	goto	u2061
  2518     0622  2E24               	goto	u2060
  2519     0623                     u2061:
  2520     0623  2E26               	goto	l1982
  2521     0624                     u2060:
  2522     0624                     l1976:
  2523                           
  2524                           ;conversiones.c: 38:         return '7';
  2525     0624  3037               	movlw	55
  2526     0625  2E36               	goto	l200
  2527     0626                     l1982:
  2528     0626  3008               	movlw	8
  2529     0627  0626               	xorwf	inttochar@num,w
  2530     0628  1D03               	btfss	3,2
  2531     0629  2E2B               	goto	u2071
  2532     062A  2E2C               	goto	u2070
  2533     062B                     u2071:
  2534     062B  2E2E               	goto	l1990
  2535     062C                     u2070:
  2536     062C                     l1984:
  2537                           
  2538                           ;conversiones.c: 41:         return '8';
  2539     062C  3038               	movlw	56
  2540     062D  2E36               	goto	l200
  2541     062E                     l1990:
  2542     062E  3009               	movlw	9
  2543     062F  0626               	xorwf	inttochar@num,w
  2544     0630  1D03               	btfss	3,2
  2545     0631  2E33               	goto	u2081
  2546     0632  2E34               	goto	u2080
  2547     0633                     u2081:
  2548     0633  2E36               	goto	l213
  2549     0634                     u2080:
  2550     0634                     l1992:
  2551                           
  2552                           ;conversiones.c: 44:         return '9';
  2553     0634  3039               	movlw	57
  2554     0635  2E36               	goto	l200
  2555     0636                     l213:
  2556     0636                     l200:
  2557     0636  0008               	return
  2558     0637                     __end_of_inttochar:
  2559                           
  2560                           	psect	text7
  2561     0798                     __ptext7:	
  2562 ;; *************** function _iniciarADC *****************
  2563 ;; Defined at:
  2564 ;;		line 44 in file "setupADC.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  channel         2    6[BANK0 ] int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         0       2       0       0       0
  2579 ;;      Locals:         0       0       0       0       0
  2580 ;;      Temps:          0       1       0       0       0
  2581 ;;      Totals:         0       3       0       0       0
  2582 ;;Total ram usage:        3 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 2
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592     0798                     _iniciarADC:	
  2593                           ;psect for function _iniciarADC
  2594                           
  2595     0798                     l1864:	
  2596                           ;incstack = 0
  2597                           ; Regs used in _iniciarADC: [wreg+status,2+status,0]
  2598                           
  2599                           
  2600                           ;setupADC.c: 45:     if(channel ==0){
  2601     0798  1283               	bcf	3,5	;RP0=0, select bank0
  2602     0799  1303               	bcf	3,6	;RP1=0, select bank0
  2603     079A  0826               	movf	iniciarADC@channel,w
  2604     079B  0427               	iorwf	iniciarADC@channel+1,w
  2605     079C  1D03               	btfss	3,2
  2606     079D  2F9F               	goto	u1931
  2607     079E  2FA0               	goto	u1930
  2608     079F                     u1931:
  2609     079F  2FAC               	goto	l1872
  2610     07A0                     u1930:
  2611     07A0                     l1866:
  2612                           
  2613                           ;setupADC.c: 46:         ADCON0bits.CHS = 0b0000;
  2614     07A0  30C3               	movlw	-61
  2615     07A1  059F               	andwf	31,f	;volatile
  2616     07A2                     l1868:
  2617                           
  2618                           ;setupADC.c: 47:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  2619     07A2  3020               	movlw	32
  2620     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2621     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2622     07A5  00A8               	movwf	??_iniciarADC
  2623     07A6                     u2407:
  2624     07A6  0BA8               	decfsz	??_iniciarADC,f
  2625     07A7  2FA6               	goto	u2407
  2626     07A8  0000               	nop
  2627     07A9                     l1870:
  2628                           
  2629                           ;setupADC.c: 48:         ADCON0bits.GO = 1;
  2630     07A9  1283               	bcf	3,5	;RP0=0, select bank0
  2631     07AA  1303               	bcf	3,6	;RP1=0, select bank0
  2632     07AB  149F               	bsf	31,1	;volatile
  2633     07AC                     l1872:
  2634                           
  2635                           ;setupADC.c: 50:     if(channel ==1){
  2636     07AC  0326               	decf	iniciarADC@channel,w
  2637     07AD  0427               	iorwf	iniciarADC@channel+1,w
  2638     07AE  1D03               	btfss	3,2
  2639     07AF  2FB1               	goto	u1941
  2640     07B0  2FB2               	goto	u1940
  2641     07B1                     u1941:
  2642     07B1  2FC0               	goto	l1880
  2643     07B2                     u1940:
  2644     07B2                     l1874:
  2645                           
  2646                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  2647     07B2  081F               	movf	31,w	;volatile
  2648     07B3  39C3               	andlw	-61
  2649     07B4  3804               	iorlw	4
  2650     07B5  009F               	movwf	31	;volatile
  2651     07B6                     l1876:
  2652                           
  2653                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  2654     07B6  3020               	movlw	32
  2655     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  2656     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  2657     07B9  00A8               	movwf	??_iniciarADC
  2658     07BA                     u2417:
  2659     07BA  0BA8               	decfsz	??_iniciarADC,f
  2660     07BB  2FBA               	goto	u2417
  2661     07BC  0000               	nop
  2662     07BD                     l1878:
  2663                           
  2664                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  2665     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2666     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2667     07BF  149F               	bsf	31,1	;volatile
  2668     07C0                     l1880:
  2669                           
  2670                           ;setupADC.c: 55:     if(channel ==2){
  2671     07C0  3002               	movlw	2
  2672     07C1  0626               	xorwf	iniciarADC@channel,w
  2673     07C2  0427               	iorwf	iniciarADC@channel+1,w
  2674     07C3  1D03               	btfss	3,2
  2675     07C4  2FC6               	goto	u1951
  2676     07C5  2FC7               	goto	u1950
  2677     07C6                     u1951:
  2678     07C6  2FD5               	goto	l115
  2679     07C7                     u1950:
  2680     07C7                     l1882:
  2681                           
  2682                           ;setupADC.c: 56:         ADCON0bits.CHS = 0b0010;
  2683     07C7  081F               	movf	31,w	;volatile
  2684     07C8  39C3               	andlw	-61
  2685     07C9  3808               	iorlw	8
  2686     07CA  009F               	movwf	31	;volatile
  2687     07CB                     l1884:
  2688                           
  2689                           ;setupADC.c: 57:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  2690     07CB  3020               	movlw	32
  2691     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2692     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2693     07CE  00A8               	movwf	??_iniciarADC
  2694     07CF                     u2427:
  2695     07CF  0BA8               	decfsz	??_iniciarADC,f
  2696     07D0  2FCF               	goto	u2427
  2697     07D1  0000               	nop
  2698     07D2                     l1886:
  2699                           
  2700                           ;setupADC.c: 58:         ADCON0bits.GO = 1;
  2701     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2702     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  2703     07D4  149F               	bsf	31,1	;volatile
  2704     07D5                     l115:
  2705     07D5  0008               	return
  2706     07D6                     __end_of_iniciarADC:
  2707                           
  2708                           	psect	text8
  2709     046C                     __ptext8:	
  2710 ;; *************** function _descomponer *****************
  2711 ;; Defined at:
  2712 ;;		line 48 in file "conversiones.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  pos             2   15[BANK0 ] int 
  2715 ;;  num             2   17[BANK0 ] unsigned int 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  dec             1   23[BANK0 ] unsigned char 
  2718 ;;  uni             1   22[BANK0 ] unsigned char 
  2719 ;;  cent            1   21[BANK0 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      unsigned char 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       4       0       0       0
  2730 ;;      Locals:         0       3       0       0       0
  2731 ;;      Temps:          0       2       0       0       0
  2732 ;;      Totals:         0       9       0       0       0
  2733 ;;Total ram usage:        9 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 3
  2736 ;; This function calls:
  2737 ;;		___awdiv
  2738 ;;		___awmod
  2739 ;;		___lwdiv
  2740 ;;		___lwmod
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746     046C                     _descomponer:	
  2747                           ;psect for function _descomponer
  2748                           
  2749     046C                     l1894:	
  2750                           ;incstack = 0
  2751                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2752                           
  2753                           
  2754                           ;conversiones.c: 49:     uint8_t cent;;conversiones.c: 50:     uint8_t dec;;conversiones
      +                          .c: 51:     uint8_t uni;;conversiones.c: 52:     cent = (num/100);
  2755     046C  3064               	movlw	100
  2756     046D  1283               	bcf	3,5	;RP0=0, select bank0
  2757     046E  1303               	bcf	3,6	;RP1=0, select bank0
  2758     046F  00A6               	movwf	___lwdiv@divisor
  2759     0470  3000               	movlw	0
  2760     0471  00A7               	movwf	___lwdiv@divisor+1
  2761     0472  0832               	movf	descomponer@num+1,w
  2762     0473  00A9               	movwf	___lwdiv@dividend+1
  2763     0474  0831               	movf	descomponer@num,w
  2764     0475  00A8               	movwf	___lwdiv@dividend
  2765     0476  120A  118A  2712  120A  118A  	fcall	___lwdiv
  2766     047B  1283               	bcf	3,5	;RP0=0, select bank0
  2767     047C  1303               	bcf	3,6	;RP1=0, select bank0
  2768     047D  0826               	movf	?___lwdiv,w
  2769     047E  00B5               	movwf	descomponer@cent
  2770                           
  2771                           ;conversiones.c: 53:     dec = (num%100);
  2772     047F  3064               	movlw	100
  2773     0480  00A6               	movwf	___lwmod@divisor
  2774     0481  3000               	movlw	0
  2775     0482  00A7               	movwf	___lwmod@divisor+1
  2776     0483  0832               	movf	descomponer@num+1,w
  2777     0484  00A9               	movwf	___lwmod@dividend+1
  2778     0485  0831               	movf	descomponer@num,w
  2779     0486  00A8               	movwf	___lwmod@dividend
  2780     0487  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2781     048C  1283               	bcf	3,5	;RP0=0, select bank0
  2782     048D  1303               	bcf	3,6	;RP1=0, select bank0
  2783     048E  0826               	movf	?___lwmod,w
  2784     048F  00B7               	movwf	descomponer@dec
  2785                           
  2786                           ;conversiones.c: 54:     uni = (dec%10);
  2787     0490  300A               	movlw	10
  2788     0491  00A6               	movwf	___awmod@divisor
  2789     0492  3000               	movlw	0
  2790     0493  00A7               	movwf	___awmod@divisor+1
  2791     0494  0837               	movf	descomponer@dec,w
  2792     0495  00B3               	movwf	??_descomponer
  2793     0496  01B4               	clrf	??_descomponer+1
  2794     0497  0833               	movf	??_descomponer,w
  2795     0498  00A8               	movwf	___awmod@dividend
  2796     0499  0834               	movf	??_descomponer+1,w
  2797     049A  00A9               	movwf	___awmod@dividend+1
  2798     049B  120A  118A  2532  120A  118A  	fcall	___awmod
  2799     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2800     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2801     04A2  0826               	movf	?___awmod,w
  2802     04A3  00B6               	movwf	descomponer@uni
  2803     04A4                     l1896:
  2804                           
  2805                           ;conversiones.c: 55:     if(pos == 2){
  2806     04A4  3002               	movlw	2
  2807     04A5  062F               	xorwf	descomponer@pos,w
  2808     04A6  0430               	iorwf	descomponer@pos+1,w
  2809     04A7  1D03               	btfss	3,2
  2810     04A8  2CAA               	goto	u1961
  2811     04A9  2CAB               	goto	u1960
  2812     04AA                     u1961:
  2813     04AA  2CAD               	goto	l1904
  2814     04AB                     u1960:
  2815     04AB                     l1898:
  2816                           
  2817                           ;conversiones.c: 56:         return cent;
  2818     04AB  0835               	movf	descomponer@cent,w
  2819     04AC  2CCE               	goto	l222
  2820     04AD                     l1904:
  2821     04AD  032F               	decf	descomponer@pos,w
  2822     04AE  0430               	iorwf	descomponer@pos+1,w
  2823     04AF  1D03               	btfss	3,2
  2824     04B0  2CB2               	goto	u1971
  2825     04B1  2CB3               	goto	u1970
  2826     04B2                     u1971:
  2827     04B2  2CC7               	goto	l1912
  2828     04B3                     u1970:
  2829     04B3                     l1906:
  2830                           
  2831                           ;conversiones.c: 59:         return (dec/10);
  2832     04B3  300A               	movlw	10
  2833     04B4  00A6               	movwf	___awdiv@divisor
  2834     04B5  3000               	movlw	0
  2835     04B6  00A7               	movwf	___awdiv@divisor+1
  2836     04B7  0837               	movf	descomponer@dec,w
  2837     04B8  00B3               	movwf	??_descomponer
  2838     04B9  01B4               	clrf	??_descomponer+1
  2839     04BA  0833               	movf	??_descomponer,w
  2840     04BB  00A8               	movwf	___awdiv@dividend
  2841     04BC  0834               	movf	??_descomponer+1,w
  2842     04BD  00A9               	movwf	___awdiv@dividend+1
  2843     04BE  120A  118A  239B  120A  118A  	fcall	___awdiv
  2844     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2845     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2846     04C5  0826               	movf	?___awdiv,w
  2847     04C6  2CCE               	goto	l222
  2848     04C7                     l1912:
  2849     04C7  082F               	movf	descomponer@pos,w
  2850     04C8  0430               	iorwf	descomponer@pos+1,w
  2851     04C9  1D03               	btfss	3,2
  2852     04CA  2CCC               	goto	u1981
  2853     04CB  2CCD               	goto	u1980
  2854     04CC                     u1981:
  2855     04CC  2CCE               	goto	l222
  2856     04CD                     u1980:
  2857     04CD                     l1914:
  2858                           
  2859                           ;conversiones.c: 62:         return uni;
  2860     04CD  0836               	movf	descomponer@uni,w
  2861     04CE                     l222:
  2862     04CE  0008               	return
  2863     04CF                     __end_of_descomponer:
  2864                           
  2865                           	psect	text9
  2866     0FC4                     __ptext9:	
  2867 ;; *************** function ___lwmod *****************
  2868 ;; Defined at:
  2869 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  divisor         2    6[BANK0 ] unsigned int 
  2872 ;;  dividend        2    8[BANK0 ] unsigned int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  counter         1   11[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2    6[BANK0 ] unsigned int 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       4       0       0       0
  2885 ;;      Locals:         0       1       0       0       0
  2886 ;;      Temps:          0       1       0       0       0
  2887 ;;      Totals:         0       6       0       0       0
  2888 ;;Total ram usage:        6 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 2
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_descomponer
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898     0FC4                     ___lwmod:	
  2899                           ;psect for function ___lwmod
  2900                           
  2901     0FC4                     l1754:	
  2902                           ;incstack = 0
  2903                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2904                           
  2905     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2906     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2907     0FC6  0826               	movf	___lwmod@divisor,w
  2908     0FC7  0427               	iorwf	___lwmod@divisor+1,w
  2909     0FC8  1903               	btfsc	3,2
  2910     0FC9  2FCB               	goto	u1711
  2911     0FCA  2FCC               	goto	u1710
  2912     0FCB                     u1711:
  2913     0FCB  2FFB               	goto	l1772
  2914     0FCC                     u1710:
  2915     0FCC                     l1756:
  2916     0FCC  01AB               	clrf	___lwmod@counter
  2917     0FCD  0AAB               	incf	___lwmod@counter,f
  2918     0FCE  2FDA               	goto	l1762
  2919     0FCF                     l1758:
  2920     0FCF  3001               	movlw	1
  2921     0FD0                     u1725:
  2922     0FD0  1003               	clrc
  2923     0FD1  0DA6               	rlf	___lwmod@divisor,f
  2924     0FD2  0DA7               	rlf	___lwmod@divisor+1,f
  2925     0FD3  3EFF               	addlw	-1
  2926     0FD4  1D03               	skipz
  2927     0FD5  2FD0               	goto	u1725
  2928     0FD6                     l1760:
  2929     0FD6  3001               	movlw	1
  2930     0FD7  00AA               	movwf	??___lwmod
  2931     0FD8  082A               	movf	??___lwmod,w
  2932     0FD9  07AB               	addwf	___lwmod@counter,f
  2933     0FDA                     l1762:
  2934     0FDA  1FA7               	btfss	___lwmod@divisor+1,7
  2935     0FDB  2FDD               	goto	u1731
  2936     0FDC  2FDE               	goto	u1730
  2937     0FDD                     u1731:
  2938     0FDD  2FCF               	goto	l1758
  2939     0FDE                     u1730:
  2940     0FDE                     l1764:
  2941     0FDE  0827               	movf	___lwmod@divisor+1,w
  2942     0FDF  0229               	subwf	___lwmod@dividend+1,w
  2943     0FE0  1D03               	skipz
  2944     0FE1  2FE4               	goto	u1745
  2945     0FE2  0826               	movf	___lwmod@divisor,w
  2946     0FE3  0228               	subwf	___lwmod@dividend,w
  2947     0FE4                     u1745:
  2948     0FE4  1C03               	skipc
  2949     0FE5  2FE7               	goto	u1741
  2950     0FE6  2FE8               	goto	u1740
  2951     0FE7                     u1741:
  2952     0FE7  2FEE               	goto	l1768
  2953     0FE8                     u1740:
  2954     0FE8                     l1766:
  2955     0FE8  0826               	movf	___lwmod@divisor,w
  2956     0FE9  02A8               	subwf	___lwmod@dividend,f
  2957     0FEA  0827               	movf	___lwmod@divisor+1,w
  2958     0FEB  1C03               	skipc
  2959     0FEC  03A9               	decf	___lwmod@dividend+1,f
  2960     0FED  02A9               	subwf	___lwmod@dividend+1,f
  2961     0FEE                     l1768:
  2962     0FEE  3001               	movlw	1
  2963     0FEF                     u1755:
  2964     0FEF  1003               	clrc
  2965     0FF0  0CA7               	rrf	___lwmod@divisor+1,f
  2966     0FF1  0CA6               	rrf	___lwmod@divisor,f
  2967     0FF2  3EFF               	addlw	-1
  2968     0FF3  1D03               	skipz
  2969     0FF4  2FEF               	goto	u1755
  2970     0FF5                     l1770:
  2971     0FF5  3001               	movlw	1
  2972     0FF6  02AB               	subwf	___lwmod@counter,f
  2973     0FF7  1D03               	btfss	3,2
  2974     0FF8  2FFA               	goto	u1761
  2975     0FF9  2FFB               	goto	u1760
  2976     0FFA                     u1761:
  2977     0FFA  2FDE               	goto	l1764
  2978     0FFB                     u1760:
  2979     0FFB                     l1772:
  2980     0FFB  0829               	movf	___lwmod@dividend+1,w
  2981     0FFC  00A7               	movwf	?___lwmod+1
  2982     0FFD  0828               	movf	___lwmod@dividend,w
  2983     0FFE  00A6               	movwf	?___lwmod
  2984     0FFF                     l622:
  2985     0FFF  0008               	return
  2986     1000                     __end_of___lwmod:
  2987                           
  2988                           	psect	text10
  2989     0712                     __ptext10:	
  2990 ;; *************** function ___lwdiv *****************
  2991 ;; Defined at:
  2992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  divisor         2    6[BANK0 ] unsigned int 
  2995 ;;  dividend        2    8[BANK0 ] unsigned int 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  quotient        2   11[BANK0 ] unsigned int 
  2998 ;;  counter         1   13[BANK0 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2    6[BANK0 ] unsigned int 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       4       0       0       0
  3009 ;;      Locals:         0       3       0       0       0
  3010 ;;      Temps:          0       1       0       0       0
  3011 ;;      Totals:         0       8       0       0       0
  3012 ;;Total ram usage:        8 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; Hardware stack levels required when called: 2
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_descomponer
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022     0712                     ___lwdiv:	
  3023                           ;psect for function ___lwdiv
  3024                           
  3025     0712                     l1728:	
  3026                           ;incstack = 0
  3027                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3028                           
  3029     0712  1283               	bcf	3,5	;RP0=0, select bank0
  3030     0713  1303               	bcf	3,6	;RP1=0, select bank0
  3031     0714  01AB               	clrf	___lwdiv@quotient
  3032     0715  01AC               	clrf	___lwdiv@quotient+1
  3033     0716                     l1730:
  3034     0716  0826               	movf	___lwdiv@divisor,w
  3035     0717  0427               	iorwf	___lwdiv@divisor+1,w
  3036     0718  1903               	btfsc	3,2
  3037     0719  2F1B               	goto	u1641
  3038     071A  2F1C               	goto	u1640
  3039     071B                     u1641:
  3040     071B  2F53               	goto	l1750
  3041     071C                     u1640:
  3042     071C                     l1732:
  3043     071C  01AD               	clrf	___lwdiv@counter
  3044     071D  0AAD               	incf	___lwdiv@counter,f
  3045     071E  2F2A               	goto	l1738
  3046     071F                     l1734:
  3047     071F  3001               	movlw	1
  3048     0720                     u1655:
  3049     0720  1003               	clrc
  3050     0721  0DA6               	rlf	___lwdiv@divisor,f
  3051     0722  0DA7               	rlf	___lwdiv@divisor+1,f
  3052     0723  3EFF               	addlw	-1
  3053     0724  1D03               	skipz
  3054     0725  2F20               	goto	u1655
  3055     0726                     l1736:
  3056     0726  3001               	movlw	1
  3057     0727  00AA               	movwf	??___lwdiv
  3058     0728  082A               	movf	??___lwdiv,w
  3059     0729  07AD               	addwf	___lwdiv@counter,f
  3060     072A                     l1738:
  3061     072A  1FA7               	btfss	___lwdiv@divisor+1,7
  3062     072B  2F2D               	goto	u1661
  3063     072C  2F2E               	goto	u1660
  3064     072D                     u1661:
  3065     072D  2F1F               	goto	l1734
  3066     072E                     u1660:
  3067     072E                     l1740:
  3068     072E  3001               	movlw	1
  3069     072F                     u1675:
  3070     072F  1003               	clrc
  3071     0730  0DAB               	rlf	___lwdiv@quotient,f
  3072     0731  0DAC               	rlf	___lwdiv@quotient+1,f
  3073     0732  3EFF               	addlw	-1
  3074     0733  1D03               	skipz
  3075     0734  2F2F               	goto	u1675
  3076     0735  0827               	movf	___lwdiv@divisor+1,w
  3077     0736  0229               	subwf	___lwdiv@dividend+1,w
  3078     0737  1D03               	skipz
  3079     0738  2F3B               	goto	u1685
  3080     0739  0826               	movf	___lwdiv@divisor,w
  3081     073A  0228               	subwf	___lwdiv@dividend,w
  3082     073B                     u1685:
  3083     073B  1C03               	skipc
  3084     073C  2F3E               	goto	u1681
  3085     073D  2F3F               	goto	u1680
  3086     073E                     u1681:
  3087     073E  2F46               	goto	l1746
  3088     073F                     u1680:
  3089     073F                     l1742:
  3090     073F  0826               	movf	___lwdiv@divisor,w
  3091     0740  02A8               	subwf	___lwdiv@dividend,f
  3092     0741  0827               	movf	___lwdiv@divisor+1,w
  3093     0742  1C03               	skipc
  3094     0743  03A9               	decf	___lwdiv@dividend+1,f
  3095     0744  02A9               	subwf	___lwdiv@dividend+1,f
  3096     0745                     l1744:
  3097     0745  142B               	bsf	___lwdiv@quotient,0
  3098     0746                     l1746:
  3099     0746  3001               	movlw	1
  3100     0747                     u1695:
  3101     0747  1003               	clrc
  3102     0748  0CA7               	rrf	___lwdiv@divisor+1,f
  3103     0749  0CA6               	rrf	___lwdiv@divisor,f
  3104     074A  3EFF               	addlw	-1
  3105     074B  1D03               	skipz
  3106     074C  2F47               	goto	u1695
  3107     074D                     l1748:
  3108     074D  3001               	movlw	1
  3109     074E  02AD               	subwf	___lwdiv@counter,f
  3110     074F  1D03               	btfss	3,2
  3111     0750  2F52               	goto	u1701
  3112     0751  2F53               	goto	u1700
  3113     0752                     u1701:
  3114     0752  2F2E               	goto	l1740
  3115     0753                     u1700:
  3116     0753                     l1750:
  3117     0753  082C               	movf	___lwdiv@quotient+1,w
  3118     0754  00A7               	movwf	?___lwdiv+1
  3119     0755  082B               	movf	___lwdiv@quotient,w
  3120     0756  00A6               	movwf	?___lwdiv
  3121     0757                     l612:
  3122     0757  0008               	return
  3123     0758                     __end_of___lwdiv:
  3124                           
  3125                           	psect	text11
  3126     0532                     __ptext11:	
  3127 ;; *************** function ___awmod *****************
  3128 ;; Defined at:
  3129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  divisor         2    6[BANK0 ] int 
  3132 ;;  dividend        2    8[BANK0 ] int 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  sign            1   12[BANK0 ] unsigned char 
  3135 ;;  counter         1   11[BANK0 ] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  2    6[BANK0 ] int 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       4       0       0       0
  3146 ;;      Locals:         0       2       0       0       0
  3147 ;;      Temps:          0       1       0       0       0
  3148 ;;      Totals:         0       7       0       0       0
  3149 ;;Total ram usage:        7 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 2
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_descomponer
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159     0532                     ___awmod:	
  3160                           ;psect for function ___awmod
  3161                           
  3162     0532                     l1690:	
  3163                           ;incstack = 0
  3164                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3165                           
  3166     0532  1283               	bcf	3,5	;RP0=0, select bank0
  3167     0533  1303               	bcf	3,6	;RP1=0, select bank0
  3168     0534  01AC               	clrf	___awmod@sign
  3169     0535                     l1692:
  3170     0535  1FA9               	btfss	___awmod@dividend+1,7
  3171     0536  2D38               	goto	u1551
  3172     0537  2D39               	goto	u1550
  3173     0538                     u1551:
  3174     0538  2D40               	goto	l1698
  3175     0539                     u1550:
  3176     0539                     l1694:
  3177     0539  09A8               	comf	___awmod@dividend,f
  3178     053A  09A9               	comf	___awmod@dividend+1,f
  3179     053B  0AA8               	incf	___awmod@dividend,f
  3180     053C  1903               	skipnz
  3181     053D  0AA9               	incf	___awmod@dividend+1,f
  3182     053E                     l1696:
  3183     053E  01AC               	clrf	___awmod@sign
  3184     053F  0AAC               	incf	___awmod@sign,f
  3185     0540                     l1698:
  3186     0540  1FA7               	btfss	___awmod@divisor+1,7
  3187     0541  2D43               	goto	u1561
  3188     0542  2D44               	goto	u1560
  3189     0543                     u1561:
  3190     0543  2D49               	goto	l1702
  3191     0544                     u1560:
  3192     0544                     l1700:
  3193     0544  09A6               	comf	___awmod@divisor,f
  3194     0545  09A7               	comf	___awmod@divisor+1,f
  3195     0546  0AA6               	incf	___awmod@divisor,f
  3196     0547  1903               	skipnz
  3197     0548  0AA7               	incf	___awmod@divisor+1,f
  3198     0549                     l1702:
  3199     0549  0826               	movf	___awmod@divisor,w
  3200     054A  0427               	iorwf	___awmod@divisor+1,w
  3201     054B  1903               	btfsc	3,2
  3202     054C  2D4E               	goto	u1571
  3203     054D  2D4F               	goto	u1570
  3204     054E                     u1571:
  3205     054E  2D7E               	goto	l1720
  3206     054F                     u1570:
  3207     054F                     l1704:
  3208     054F  01AB               	clrf	___awmod@counter
  3209     0550  0AAB               	incf	___awmod@counter,f
  3210     0551  2D5D               	goto	l1710
  3211     0552                     l1706:
  3212     0552  3001               	movlw	1
  3213     0553                     u1585:
  3214     0553  1003               	clrc
  3215     0554  0DA6               	rlf	___awmod@divisor,f
  3216     0555  0DA7               	rlf	___awmod@divisor+1,f
  3217     0556  3EFF               	addlw	-1
  3218     0557  1D03               	skipz
  3219     0558  2D53               	goto	u1585
  3220     0559                     l1708:
  3221     0559  3001               	movlw	1
  3222     055A  00AA               	movwf	??___awmod
  3223     055B  082A               	movf	??___awmod,w
  3224     055C  07AB               	addwf	___awmod@counter,f
  3225     055D                     l1710:
  3226     055D  1FA7               	btfss	___awmod@divisor+1,7
  3227     055E  2D60               	goto	u1591
  3228     055F  2D61               	goto	u1590
  3229     0560                     u1591:
  3230     0560  2D52               	goto	l1706
  3231     0561                     u1590:
  3232     0561                     l1712:
  3233     0561  0827               	movf	___awmod@divisor+1,w
  3234     0562  0229               	subwf	___awmod@dividend+1,w
  3235     0563  1D03               	skipz
  3236     0564  2D67               	goto	u1605
  3237     0565  0826               	movf	___awmod@divisor,w
  3238     0566  0228               	subwf	___awmod@dividend,w
  3239     0567                     u1605:
  3240     0567  1C03               	skipc
  3241     0568  2D6A               	goto	u1601
  3242     0569  2D6B               	goto	u1600
  3243     056A                     u1601:
  3244     056A  2D71               	goto	l1716
  3245     056B                     u1600:
  3246     056B                     l1714:
  3247     056B  0826               	movf	___awmod@divisor,w
  3248     056C  02A8               	subwf	___awmod@dividend,f
  3249     056D  0827               	movf	___awmod@divisor+1,w
  3250     056E  1C03               	skipc
  3251     056F  03A9               	decf	___awmod@dividend+1,f
  3252     0570  02A9               	subwf	___awmod@dividend+1,f
  3253     0571                     l1716:
  3254     0571  3001               	movlw	1
  3255     0572                     u1615:
  3256     0572  1003               	clrc
  3257     0573  0CA7               	rrf	___awmod@divisor+1,f
  3258     0574  0CA6               	rrf	___awmod@divisor,f
  3259     0575  3EFF               	addlw	-1
  3260     0576  1D03               	skipz
  3261     0577  2D72               	goto	u1615
  3262     0578                     l1718:
  3263     0578  3001               	movlw	1
  3264     0579  02AB               	subwf	___awmod@counter,f
  3265     057A  1D03               	btfss	3,2
  3266     057B  2D7D               	goto	u1621
  3267     057C  2D7E               	goto	u1620
  3268     057D                     u1621:
  3269     057D  2D61               	goto	l1712
  3270     057E                     u1620:
  3271     057E                     l1720:
  3272     057E  082C               	movf	___awmod@sign,w
  3273     057F  1903               	btfsc	3,2
  3274     0580  2D82               	goto	u1631
  3275     0581  2D83               	goto	u1630
  3276     0582                     u1631:
  3277     0582  2D88               	goto	l1724
  3278     0583                     u1630:
  3279     0583                     l1722:
  3280     0583  09A8               	comf	___awmod@dividend,f
  3281     0584  09A9               	comf	___awmod@dividend+1,f
  3282     0585  0AA8               	incf	___awmod@dividend,f
  3283     0586  1903               	skipnz
  3284     0587  0AA9               	incf	___awmod@dividend+1,f
  3285     0588                     l1724:
  3286     0588  0829               	movf	___awmod@dividend+1,w
  3287     0589  00A7               	movwf	?___awmod+1
  3288     058A  0828               	movf	___awmod@dividend,w
  3289     058B  00A6               	movwf	?___awmod
  3290     058C                     l506:
  3291     058C  0008               	return
  3292     058D                     __end_of___awmod:
  3293                           
  3294                           	psect	text12
  3295     039B                     __ptext12:	
  3296 ;; *************** function ___awdiv *****************
  3297 ;; Defined at:
  3298 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  divisor         2    6[BANK0 ] int 
  3301 ;;  dividend        2    8[BANK0 ] int 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  quotient        2   13[BANK0 ] int 
  3304 ;;  sign            1   12[BANK0 ] unsigned char 
  3305 ;;  counter         1   11[BANK0 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2    6[BANK0 ] int 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       4       0       0       0
  3316 ;;      Locals:         0       4       0       0       0
  3317 ;;      Temps:          0       1       0       0       0
  3318 ;;      Totals:         0       9       0       0       0
  3319 ;;Total ram usage:        9 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 2
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_descomponer
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329     039B                     ___awdiv:	
  3330                           ;psect for function ___awdiv
  3331                           
  3332     039B                     l1646:	
  3333                           ;incstack = 0
  3334                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3335                           
  3336     039B  1283               	bcf	3,5	;RP0=0, select bank0
  3337     039C  1303               	bcf	3,6	;RP1=0, select bank0
  3338     039D  01AC               	clrf	___awdiv@sign
  3339     039E                     l1648:
  3340     039E  1FA7               	btfss	___awdiv@divisor+1,7
  3341     039F  2BA1               	goto	u1451
  3342     03A0  2BA2               	goto	u1450
  3343     03A1                     u1451:
  3344     03A1  2BA9               	goto	l1654
  3345     03A2                     u1450:
  3346     03A2                     l1650:
  3347     03A2  09A6               	comf	___awdiv@divisor,f
  3348     03A3  09A7               	comf	___awdiv@divisor+1,f
  3349     03A4  0AA6               	incf	___awdiv@divisor,f
  3350     03A5  1903               	skipnz
  3351     03A6  0AA7               	incf	___awdiv@divisor+1,f
  3352     03A7                     l1652:
  3353     03A7  01AC               	clrf	___awdiv@sign
  3354     03A8  0AAC               	incf	___awdiv@sign,f
  3355     03A9                     l1654:
  3356     03A9  1FA9               	btfss	___awdiv@dividend+1,7
  3357     03AA  2BAC               	goto	u1461
  3358     03AB  2BAD               	goto	u1460
  3359     03AC                     u1461:
  3360     03AC  2BB6               	goto	l1660
  3361     03AD                     u1460:
  3362     03AD                     l1656:
  3363     03AD  09A8               	comf	___awdiv@dividend,f
  3364     03AE  09A9               	comf	___awdiv@dividend+1,f
  3365     03AF  0AA8               	incf	___awdiv@dividend,f
  3366     03B0  1903               	skipnz
  3367     03B1  0AA9               	incf	___awdiv@dividend+1,f
  3368     03B2                     l1658:
  3369     03B2  3001               	movlw	1
  3370     03B3  00AA               	movwf	??___awdiv
  3371     03B4  082A               	movf	??___awdiv,w
  3372     03B5  06AC               	xorwf	___awdiv@sign,f
  3373     03B6                     l1660:
  3374     03B6  01AD               	clrf	___awdiv@quotient
  3375     03B7  01AE               	clrf	___awdiv@quotient+1
  3376     03B8                     l1662:
  3377     03B8  0826               	movf	___awdiv@divisor,w
  3378     03B9  0427               	iorwf	___awdiv@divisor+1,w
  3379     03BA  1903               	btfsc	3,2
  3380     03BB  2BBD               	goto	u1471
  3381     03BC  2BBE               	goto	u1470
  3382     03BD                     u1471:
  3383     03BD  2BF5               	goto	l1682
  3384     03BE                     u1470:
  3385     03BE                     l1664:
  3386     03BE  01AB               	clrf	___awdiv@counter
  3387     03BF  0AAB               	incf	___awdiv@counter,f
  3388     03C0  2BCC               	goto	l1670
  3389     03C1                     l1666:
  3390     03C1  3001               	movlw	1
  3391     03C2                     u1485:
  3392     03C2  1003               	clrc
  3393     03C3  0DA6               	rlf	___awdiv@divisor,f
  3394     03C4  0DA7               	rlf	___awdiv@divisor+1,f
  3395     03C5  3EFF               	addlw	-1
  3396     03C6  1D03               	skipz
  3397     03C7  2BC2               	goto	u1485
  3398     03C8                     l1668:
  3399     03C8  3001               	movlw	1
  3400     03C9  00AA               	movwf	??___awdiv
  3401     03CA  082A               	movf	??___awdiv,w
  3402     03CB  07AB               	addwf	___awdiv@counter,f
  3403     03CC                     l1670:
  3404     03CC  1FA7               	btfss	___awdiv@divisor+1,7
  3405     03CD  2BCF               	goto	u1491
  3406     03CE  2BD0               	goto	u1490
  3407     03CF                     u1491:
  3408     03CF  2BC1               	goto	l1666
  3409     03D0                     u1490:
  3410     03D0                     l1672:
  3411     03D0  3001               	movlw	1
  3412     03D1                     u1505:
  3413     03D1  1003               	clrc
  3414     03D2  0DAD               	rlf	___awdiv@quotient,f
  3415     03D3  0DAE               	rlf	___awdiv@quotient+1,f
  3416     03D4  3EFF               	addlw	-1
  3417     03D5  1D03               	skipz
  3418     03D6  2BD1               	goto	u1505
  3419     03D7  0827               	movf	___awdiv@divisor+1,w
  3420     03D8  0229               	subwf	___awdiv@dividend+1,w
  3421     03D9  1D03               	skipz
  3422     03DA  2BDD               	goto	u1515
  3423     03DB  0826               	movf	___awdiv@divisor,w
  3424     03DC  0228               	subwf	___awdiv@dividend,w
  3425     03DD                     u1515:
  3426     03DD  1C03               	skipc
  3427     03DE  2BE0               	goto	u1511
  3428     03DF  2BE1               	goto	u1510
  3429     03E0                     u1511:
  3430     03E0  2BE8               	goto	l1678
  3431     03E1                     u1510:
  3432     03E1                     l1674:
  3433     03E1  0826               	movf	___awdiv@divisor,w
  3434     03E2  02A8               	subwf	___awdiv@dividend,f
  3435     03E3  0827               	movf	___awdiv@divisor+1,w
  3436     03E4  1C03               	skipc
  3437     03E5  03A9               	decf	___awdiv@dividend+1,f
  3438     03E6  02A9               	subwf	___awdiv@dividend+1,f
  3439     03E7                     l1676:
  3440     03E7  142D               	bsf	___awdiv@quotient,0
  3441     03E8                     l1678:
  3442     03E8  3001               	movlw	1
  3443     03E9                     u1525:
  3444     03E9  1003               	clrc
  3445     03EA  0CA7               	rrf	___awdiv@divisor+1,f
  3446     03EB  0CA6               	rrf	___awdiv@divisor,f
  3447     03EC  3EFF               	addlw	-1
  3448     03ED  1D03               	skipz
  3449     03EE  2BE9               	goto	u1525
  3450     03EF                     l1680:
  3451     03EF  3001               	movlw	1
  3452     03F0  02AB               	subwf	___awdiv@counter,f
  3453     03F1  1D03               	btfss	3,2
  3454     03F2  2BF4               	goto	u1531
  3455     03F3  2BF5               	goto	u1530
  3456     03F4                     u1531:
  3457     03F4  2BD0               	goto	l1672
  3458     03F5                     u1530:
  3459     03F5                     l1682:
  3460     03F5  082C               	movf	___awdiv@sign,w
  3461     03F6  1903               	btfsc	3,2
  3462     03F7  2BF9               	goto	u1541
  3463     03F8  2BFA               	goto	u1540
  3464     03F9                     u1541:
  3465     03F9  2BFF               	goto	l1686
  3466     03FA                     u1540:
  3467     03FA                     l1684:
  3468     03FA  09AD               	comf	___awdiv@quotient,f
  3469     03FB  09AE               	comf	___awdiv@quotient+1,f
  3470     03FC  0AAD               	incf	___awdiv@quotient,f
  3471     03FD  1903               	skipnz
  3472     03FE  0AAE               	incf	___awdiv@quotient+1,f
  3473     03FF                     l1686:
  3474     03FF  082E               	movf	___awdiv@quotient+1,w
  3475     0400  00A7               	movwf	?___awdiv+1
  3476     0401  082D               	movf	___awdiv@quotient,w
  3477     0402  00A6               	movwf	?___awdiv
  3478     0403                     l493:
  3479     0403  0008               	return
  3480     0404                     __end_of___awdiv:
  3481                           
  3482                           	psect	text13
  3483     0F4E                     __ptext13:	
  3484 ;; *************** function _configpuertos *****************
  3485 ;; Defined at:
  3486 ;;		line 9 in file "confpuertos.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3500 ;;      Params:         0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 2
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514     0F4E                     _configpuertos:	
  3515                           ;psect for function _configpuertos
  3516                           
  3517     0F4E                     l1796:	
  3518                           ;incstack = 0
  3519                           ; Regs used in _configpuertos: [wreg+status,2]
  3520                           
  3521                           
  3522                           ;confpuertos.c: 11:     TRISB = 0b11000000;
  3523     0F4E  30C0               	movlw	192
  3524     0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  3525     0F50  1303               	bcf	3,6	;RP1=0, select bank1
  3526     0F51  0086               	movwf	6	;volatile
  3527                           
  3528                           ;confpuertos.c: 12:     PORTB = 0b11000000;
  3529     0F52  30C0               	movlw	192
  3530     0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3531     0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3532     0F55  0086               	movwf	6	;volatile
  3533     0F56                     l1798:
  3534                           
  3535                           ;confpuertos.c: 13:     INTCONbits.GIE = 1;
  3536     0F56  178B               	bsf	11,7	;volatile
  3537     0F57                     l1800:
  3538                           
  3539                           ;confpuertos.c: 14:     INTCONbits.RBIE = 1;
  3540     0F57  158B               	bsf	11,3	;volatile
  3541     0F58                     l1802:
  3542                           
  3543                           ;confpuertos.c: 15:     INTCONbits.RBIF = 0;
  3544     0F58  100B               	bcf	11,0	;volatile
  3545                           
  3546                           ;confpuertos.c: 16:     IOCB = 0b11000000;
  3547     0F59  30C0               	movlw	192
  3548     0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  3549     0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  3550     0F5C  0096               	movwf	22	;volatile
  3551                           
  3552                           ;confpuertos.c: 17:     WPUB = 0b11000000;
  3553     0F5D  30C0               	movlw	192
  3554     0F5E  0095               	movwf	21	;volatile
  3555     0F5F                     l1804:
  3556                           
  3557                           ;confpuertos.c: 18:     OPTION_REGbits.nRBPU = 0;
  3558     0F5F  1381               	bcf	1,7	;volatile
  3559     0F60                     l1806:
  3560                           
  3561                           ;confpuertos.c: 22:     TRISD = 0;
  3562     0F60  0188               	clrf	8	;volatile
  3563     0F61                     l1808:
  3564                           
  3565                           ;confpuertos.c: 23:     PORTD = 0;
  3566     0F61  1283               	bcf	3,5	;RP0=0, select bank0
  3567     0F62  1303               	bcf	3,6	;RP1=0, select bank0
  3568     0F63  0188               	clrf	8	;volatile
  3569     0F64                     l1810:
  3570                           
  3571                           ;confpuertos.c: 24:     TRISC = 0;
  3572     0F64  1683               	bsf	3,5	;RP0=1, select bank1
  3573     0F65  1303               	bcf	3,6	;RP1=0, select bank1
  3574     0F66  0187               	clrf	7	;volatile
  3575     0F67                     l1812:
  3576                           
  3577                           ;confpuertos.c: 25:     PORTC = 0;
  3578     0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3579     0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3580     0F69  0187               	clrf	7	;volatile
  3581     0F6A                     l193:
  3582     0F6A  0008               	return
  3583     0F6B                     __end_of_configpuertos:
  3584                           
  3585                           	psect	text14
  3586     0323                     __ptext14:	
  3587 ;; *************** function ___fltol *****************
  3588 ;; Defined at:
  3589 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  f1              4    6[BANK0 ] void 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  exp1            1   15[BANK0 ] unsigned char 
  3594 ;;  sign1           1   14[BANK0 ] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  4    6[BANK0 ] long 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       4       0       0       0
  3605 ;;      Locals:         0       2       0       0       0
  3606 ;;      Temps:          0       4       0       0       0
  3607 ;;      Totals:         0      10       0       0       0
  3608 ;;Total ram usage:       10 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 2
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618     0323                     ___fltol:	
  3619                           ;psect for function ___fltol
  3620                           
  3621     0323                     l1996:	
  3622                           ;incstack = 0
  3623                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3624                           
  3625     0323  1003               	clrc
  3626     0324  1283               	bcf	3,5	;RP0=0, select bank0
  3627     0325  1303               	bcf	3,6	;RP1=0, select bank0
  3628     0326  0D28               	rlf	___fltol@f1+2,w
  3629     0327  0D29               	rlf	___fltol@f1+3,w
  3630     0328  00AF               	movwf	___fltol@exp1
  3631     0329  082F               	movf	___fltol@exp1,w
  3632     032A  1D03               	btfss	3,2
  3633     032B  2B2D               	goto	u2091
  3634     032C  2B2E               	goto	u2090
  3635     032D                     u2091:
  3636     032D  2B37               	goto	l2002
  3637     032E                     u2090:
  3638     032E                     l1998:
  3639     032E  3000               	movlw	0
  3640     032F  00A9               	movwf	?___fltol+3
  3641     0330  3000               	movlw	0
  3642     0331  00A8               	movwf	?___fltol+2
  3643     0332  3000               	movlw	0
  3644     0333  00A7               	movwf	?___fltol+1
  3645     0334  3000               	movlw	0
  3646     0335  00A6               	movwf	?___fltol
  3647     0336  2B9A               	goto	l526
  3648     0337                     l2002:
  3649     0337  0826               	movf	___fltol@f1,w
  3650     0338  00AA               	movwf	??___fltol
  3651     0339  0827               	movf	___fltol@f1+1,w
  3652     033A  00AB               	movwf	??___fltol+1
  3653     033B  0828               	movf	___fltol@f1+2,w
  3654     033C  00AC               	movwf	??___fltol+2
  3655     033D  0829               	movf	___fltol@f1+3,w
  3656     033E  00AD               	movwf	??___fltol+3
  3657     033F  301F               	movlw	31
  3658     0340                     u2105:
  3659     0340  1003               	clrc
  3660     0341  0CAD               	rrf	??___fltol+3,f
  3661     0342  0CAC               	rrf	??___fltol+2,f
  3662     0343  0CAB               	rrf	??___fltol+1,f
  3663     0344  0CAA               	rrf	??___fltol,f
  3664     0345                     u2100:
  3665     0345  3EFF               	addlw	-1
  3666     0346  1D03               	skipz
  3667     0347  2B40               	goto	u2105
  3668     0348  082A               	movf	??___fltol,w
  3669     0349  00AE               	movwf	___fltol@sign1
  3670     034A                     l2004:
  3671     034A  17A8               	bsf	___fltol@f1+2,7
  3672     034B                     l2006:
  3673     034B  30FF               	movlw	255
  3674     034C  05A6               	andwf	___fltol@f1,f
  3675     034D  30FF               	movlw	255
  3676     034E  05A7               	andwf	___fltol@f1+1,f
  3677     034F  30FF               	movlw	255
  3678     0350  05A8               	andwf	___fltol@f1+2,f
  3679     0351  3000               	movlw	0
  3680     0352  05A9               	andwf	___fltol@f1+3,f
  3681     0353                     l2008:
  3682     0353  3096               	movlw	150
  3683     0354  02AF               	subwf	___fltol@exp1,f
  3684     0355                     l2010:
  3685     0355  1FAF               	btfss	___fltol@exp1,7
  3686     0356  2B58               	goto	u2111
  3687     0357  2B59               	goto	u2110
  3688     0358                     u2111:
  3689     0358  2B73               	goto	l2020
  3690     0359                     u2110:
  3691     0359                     l2012:
  3692     0359  082F               	movf	___fltol@exp1,w
  3693     035A  3A80               	xorlw	128
  3694     035B  3E97               	addlw	151
  3695     035C  1803               	skipnc
  3696     035D  2B5F               	goto	u2121
  3697     035E  2B60               	goto	u2120
  3698     035F                     u2121:
  3699     035F  2B61               	goto	l2018
  3700     0360                     u2120:
  3701     0360  2B2E               	goto	l1998
  3702     0361                     l2018:
  3703     0361  3001               	movlw	1
  3704     0362                     u2135:
  3705     0362  1003               	clrc
  3706     0363  0CA9               	rrf	___fltol@f1+3,f
  3707     0364  0CA8               	rrf	___fltol@f1+2,f
  3708     0365  0CA7               	rrf	___fltol@f1+1,f
  3709     0366  0CA6               	rrf	___fltol@f1,f
  3710     0367  3EFF               	addlw	-1
  3711     0368  1D03               	skipz
  3712     0369  2B62               	goto	u2135
  3713     036A  3001               	movlw	1
  3714     036B  00AA               	movwf	??___fltol
  3715     036C  082A               	movf	??___fltol,w
  3716     036D  07AF               	addwf	___fltol@exp1,f
  3717     036E  1D03               	btfss	3,2
  3718     036F  2B71               	goto	u2141
  3719     0370  2B72               	goto	u2140
  3720     0371                     u2141:
  3721     0371  2B61               	goto	l2018
  3722     0372                     u2140:
  3723     0372  2B8A               	goto	l2028
  3724     0373                     l2020:
  3725     0373  3020               	movlw	32
  3726     0374  022F               	subwf	___fltol@exp1,w
  3727     0375  1C03               	skipc
  3728     0376  2B78               	goto	u2151
  3729     0377  2B79               	goto	u2150
  3730     0378                     u2151:
  3731     0378  2B85               	goto	l533
  3732     0379                     u2150:
  3733     0379  2B2E               	goto	l1998
  3734     037A                     l2026:
  3735     037A  3001               	movlw	1
  3736     037B  00AA               	movwf	??___fltol
  3737     037C                     u2165:
  3738     037C  1003               	clrc
  3739     037D  0DA6               	rlf	___fltol@f1,f
  3740     037E  0DA7               	rlf	___fltol@f1+1,f
  3741     037F  0DA8               	rlf	___fltol@f1+2,f
  3742     0380  0DA9               	rlf	___fltol@f1+3,f
  3743     0381  0BAA               	decfsz	??___fltol,f
  3744     0382  2B7C               	goto	u2165
  3745     0383  3001               	movlw	1
  3746     0384  02AF               	subwf	___fltol@exp1,f
  3747     0385                     l533:
  3748     0385  082F               	movf	___fltol@exp1,w
  3749     0386  1D03               	btfss	3,2
  3750     0387  2B89               	goto	u2171
  3751     0388  2B8A               	goto	u2170
  3752     0389                     u2171:
  3753     0389  2B7A               	goto	l2026
  3754     038A                     u2170:
  3755     038A                     l2028:
  3756     038A  082E               	movf	___fltol@sign1,w
  3757     038B  1903               	btfsc	3,2
  3758     038C  2B8E               	goto	u2181
  3759     038D  2B8F               	goto	u2180
  3760     038E                     u2181:
  3761     038E  2B9A               	goto	l536
  3762     038F                     u2180:
  3763     038F                     l2030:
  3764     038F  09A6               	comf	___fltol@f1,f
  3765     0390  09A7               	comf	___fltol@f1+1,f
  3766     0391  09A8               	comf	___fltol@f1+2,f
  3767     0392  09A9               	comf	___fltol@f1+3,f
  3768     0393  0AA6               	incf	___fltol@f1,f
  3769     0394  1903               	skipnz
  3770     0395  0AA7               	incf	___fltol@f1+1,f
  3771     0396  1903               	skipnz
  3772     0397  0AA8               	incf	___fltol@f1+2,f
  3773     0398  1903               	skipnz
  3774     0399  0AA9               	incf	___fltol@f1+3,f
  3775     039A                     l536:
  3776     039A                     l526:
  3777     039A  0008               	return
  3778     039B                     __end_of___fltol:
  3779                           
  3780                           	psect	text15
  3781     07D6                     __ptext15:	
  3782 ;; *************** function _Lcd_Write_String *****************
  3783 ;; Defined at:
  3784 ;;		line 98 in file "LCD.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  a               1    wreg     PTR unsigned char 
  3787 ;;		 -> STR_1(15), 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  a               1   13[BANK0 ] PTR unsigned char 
  3790 ;;		 -> STR_1(15), 
  3791 ;;  i               2   11[BANK0 ] int 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         0       3       0       0       0
  3803 ;;      Temps:          0       0       0       0       0
  3804 ;;      Totals:         0       3       0       0       0
  3805 ;;Total ram usage:        3 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 4
  3808 ;; This function calls:
  3809 ;;		_Lcd_Write_Char
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815     07D6                     _Lcd_Write_String:	
  3816                           ;psect for function _Lcd_Write_String
  3817                           
  3818                           
  3819                           ;incstack = 0
  3820                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3821                           ;Lcd_Write_String@a stored from wreg
  3822     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3823     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3824     07D8  00AD               	movwf	Lcd_Write_String@a
  3825     07D9                     l1856:
  3826                           
  3827                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3828     07D9  01AB               	clrf	Lcd_Write_String@i
  3829     07DA  01AC               	clrf	Lcd_Write_String@i+1
  3830     07DB  2FF1               	goto	l1862
  3831     07DC                     l1858:
  3832                           
  3833                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3834     07DC  082B               	movf	Lcd_Write_String@i,w
  3835     07DD  072D               	addwf	Lcd_Write_String@a,w
  3836     07DE  0084               	movwf	4
  3837     07DF  120A  158A  2000  120A  118A  	fcall	stringdir
  3838     07E4  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  3839     07E9                     l1860:
  3840     07E9  3001               	movlw	1
  3841     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  3842     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  3843     07EC  07AB               	addwf	Lcd_Write_String@i,f
  3844     07ED  1803               	skipnc
  3845     07EE  0AAC               	incf	Lcd_Write_String@i+1,f
  3846     07EF  3000               	movlw	0
  3847     07F0  07AC               	addwf	Lcd_Write_String@i+1,f
  3848     07F1                     l1862:
  3849     07F1  082B               	movf	Lcd_Write_String@i,w
  3850     07F2  072D               	addwf	Lcd_Write_String@a,w
  3851     07F3  0084               	movwf	4
  3852     07F4  120A  158A  2000  120A  118A  	fcall	stringdir
  3853     07F9  3A00               	xorlw	0
  3854     07FA  1D03               	skipz
  3855     07FB  2FFD               	goto	u1921
  3856     07FC  2FFE               	goto	u1920
  3857     07FD                     u1921:
  3858     07FD  2FDC               	goto	l1858
  3859     07FE                     u1920:
  3860     07FE                     l164:
  3861     07FE  0008               	return
  3862     07FF                     __end_of_Lcd_Write_String:
  3863                           
  3864                           	psect	text16
  3865     0F8B                     __ptext16:	
  3866 ;; *************** function _Lcd_Write_Char *****************
  3867 ;; Defined at:
  3868 ;;		line 83 in file "LCD.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  a               1    wreg     unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  a               1   10[BANK0 ] unsigned char 
  3873 ;;  y               1    9[BANK0 ] unsigned char 
  3874 ;;  temp            1    8[BANK0 ] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0, pclath, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       0       0
  3885 ;;      Locals:         0       3       0       0       0
  3886 ;;      Temps:          0       1       0       0       0
  3887 ;;      Totals:         0       4       0       0       0
  3888 ;;Total ram usage:        4 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 3
  3891 ;; This function calls:
  3892 ;;		_Lcd_Port
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;;		_Lcd_Write_String
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899     0F8B                     _Lcd_Write_Char:	
  3900                           ;psect for function _Lcd_Write_Char
  3901                           
  3902                           
  3903                           ;incstack = 0
  3904                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3905                           ;Lcd_Write_Char@a stored from wreg
  3906     0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  3907     0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  3908     0F8D  00AA               	movwf	Lcd_Write_Char@a
  3909     0F8E                     l1562:
  3910                           
  3911                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3912     0F8E  082A               	movf	Lcd_Write_Char@a,w
  3913     0F8F  390F               	andlw	15
  3914     0F90  00A8               	movwf	Lcd_Write_Char@temp
  3915                           
  3916                           ;LCD.c: 86:     y = a & 0xF0;
  3917     0F91  082A               	movf	Lcd_Write_Char@a,w
  3918     0F92  39F0               	andlw	240
  3919     0F93  00A9               	movwf	Lcd_Write_Char@y
  3920     0F94                     l1564:
  3921                           
  3922                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3923     0F94  1508               	bsf	8,2	;volatile
  3924     0F95                     l1566:
  3925                           
  3926                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3927     0F95  0829               	movf	Lcd_Write_Char@y,w
  3928     0F96  00A7               	movwf	??_Lcd_Write_Char
  3929     0F97  3004               	movlw	4
  3930     0F98                     u1295:
  3931     0F98  1003               	clrc
  3932     0F99  0CA7               	rrf	??_Lcd_Write_Char,f
  3933     0F9A  3EFF               	addlw	-1
  3934     0F9B  1D03               	skipz
  3935     0F9C  2F98               	goto	u1295
  3936     0F9D  0827               	movf	??_Lcd_Write_Char,w
  3937     0F9E  120A  158A  276B  120A  158A  	fcall	_Lcd_Port
  3938     0FA3                     l1568:
  3939                           
  3940                           ;LCD.c: 89:     RD3 = 1;
  3941     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3942     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3943     0FA5  1588               	bsf	8,3	;volatile
  3944     0FA6                     l1570:
  3945                           
  3946                           ;LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3947     0FA6  300C               	movlw	12
  3948     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3949     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3950     0FA9  00A7               	movwf	??_Lcd_Write_Char
  3951     0FAA                     u2437:
  3952     0FAA  0BA7               	decfsz	??_Lcd_Write_Char,f
  3953     0FAB  2FAA               	goto	u2437
  3954     0FAC  0000               	nop
  3955     0FAD                     l1572:
  3956                           
  3957                           ;LCD.c: 91:     RD3 = 0;
  3958     0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3959     0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3960     0FAF  1188               	bcf	8,3	;volatile
  3961     0FB0                     l1574:
  3962                           
  3963                           ;LCD.c: 92:     Lcd_Port(temp);
  3964     0FB0  0828               	movf	Lcd_Write_Char@temp,w
  3965     0FB1  120A  158A  276B  120A  158A  	fcall	_Lcd_Port
  3966     0FB6                     l1576:
  3967                           
  3968                           ;LCD.c: 93:     RD3 = 1;
  3969     0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3970     0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  3971     0FB8  1588               	bsf	8,3	;volatile
  3972     0FB9                     l1578:
  3973                           
  3974                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3975     0FB9  300C               	movlw	12
  3976     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3977     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  3978     0FBC  00A7               	movwf	??_Lcd_Write_Char
  3979     0FBD                     u2447:
  3980     0FBD  0BA7               	decfsz	??_Lcd_Write_Char,f
  3981     0FBE  2FBD               	goto	u2447
  3982     0FBF  0000               	nop
  3983     0FC0                     l1580:
  3984                           
  3985                           ;LCD.c: 95:     RD3 = 0;
  3986     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  3987     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  3988     0FC2  1188               	bcf	8,3	;volatile
  3989     0FC3                     l158:
  3990     0FC3  0008               	return
  3991     0FC4                     __end_of_Lcd_Write_Char:
  3992                           
  3993                           	psect	text17
  3994     0637                     __ptext17:	
  3995 ;; *************** function _Lcd_Set_Cursor *****************
  3996 ;; Defined at:
  3997 ;;		line 48 in file "LCD.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  a               1    wreg     unsigned char 
  4000 ;;  b               1   10[BANK0 ] unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  a               1   12[BANK0 ] unsigned char 
  4003 ;;  temp            1   15[BANK0 ] unsigned char 
  4004 ;;  y               1   14[BANK0 ] unsigned char 
  4005 ;;  z               1   13[BANK0 ] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       1       0       0       0
  4016 ;;      Locals:         0       4       0       0       0
  4017 ;;      Temps:          0       1       0       0       0
  4018 ;;      Totals:         0       6       0       0       0
  4019 ;;Total ram usage:        6 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 4
  4022 ;; This function calls:
  4023 ;;		_Lcd_Cmd
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029     0637                     _Lcd_Set_Cursor:	
  4030                           ;psect for function _Lcd_Set_Cursor
  4031                           
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4035                           ;Lcd_Set_Cursor@a stored from wreg
  4036     0637  1283               	bcf	3,5	;RP0=0, select bank0
  4037     0638  1303               	bcf	3,6	;RP1=0, select bank0
  4038     0639  00AC               	movwf	Lcd_Set_Cursor@a
  4039     063A                     l1836:
  4040                           
  4041                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4042     063A  032C               	decf	Lcd_Set_Cursor@a,w
  4043     063B  1D03               	btfss	3,2
  4044     063C  2E3E               	goto	u1881
  4045     063D  2E3F               	goto	u1880
  4046     063E                     u1881:
  4047     063E  2E5E               	goto	l1846
  4048     063F                     u1880:
  4049     063F                     l1838:
  4050                           
  4051                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4052     063F  082A               	movf	Lcd_Set_Cursor@b,w
  4053     0640  3E7F               	addlw	127
  4054     0641  00AF               	movwf	Lcd_Set_Cursor@temp
  4055                           
  4056                           ;LCD.c: 52:         z = temp >> 4;
  4057     0642  082F               	movf	Lcd_Set_Cursor@temp,w
  4058     0643  00AB               	movwf	??_Lcd_Set_Cursor
  4059     0644  3004               	movlw	4
  4060     0645                     u1895:
  4061     0645  1003               	clrc
  4062     0646  0CAB               	rrf	??_Lcd_Set_Cursor,f
  4063     0647  3EFF               	addlw	-1
  4064     0648  1D03               	skipz
  4065     0649  2E45               	goto	u1895
  4066     064A  082B               	movf	??_Lcd_Set_Cursor,w
  4067     064B  00AD               	movwf	Lcd_Set_Cursor@z
  4068     064C                     l1840:
  4069                           
  4070                           ;LCD.c: 53:         y = temp & 0x0F;
  4071     064C  082F               	movf	Lcd_Set_Cursor@temp,w
  4072     064D  390F               	andlw	15
  4073     064E  00AE               	movwf	Lcd_Set_Cursor@y
  4074     064F                     l1842:
  4075                           
  4076                           ;LCD.c: 54:         Lcd_Cmd(z);
  4077     064F  082D               	movf	Lcd_Set_Cursor@z,w
  4078     0650  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4079     0655                     l1844:
  4080                           
  4081                           ;LCD.c: 55:         Lcd_Cmd(y);
  4082     0655  1283               	bcf	3,5	;RP0=0, select bank0
  4083     0656  1303               	bcf	3,6	;RP1=0, select bank0
  4084     0657  082E               	movf	Lcd_Set_Cursor@y,w
  4085     0658  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4086                           
  4087                           ;LCD.c: 56:     } else if (a == 2) {
  4088     065D  2E82               	goto	l152
  4089     065E                     l1846:
  4090     065E  3002               	movlw	2
  4091     065F  062C               	xorwf	Lcd_Set_Cursor@a,w
  4092     0660  1D03               	btfss	3,2
  4093     0661  2E63               	goto	u1901
  4094     0662  2E64               	goto	u1900
  4095     0663                     u1901:
  4096     0663  2E82               	goto	l152
  4097     0664                     u1900:
  4098     0664                     l1848:
  4099                           
  4100                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4101     0664  082A               	movf	Lcd_Set_Cursor@b,w
  4102     0665  3EBF               	addlw	191
  4103     0666  00AF               	movwf	Lcd_Set_Cursor@temp
  4104                           
  4105                           ;LCD.c: 58:         z = temp >> 4;
  4106     0667  082F               	movf	Lcd_Set_Cursor@temp,w
  4107     0668  00AB               	movwf	??_Lcd_Set_Cursor
  4108     0669  3004               	movlw	4
  4109     066A                     u1915:
  4110     066A  1003               	clrc
  4111     066B  0CAB               	rrf	??_Lcd_Set_Cursor,f
  4112     066C  3EFF               	addlw	-1
  4113     066D  1D03               	skipz
  4114     066E  2E6A               	goto	u1915
  4115     066F  082B               	movf	??_Lcd_Set_Cursor,w
  4116     0670  00AD               	movwf	Lcd_Set_Cursor@z
  4117     0671                     l1850:
  4118                           
  4119                           ;LCD.c: 59:         y = temp & 0x0F;
  4120     0671  082F               	movf	Lcd_Set_Cursor@temp,w
  4121     0672  390F               	andlw	15
  4122     0673  00AE               	movwf	Lcd_Set_Cursor@y
  4123     0674                     l1852:
  4124                           
  4125                           ;LCD.c: 60:         Lcd_Cmd(z);
  4126     0674  082D               	movf	Lcd_Set_Cursor@z,w
  4127     0675  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4128     067A                     l1854:
  4129                           
  4130                           ;LCD.c: 61:         Lcd_Cmd(y);
  4131     067A  1283               	bcf	3,5	;RP0=0, select bank0
  4132     067B  1303               	bcf	3,6	;RP1=0, select bank0
  4133     067C  082E               	movf	Lcd_Set_Cursor@y,w
  4134     067D  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4135     0682                     l152:
  4136     0682  0008               	return
  4137     0683                     __end_of_Lcd_Set_Cursor:
  4138                           
  4139                           	psect	text18
  4140     04CF                     __ptext18:	
  4141 ;; *************** function _Lcd_Init *****************
  4142 ;; Defined at:
  4143 ;;		line 65 in file "LCD.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0
  4159 ;;      Temps:          0       2       0       0       0
  4160 ;;      Totals:         0       2       0       0       0
  4161 ;;Total ram usage:        2 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 4
  4164 ;; This function calls:
  4165 ;;		_Lcd_Cmd
  4166 ;;		_Lcd_Port
  4167 ;; This function is called by:
  4168 ;;		_main
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172     04CF                     _Lcd_Init:	
  4173                           ;psect for function _Lcd_Init
  4174                           
  4175     04CF                     l1824:	
  4176                           ;incstack = 0
  4177                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4178                           
  4179                           
  4180                           ;LCD.c: 66:     Lcd_Port(0x00);
  4181     04CF  3000               	movlw	0
  4182     04D0  120A  158A  276B  120A  118A  	fcall	_Lcd_Port
  4183     04D5                     l1826:
  4184                           
  4185                           ;LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4186     04D5  301A               	movlw	26
  4187     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  4188     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  4189     04D8  00AB               	movwf	??_Lcd_Init+1
  4190     04D9  30F7               	movlw	247
  4191     04DA  00AA               	movwf	??_Lcd_Init
  4192     04DB                     u2457:
  4193     04DB  0BAA               	decfsz	??_Lcd_Init,f
  4194     04DC  2CDB               	goto	u2457
  4195     04DD  0BAB               	decfsz	??_Lcd_Init+1,f
  4196     04DE  2CDB               	goto	u2457
  4197     04DF  2CE0               	nop2
  4198     04E0                     l1828:
  4199                           
  4200                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4201     04E0  3003               	movlw	3
  4202     04E1  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4203                           
  4204                           ;LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4205     04E6  3007               	movlw	7
  4206     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  4207     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  4208     04E9  00AB               	movwf	??_Lcd_Init+1
  4209     04EA  307C               	movlw	124
  4210     04EB  00AA               	movwf	??_Lcd_Init
  4211     04EC                     u2467:
  4212     04EC  0BAA               	decfsz	??_Lcd_Init,f
  4213     04ED  2CEC               	goto	u2467
  4214     04EE  0BAB               	decfsz	??_Lcd_Init+1,f
  4215     04EF  2CEC               	goto	u2467
  4216     04F0  0000               	nop
  4217     04F1                     l1830:
  4218                           
  4219                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4220     04F1  3003               	movlw	3
  4221     04F2  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4222     04F7                     l1832:
  4223                           
  4224                           ;LCD.c: 71:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4225     04F7  300F               	movlw	15
  4226     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  4227     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  4228     04FA  00AB               	movwf	??_Lcd_Init+1
  4229     04FB  3047               	movlw	71
  4230     04FC  00AA               	movwf	??_Lcd_Init
  4231     04FD                     u2477:
  4232     04FD  0BAA               	decfsz	??_Lcd_Init,f
  4233     04FE  2CFD               	goto	u2477
  4234     04FF  0BAB               	decfsz	??_Lcd_Init+1,f
  4235     0500  2CFD               	goto	u2477
  4236                           
  4237                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4238     0501  3003               	movlw	3
  4239     0502  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4240                           
  4241                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4242     0507  3002               	movlw	2
  4243     0508  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4244                           
  4245                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  4246     050D  3002               	movlw	2
  4247     050E  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4248                           
  4249                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  4250     0513  3008               	movlw	8
  4251     0514  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4252                           
  4253                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  4254     0519  3000               	movlw	0
  4255     051A  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4256                           
  4257                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  4258     051F  300C               	movlw	12
  4259     0520  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4260                           
  4261                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  4262     0525  3000               	movlw	0
  4263     0526  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4264                           
  4265                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  4266     052B  3006               	movlw	6
  4267     052C  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  4268     0531                     l155:
  4269     0531  0008               	return
  4270     0532                     __end_of_Lcd_Init:
  4271                           
  4272                           	psect	text19
  4273     0F25                     __ptext19:	
  4274 ;; *************** function _Lcd_Clear *****************
  4275 ;; Defined at:
  4276 ;;		line 43 in file "LCD.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;		None
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0, pclath, cstack
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4290 ;;      Params:         0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0
  4293 ;;      Totals:         0       0       0       0       0
  4294 ;;Total ram usage:        0 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; Hardware stack levels required when called: 4
  4297 ;; This function calls:
  4298 ;;		_Lcd_Cmd
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304     0F25                     _Lcd_Clear:	
  4305                           ;psect for function _Lcd_Clear
  4306                           
  4307     0F25                     l1834:	
  4308                           ;incstack = 0
  4309                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4310                           
  4311                           
  4312                           ;LCD.c: 44:     Lcd_Cmd(0);
  4313     0F25  3000               	movlw	0
  4314     0F26  120A  158A  2732  120A  158A  	fcall	_Lcd_Cmd
  4315                           
  4316                           ;LCD.c: 45:     Lcd_Cmd(1);
  4317     0F2B  3001               	movlw	1
  4318     0F2C  120A  158A  2732  120A  158A  	fcall	_Lcd_Cmd
  4319     0F31                     l146:
  4320     0F31  0008               	return
  4321     0F32                     __end_of_Lcd_Clear:
  4322                           
  4323                           	psect	text20
  4324     0F32                     __ptext20:	
  4325 ;; *************** function _Lcd_Cmd *****************
  4326 ;; Defined at:
  4327 ;;		line 35 in file "LCD.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  a               1    wreg     unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  a               1    9[BANK0 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0, pclath, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4341 ;;      Params:         0       0       0       0       0
  4342 ;;      Locals:         0       1       0       0       0
  4343 ;;      Temps:          0       2       0       0       0
  4344 ;;      Totals:         0       3       0       0       0
  4345 ;;Total ram usage:        3 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 3
  4348 ;; This function calls:
  4349 ;;		_Lcd_Port
  4350 ;; This function is called by:
  4351 ;;		_Lcd_Clear
  4352 ;;		_Lcd_Set_Cursor
  4353 ;;		_Lcd_Init
  4354 ;;		_Lcd_Shift_Right
  4355 ;;		_Lcd_Shift_Left
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359     0F32                     _Lcd_Cmd:	
  4360                           ;psect for function _Lcd_Cmd
  4361                           
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4365                           ;Lcd_Cmd@a stored from wreg
  4366     0F32  1283               	bcf	3,5	;RP0=0, select bank0
  4367     0F33  1303               	bcf	3,6	;RP1=0, select bank0
  4368     0F34  00A9               	movwf	Lcd_Cmd@a
  4369     0F35                     l1582:
  4370                           
  4371                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4372     0F35  1108               	bcf	8,2	;volatile
  4373     0F36                     l1584:
  4374                           
  4375                           ;LCD.c: 37:     Lcd_Port(a);
  4376     0F36  0829               	movf	Lcd_Cmd@a,w
  4377     0F37  120A  158A  276B  120A  158A  	fcall	_Lcd_Port
  4378     0F3C                     l1586:
  4379                           
  4380                           ;LCD.c: 38:     RD3 = 1;
  4381     0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  4382     0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  4383     0F3E  1588               	bsf	8,3	;volatile
  4384     0F3F                     l1588:
  4385                           
  4386                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4387     0F3F  3006               	movlw	6
  4388     0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4389     0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4390     0F42  00A8               	movwf	??_Lcd_Cmd+1
  4391     0F43  302F               	movlw	47
  4392     0F44  00A7               	movwf	??_Lcd_Cmd
  4393     0F45                     u2487:
  4394     0F45  0BA7               	decfsz	??_Lcd_Cmd,f
  4395     0F46  2F45               	goto	u2487
  4396     0F47  0BA8               	decfsz	??_Lcd_Cmd+1,f
  4397     0F48  2F45               	goto	u2487
  4398     0F49  2F4A               	nop2
  4399     0F4A                     l1590:
  4400                           
  4401                           ;LCD.c: 40:     RD3 = 0;
  4402     0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  4403     0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  4404     0F4C  1188               	bcf	8,3	;volatile
  4405     0F4D                     l143:
  4406     0F4D  0008               	return
  4407     0F4E                     __end_of_Lcd_Cmd:
  4408                           
  4409                           	psect	text21
  4410     0F6B                     __ptext21:	
  4411 ;; *************** function _Lcd_Port *****************
  4412 ;; Defined at:
  4413 ;;		line 13 in file "LCD.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  a               1    wreg     unsigned char 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  a               1    6[BANK0 ] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4427 ;;      Params:         0       0       0       0       0
  4428 ;;      Locals:         0       1       0       0       0
  4429 ;;      Temps:          0       0       0       0       0
  4430 ;;      Totals:         0       1       0       0       0
  4431 ;;Total ram usage:        1 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 2
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_Lcd_Cmd
  4438 ;;		_Lcd_Init
  4439 ;;		_Lcd_Write_Char
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443     0F6B                     _Lcd_Port:	
  4444                           ;psect for function _Lcd_Port
  4445                           
  4446                           
  4447                           ;incstack = 0
  4448                           ; Regs used in _Lcd_Port: [wreg]
  4449                           ;Lcd_Port@a stored from wreg
  4450     0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  4451     0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  4452     0F6D  00A6               	movwf	Lcd_Port@a
  4453     0F6E                     l1552:
  4454                           
  4455                           ;LCD.c: 14:     if (a & 1)
  4456     0F6E  1C26               	btfss	Lcd_Port@a,0
  4457     0F6F  2F71               	goto	u1251
  4458     0F70  2F72               	goto	u1250
  4459     0F71                     u1251:
  4460     0F71  2F74               	goto	l132
  4461     0F72                     u1250:
  4462     0F72                     l1554:
  4463                           
  4464                           ;LCD.c: 15:         RD4 = 1;
  4465     0F72  1608               	bsf	8,4	;volatile
  4466     0F73  2F75               	goto	l133
  4467     0F74                     l132:	
  4468                           ;LCD.c: 16:     else
  4469                           
  4470                           
  4471                           ;LCD.c: 17:         RD4 = 0;
  4472     0F74  1208               	bcf	8,4	;volatile
  4473     0F75                     l133:
  4474                           
  4475                           ;LCD.c: 19:     if (a & 2)
  4476     0F75  1CA6               	btfss	Lcd_Port@a,1
  4477     0F76  2F78               	goto	u1261
  4478     0F77  2F79               	goto	u1260
  4479     0F78                     u1261:
  4480     0F78  2F7B               	goto	l134
  4481     0F79                     u1260:
  4482     0F79                     l1556:
  4483                           
  4484                           ;LCD.c: 20:         RD5 = 1;
  4485     0F79  1688               	bsf	8,5	;volatile
  4486     0F7A  2F7C               	goto	l135
  4487     0F7B                     l134:	
  4488                           ;LCD.c: 21:     else
  4489                           
  4490                           
  4491                           ;LCD.c: 22:         RD5 = 0;
  4492     0F7B  1288               	bcf	8,5	;volatile
  4493     0F7C                     l135:
  4494                           
  4495                           ;LCD.c: 24:     if (a & 4)
  4496     0F7C  1D26               	btfss	Lcd_Port@a,2
  4497     0F7D  2F7F               	goto	u1271
  4498     0F7E  2F80               	goto	u1270
  4499     0F7F                     u1271:
  4500     0F7F  2F82               	goto	l136
  4501     0F80                     u1270:
  4502     0F80                     l1558:
  4503                           
  4504                           ;LCD.c: 25:         RD6 = 1;
  4505     0F80  1708               	bsf	8,6	;volatile
  4506     0F81  2F83               	goto	l137
  4507     0F82                     l136:	
  4508                           ;LCD.c: 26:     else
  4509                           
  4510                           
  4511                           ;LCD.c: 27:         RD6 = 0;
  4512     0F82  1308               	bcf	8,6	;volatile
  4513     0F83                     l137:
  4514                           
  4515                           ;LCD.c: 29:     if (a & 8)
  4516     0F83  1DA6               	btfss	Lcd_Port@a,3
  4517     0F84  2F86               	goto	u1281
  4518     0F85  2F87               	goto	u1280
  4519     0F86                     u1281:
  4520     0F86  2F89               	goto	l138
  4521     0F87                     u1280:
  4522     0F87                     l1560:
  4523                           
  4524                           ;LCD.c: 30:         RD7 = 1;
  4525     0F87  1788               	bsf	8,7	;volatile
  4526     0F88  2F8A               	goto	l140
  4527     0F89                     l138:	
  4528                           ;LCD.c: 31:     else
  4529                           
  4530                           
  4531                           ;LCD.c: 32:         RD7 = 0;
  4532     0F89  1388               	bcf	8,7	;volatile
  4533     0F8A                     l140:
  4534     0F8A  0008               	return
  4535     0F8B                     __end_of_Lcd_Port:
  4536                           
  4537                           	psect	text22
  4538     058D                     __ptext22:	
  4539 ;; *************** function _isr *****************
  4540 ;; Defined at:
  4541 ;;		line 55 in file "main.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, pclath, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4555 ;;      Params:         0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0
  4557 ;;      Temps:          0       6       0       0       0
  4558 ;;      Totals:         0       6       0       0       0
  4559 ;;Total ram usage:        6 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 1
  4562 ;; This function calls:
  4563 ;;		___xxtofl
  4564 ;; This function is called by:
  4565 ;;		Interrupt level 1
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569     058D                     _isr:	
  4570                           ;psect for function _isr
  4571                           
  4572     058D                     i1l2076:
  4573                           
  4574                           ;main.c: 57:     if(INTCONbits.RBIF){
  4575     058D  1C0B               	btfss	11,0	;volatile
  4576     058E  2D90               	goto	u233_21
  4577     058F  2D91               	goto	u233_20
  4578     0590                     u233_21:
  4579     0590  2DA2               	goto	i1l2088
  4580     0591                     u233_20:
  4581     0591                     i1l2078:
  4582                           
  4583                           ;main.c: 58:         if(PORTBbits.RB7 == 0){
  4584     0591  1B86               	btfsc	6,7	;volatile
  4585     0592  2D94               	goto	u234_21
  4586     0593  2D95               	goto	u234_20
  4587     0594                     u234_21:
  4588     0594  2D99               	goto	i1l2082
  4589     0595                     u234_20:
  4590     0595                     i1l2080:
  4591                           
  4592                           ;main.c: 59:             cont = 1;
  4593     0595  3001               	movlw	1
  4594     0596  00D2               	movwf	_cont
  4595     0597  3000               	movlw	0
  4596     0598  00D3               	movwf	_cont+1
  4597     0599                     i1l2082:
  4598                           
  4599                           ;main.c: 61:         if(PORTBbits.RB6 == 0){
  4600     0599  1B06               	btfsc	6,6	;volatile
  4601     059A  2D9C               	goto	u235_21
  4602     059B  2D9D               	goto	u235_20
  4603     059C                     u235_21:
  4604     059C  2DA1               	goto	i1l2086
  4605     059D                     u235_20:
  4606     059D                     i1l2084:
  4607                           
  4608                           ;main.c: 62:             cont = 2;
  4609     059D  3002               	movlw	2
  4610     059E  00D2               	movwf	_cont
  4611     059F  3000               	movlw	0
  4612     05A0  00D3               	movwf	_cont+1
  4613     05A1                     i1l2086:
  4614                           
  4615                           ;main.c: 64:         INTCONbits.RBIF = 0;
  4616     05A1  100B               	bcf	11,0	;volatile
  4617     05A2                     i1l2088:
  4618                           
  4619                           ;main.c: 67:     if(PIR1bits.ADIF){
  4620     05A2  1F0C               	btfss	12,6	;volatile
  4621     05A3  2DA5               	goto	u236_21
  4622     05A4  2DA6               	goto	u236_20
  4623     05A5                     u236_21:
  4624     05A5  2DDE               	goto	i1l64
  4625     05A6                     u236_20:
  4626     05A6                     i1l2090:
  4627                           
  4628                           ;main.c: 68:         if(ADCON0bits.CHS == 0){
  4629     05A6  0C1F               	rrf	31,w	;volatile
  4630     05A7  00A0               	movwf	??_isr
  4631     05A8  0C20               	rrf	??_isr,w
  4632     05A9  390F               	andlw	15
  4633     05AA  3A00               	xorlw	0
  4634     05AB  1D03               	skipz
  4635     05AC  2DAE               	goto	u237_21
  4636     05AD  2DAF               	goto	u237_20
  4637     05AE                     u237_21:
  4638     05AE  2DCD               	goto	i1l2094
  4639     05AF                     u237_20:
  4640     05AF                     i1l2092:
  4641                           
  4642                           ;main.c: 69:             lecADC0 = ADRESH;
  4643     05AF  081E               	movf	30,w	;volatile
  4644     05B0  00A0               	movwf	??_isr
  4645     05B1  01A1               	clrf	??_isr+1
  4646     05B2  01A2               	clrf	??_isr+2
  4647     05B3  01A3               	clrf	??_isr+3
  4648     05B4  0823               	movf	??_isr+3,w
  4649     05B5  00F3               	movwf	___xxtofl@val+3
  4650     05B6  0822               	movf	??_isr+2,w
  4651     05B7  00F2               	movwf	___xxtofl@val+2
  4652     05B8  0821               	movf	??_isr+1,w
  4653     05B9  00F1               	movwf	___xxtofl@val+1
  4654     05BA  0820               	movf	??_isr,w
  4655     05BB  00F0               	movwf	___xxtofl@val
  4656     05BC  3000               	movlw	0
  4657     05BD  120A  118A  21CE  120A  118A  	fcall	___xxtofl
  4658     05C2  0873               	movf	?___xxtofl+3,w
  4659     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4660     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  4661     05C5  00D1               	movwf	_lecADC0+3
  4662     05C6  0872               	movf	?___xxtofl+2,w
  4663     05C7  00D0               	movwf	_lecADC0+2
  4664     05C8  0871               	movf	?___xxtofl+1,w
  4665     05C9  00CF               	movwf	_lecADC0+1
  4666     05CA  0870               	movf	?___xxtofl,w
  4667     05CB  00CE               	movwf	_lecADC0
  4668                           
  4669                           ;main.c: 70:         }
  4670     05CC  2DDD               	goto	i1l2098
  4671     05CD                     i1l2094:
  4672     05CD  0C1F               	rrf	31,w	;volatile
  4673     05CE  00A0               	movwf	??_isr
  4674     05CF  0C20               	rrf	??_isr,w
  4675     05D0  390F               	andlw	15
  4676     05D1  3A01               	xorlw	1
  4677     05D2  1D03               	skipz
  4678     05D3  2DD5               	goto	u238_21
  4679     05D4  2DD6               	goto	u238_20
  4680     05D5                     u238_21:
  4681     05D5  2DDD               	goto	i1l2098
  4682     05D6                     u238_20:
  4683     05D6                     i1l2096:
  4684                           
  4685                           ;main.c: 72:             lecADC1 = ADRESH;
  4686     05D6  081E               	movf	30,w	;volatile
  4687     05D7  00A0               	movwf	??_isr
  4688     05D8  01A1               	clrf	??_isr+1
  4689     05D9  0820               	movf	??_isr,w
  4690     05DA  00D8               	movwf	_lecADC1
  4691     05DB  0821               	movf	??_isr+1,w
  4692     05DC  00D9               	movwf	_lecADC1+1
  4693     05DD                     i1l2098:
  4694                           
  4695                           ;main.c: 74:         ADIF = 0;
  4696     05DD  130C               	bcf	12,6	;volatile
  4697     05DE                     i1l64:
  4698     05DE  0825               	movf	??_isr+5,w
  4699     05DF  008A               	movwf	10
  4700     05E0  0E24               	swapf	??_isr+4,w
  4701     05E1  0083               	movwf	3
  4702     05E2  0EFE               	swapf	btemp,f
  4703     05E3  0E7E               	swapf	btemp,w
  4704     05E4  0009               	retfie
  4705     05E5                     __end_of_isr:
  4706                           
  4707                           	psect	intentry
  4708     0004                     __pintentry:	
  4709                           ;incstack = 0
  4710                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4711                           
  4712     0004                     interrupt_function:
  4713     007E                     saved_w	set	btemp
  4714     0004  00FE               	movwf	btemp
  4715     0005  0E03               	swapf	3,w
  4716     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4717     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4718     0008  00A4               	movwf	??_isr+4
  4719     0009  080A               	movf	10,w
  4720     000A  00A5               	movwf	??_isr+5
  4721     000B  120A  118A  2D8D   	ljmp	_isr
  4722                           
  4723                           	psect	text23
  4724     01CE                     __ptext23:	
  4725 ;; *************** function ___xxtofl *****************
  4726 ;; Defined at:
  4727 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  sign            1    wreg     unsigned char 
  4730 ;;  val             4    0[COMMON] long 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  sign            1    8[COMMON] unsigned char 
  4733 ;;  arg             4   10[COMMON] unsigned long 
  4734 ;;  exp             1    9[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4    0[COMMON] unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         4       0       0       0       0
  4745 ;;      Locals:         6       0       0       0       0
  4746 ;;      Temps:          4       0       0       0       0
  4747 ;;      Totals:        14       0       0       0       0
  4748 ;;Total ram usage:       14 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_isr
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757     01CE                     ___xxtofl:	
  4758                           ;psect for function ___xxtofl
  4759                           
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4763                           ;___xxtofl@sign stored from wreg
  4764     01CE  00F8               	movwf	___xxtofl@sign
  4765     01CF                     i1l2032:
  4766     01CF  0878               	movf	___xxtofl@sign,w
  4767     01D0  1903               	btfsc	3,2
  4768     01D1  29D3               	goto	u219_21
  4769     01D2  29D4               	goto	u219_20
  4770     01D3                     u219_21:
  4771     01D3  29E8               	goto	i1l2038
  4772     01D4                     u219_20:
  4773     01D4                     i1l2034:
  4774     01D4  1FF3               	btfss	___xxtofl@val+3,7
  4775     01D5  29D7               	goto	u220_21
  4776     01D6  29D8               	goto	u220_20
  4777     01D7                     u220_21:
  4778     01D7  29E8               	goto	i1l2038
  4779     01D8                     u220_20:
  4780     01D8                     i1l2036:
  4781     01D8  0970               	comf	___xxtofl@val,w
  4782     01D9  00FA               	movwf	___xxtofl@arg
  4783     01DA  0971               	comf	___xxtofl@val+1,w
  4784     01DB  00FB               	movwf	___xxtofl@arg+1
  4785     01DC  0972               	comf	___xxtofl@val+2,w
  4786     01DD  00FC               	movwf	___xxtofl@arg+2
  4787     01DE  0973               	comf	___xxtofl@val+3,w
  4788     01DF  00FD               	movwf	___xxtofl@arg+3
  4789     01E0  0AFA               	incf	___xxtofl@arg,f
  4790     01E1  1903               	skipnz
  4791     01E2  0AFB               	incf	___xxtofl@arg+1,f
  4792     01E3  1903               	skipnz
  4793     01E4  0AFC               	incf	___xxtofl@arg+2,f
  4794     01E5  1903               	skipnz
  4795     01E6  0AFD               	incf	___xxtofl@arg+3,f
  4796     01E7  29F0               	goto	i1l773
  4797     01E8                     i1l2038:
  4798     01E8  0873               	movf	___xxtofl@val+3,w
  4799     01E9  00FD               	movwf	___xxtofl@arg+3
  4800     01EA  0872               	movf	___xxtofl@val+2,w
  4801     01EB  00FC               	movwf	___xxtofl@arg+2
  4802     01EC  0871               	movf	___xxtofl@val+1,w
  4803     01ED  00FB               	movwf	___xxtofl@arg+1
  4804     01EE  0870               	movf	___xxtofl@val,w
  4805     01EF  00FA               	movwf	___xxtofl@arg
  4806     01F0                     i1l773:
  4807     01F0  0873               	movf	___xxtofl@val+3,w
  4808     01F1  0472               	iorwf	___xxtofl@val+2,w
  4809     01F2  0471               	iorwf	___xxtofl@val+1,w
  4810     01F3  0470               	iorwf	___xxtofl@val,w
  4811     01F4  1D03               	skipz
  4812     01F5  29F7               	goto	u221_21
  4813     01F6  29F8               	goto	u221_20
  4814     01F7                     u221_21:
  4815     01F7  2A01               	goto	i1l2044
  4816     01F8                     u221_20:
  4817     01F8                     i1l2040:
  4818     01F8  3000               	movlw	0
  4819     01F9  00F3               	movwf	?___xxtofl+3
  4820     01FA  3000               	movlw	0
  4821     01FB  00F2               	movwf	?___xxtofl+2
  4822     01FC  3000               	movlw	0
  4823     01FD  00F1               	movwf	?___xxtofl+1
  4824     01FE  3000               	movlw	0
  4825     01FF  00F0               	movwf	?___xxtofl
  4826     0200  2A85               	goto	i1l775
  4827     0201                     i1l2044:
  4828     0201  3096               	movlw	150
  4829     0202  00F9               	movwf	___xxtofl@exp
  4830     0203  2A11               	goto	i1l2048
  4831     0204                     i1l2046:
  4832     0204  3001               	movlw	1
  4833     0205  00F4               	movwf	??___xxtofl
  4834     0206  0874               	movf	??___xxtofl,w
  4835     0207  07F9               	addwf	___xxtofl@exp,f
  4836     0208  3001               	movlw	1
  4837     0209                     u222_25:
  4838     0209  1003               	clrc
  4839     020A  0CFD               	rrf	___xxtofl@arg+3,f
  4840     020B  0CFC               	rrf	___xxtofl@arg+2,f
  4841     020C  0CFB               	rrf	___xxtofl@arg+1,f
  4842     020D  0CFA               	rrf	___xxtofl@arg,f
  4843     020E  3EFF               	addlw	-1
  4844     020F  1D03               	skipz
  4845     0210  2A09               	goto	u222_25
  4846     0211                     i1l2048:
  4847     0211  30FE               	movlw	254
  4848     0212  057D               	andwf	___xxtofl@arg+3,w
  4849     0213  1D03               	btfss	3,2
  4850     0214  2A16               	goto	u223_21
  4851     0215  2A17               	goto	u223_20
  4852     0216                     u223_21:
  4853     0216  2A04               	goto	i1l2046
  4854     0217                     u223_20:
  4855     0217  2A33               	goto	i1l779
  4856     0218                     i1l2050:
  4857     0218  3001               	movlw	1
  4858     0219  00F4               	movwf	??___xxtofl
  4859     021A  0874               	movf	??___xxtofl,w
  4860     021B  07F9               	addwf	___xxtofl@exp,f
  4861     021C                     i1l2052:
  4862     021C  3001               	movlw	1
  4863     021D  07FA               	addwf	___xxtofl@arg,f
  4864     021E  3000               	movlw	0
  4865     021F  1803               	skipnc
  4866     0220  3001               	movlw	1
  4867     0221  07FB               	addwf	___xxtofl@arg+1,f
  4868     0222  3000               	movlw	0
  4869     0223  1803               	skipnc
  4870     0224  3001               	movlw	1
  4871     0225  07FC               	addwf	___xxtofl@arg+2,f
  4872     0226  3000               	movlw	0
  4873     0227  1803               	skipnc
  4874     0228  3001               	movlw	1
  4875     0229  07FD               	addwf	___xxtofl@arg+3,f
  4876     022A                     i1l2054:
  4877     022A  3001               	movlw	1
  4878     022B                     u224_25:
  4879     022B  1003               	clrc
  4880     022C  0CFD               	rrf	___xxtofl@arg+3,f
  4881     022D  0CFC               	rrf	___xxtofl@arg+2,f
  4882     022E  0CFB               	rrf	___xxtofl@arg+1,f
  4883     022F  0CFA               	rrf	___xxtofl@arg,f
  4884     0230  3EFF               	addlw	-1
  4885     0231  1D03               	skipz
  4886     0232  2A2B               	goto	u224_25
  4887     0233                     i1l779:
  4888     0233  30FF               	movlw	255
  4889     0234  057D               	andwf	___xxtofl@arg+3,w
  4890     0235  1D03               	btfss	3,2
  4891     0236  2A38               	goto	u225_21
  4892     0237  2A39               	goto	u225_20
  4893     0238                     u225_21:
  4894     0238  2A18               	goto	i1l2050
  4895     0239                     u225_20:
  4896     0239  2A45               	goto	i1l2058
  4897     023A                     i1l2056:
  4898     023A  3001               	movlw	1
  4899     023B  02F9               	subwf	___xxtofl@exp,f
  4900     023C  3001               	movlw	1
  4901     023D  00F4               	movwf	??___xxtofl
  4902     023E                     u226_25:
  4903     023E  1003               	clrc
  4904     023F  0DFA               	rlf	___xxtofl@arg,f
  4905     0240  0DFB               	rlf	___xxtofl@arg+1,f
  4906     0241  0DFC               	rlf	___xxtofl@arg+2,f
  4907     0242  0DFD               	rlf	___xxtofl@arg+3,f
  4908     0243  0BF4               	decfsz	??___xxtofl,f
  4909     0244  2A3E               	goto	u226_25
  4910     0245                     i1l2058:
  4911     0245  1BFC               	btfsc	___xxtofl@arg+2,7
  4912     0246  2A48               	goto	u227_21
  4913     0247  2A49               	goto	u227_20
  4914     0248                     u227_21:
  4915     0248  2A4F               	goto	i1l786
  4916     0249                     u227_20:
  4917     0249                     i1l2060:
  4918     0249  3002               	movlw	2
  4919     024A  0279               	subwf	___xxtofl@exp,w
  4920     024B  1803               	skipnc
  4921     024C  2A4E               	goto	u228_21
  4922     024D  2A4F               	goto	u228_20
  4923     024E                     u228_21:
  4924     024E  2A3A               	goto	i1l2056
  4925     024F                     u228_20:
  4926     024F                     i1l786:
  4927     024F  1879               	btfsc	___xxtofl@exp,0
  4928     0250  2A52               	goto	u229_21
  4929     0251  2A53               	goto	u229_20
  4930     0252                     u229_21:
  4931     0252  2A5B               	goto	i1l787
  4932     0253                     u229_20:
  4933     0253                     i1l2062:
  4934     0253  30FF               	movlw	255
  4935     0254  05FA               	andwf	___xxtofl@arg,f
  4936     0255  30FF               	movlw	255
  4937     0256  05FB               	andwf	___xxtofl@arg+1,f
  4938     0257  307F               	movlw	127
  4939     0258  05FC               	andwf	___xxtofl@arg+2,f
  4940     0259  30FF               	movlw	255
  4941     025A  05FD               	andwf	___xxtofl@arg+3,f
  4942     025B                     i1l787:
  4943     025B  1003               	clrc
  4944     025C  0CF9               	rrf	___xxtofl@exp,f
  4945     025D                     i1l2064:
  4946     025D  0879               	movf	___xxtofl@exp,w
  4947     025E  00F4               	movwf	??___xxtofl
  4948     025F  01F5               	clrf	??___xxtofl+1
  4949     0260  01F6               	clrf	??___xxtofl+2
  4950     0261  01F7               	clrf	??___xxtofl+3
  4951     0262  3018               	movlw	24
  4952     0263                     u230_25:
  4953     0263  1003               	clrc
  4954     0264  0DF4               	rlf	??___xxtofl,f
  4955     0265  0DF5               	rlf	??___xxtofl+1,f
  4956     0266  0DF6               	rlf	??___xxtofl+2,f
  4957     0267  0DF7               	rlf	??___xxtofl+3,f
  4958     0268                     u230_20:
  4959     0268  3EFF               	addlw	-1
  4960     0269  1D03               	skipz
  4961     026A  2A63               	goto	u230_25
  4962     026B  0874               	movf	??___xxtofl,w
  4963     026C  04FA               	iorwf	___xxtofl@arg,f
  4964     026D  0875               	movf	??___xxtofl+1,w
  4965     026E  04FB               	iorwf	___xxtofl@arg+1,f
  4966     026F  0876               	movf	??___xxtofl+2,w
  4967     0270  04FC               	iorwf	___xxtofl@arg+2,f
  4968     0271  0877               	movf	??___xxtofl+3,w
  4969     0272  04FD               	iorwf	___xxtofl@arg+3,f
  4970     0273                     i1l2066:
  4971     0273  0878               	movf	___xxtofl@sign,w
  4972     0274  1903               	btfsc	3,2
  4973     0275  2A77               	goto	u231_21
  4974     0276  2A78               	goto	u231_20
  4975     0277                     u231_21:
  4976     0277  2A7D               	goto	i1l2072
  4977     0278                     u231_20:
  4978     0278                     i1l2068:
  4979     0278  1FF3               	btfss	___xxtofl@val+3,7
  4980     0279  2A7B               	goto	u232_21
  4981     027A  2A7C               	goto	u232_20
  4982     027B                     u232_21:
  4983     027B  2A7D               	goto	i1l2072
  4984     027C                     u232_20:
  4985     027C                     i1l2070:
  4986     027C  17FD               	bsf	___xxtofl@arg+3,7
  4987     027D                     i1l2072:
  4988     027D  087D               	movf	___xxtofl@arg+3,w
  4989     027E  00F3               	movwf	?___xxtofl+3
  4990     027F  087C               	movf	___xxtofl@arg+2,w
  4991     0280  00F2               	movwf	?___xxtofl+2
  4992     0281  087B               	movf	___xxtofl@arg+1,w
  4993     0282  00F1               	movwf	?___xxtofl+1
  4994     0283  087A               	movf	___xxtofl@arg,w
  4995     0284  00F0               	movwf	?___xxtofl
  4996     0285                     i1l775:
  4997     0285  0008               	return
  4998     0286                     __end_of___xxtofl:
  4999     007E                     btemp	set	126	;btemp
  5000     007E                     wtemp0	set	126
  5001                           
  5002                           	psect	idloc
  5003                           
  5004                           ;Config register IDLOC0 @ 0x2000
  5005                           ;	unspecified, using default values
  5006     2000                     	org	8192
  5007     2000  3FFF               	dw	16383
  5008                           
  5009                           ;Config register IDLOC1 @ 0x2001
  5010                           ;	unspecified, using default values
  5011     2001                     	org	8193
  5012     2001  3FFF               	dw	16383
  5013                           
  5014                           ;Config register IDLOC2 @ 0x2002
  5015                           ;	unspecified, using default values
  5016     2002                     	org	8194
  5017     2002  3FFF               	dw	16383
  5018                           
  5019                           ;Config register IDLOC3 @ 0x2003
  5020                           ;	unspecified, using default values
  5021     2003                     	org	8195
  5022     2003  3FFF               	dw	16383
  5023                           
  5024                           	psect	config
  5025                           
  5026                           ;Config register CONFIG1 @ 0x2007
  5027                           ;	Oscillator Selection bits
  5028                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5029                           ;	Watchdog Timer Enable bit
  5030                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5031                           ;	Power-up Timer Enable bit
  5032                           ;	PWRTE = OFF, PWRT disabled
  5033                           ;	RE3/MCLR pin function select bit
  5034                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5035                           ;	Code Protection bit
  5036                           ;	CP = OFF, Program memory code protection is disabled
  5037                           ;	Data Code Protection bit
  5038                           ;	CPD = OFF, Data memory code protection is disabled
  5039                           ;	Brown Out Reset Selection bits
  5040                           ;	BOREN = OFF, BOR disabled
  5041                           ;	Internal External Switchover bit
  5042                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5043                           ;	Fail-Safe Clock Monitor Enabled bit
  5044                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5045                           ;	Low Voltage Programming Enable bit
  5046                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5047                           ;	In-Circuit Debugger Mode bit
  5048                           ;	DEBUG = 0x1, unprogramme  5049     2007                     	org	8199
  5050     2007  20D4               	dw	8404
  5051                           
  5052                           ;Config register CONFIG2 @ 0x2008
  5053                           ;	Brown-out Reset Selection bit
  5054                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5055                           ;	Flash Program Memory Self Write Enable bits
  5056                           ;	WRT = OFF, Write protection off
  5057     2008                     	org	8200
  5058     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl

Critical Paths under _main in BANK0

    _main->_mapeo
    _mapeo->___aldiv
    ___aldiv->___lmul
    _descomponer->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7161
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fltol
                      _configpuertos
                        _descomponer
                         _iniciarADC
                          _inttochar
                              _mapeo
                        _setupINTOSC
                          _setup_ADC
 ---------------------------------------------------------------------------------
 (1) _setup_ADC                                            3     1      2     142
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mapeo                                               12     7      5    1459
                                             34 BANK0     12     7      5
                            ___aldiv
                            ___fltol (ARG)
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             19 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _inttochar                                            1     1      0     220
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _iniciarADC                                           3     1      2     218
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _descomponer                                          9     5      4    2638
                                             15 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              6 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _configpuertos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              6 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                             11 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              7 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1216
                                             10 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             10 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              7 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0     398
                                              0 BANK0      6     6      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___fltol
   _configpuertos
   _descomponer
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _iniciarADC
   _inttochar
   _mapeo
     ___aldiv
       ___lmul (ARG)
     ___fltol (ARG)
     ___lmul (ARG)
   _setupINTOSC
   _setup_ADC

 _isr (ROOT)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3D       5       76.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 27 03:23:47 2023

                       pc 0002                        l80 0438                        l81 0445  
                      l82 0452                        l83 045E                        l85 046B  
                      l77 0411                        l78 041E                        l79 042B  
            ___awdiv@sign 002C            ?_configpuertos 0070                        fsr 0004  
          mapeo@resultado 004B                       l200 0636                       l106 0765  
                     l115 07D5                       l107 0772                       l140 0F8A  
                     l132 0F74                       l108 077F                       l133 0F75  
                     l213 0636                       l109 0797                       l134 0F7B  
                     l222 04CE                       l135 0F7C                       l143 0F4D  
                     l136 0F82                       l152 0682                       l137 0F83  
                     l138 0F89                       l146 0F31                       l155 0531  
                     l164 07FE                       l405 029A                       l158 0FC3  
                     l254 0711                       l415 0322                       l193 0F6A  
                     l506 058C                       l354 06CA                       l612 0757  
                     l533 0385                       l526 039A                       l622 0FFF  
                     l536 039A                       l493 0403                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       _isr 058D                       fsr0 0004  
            ___awmod@sign 002C              ___fltol@exp1 002F                      l2010 0355  
                    l2002 0337                      l2012 0359                      l2020 0373  
                    l2004 034A                      l2100 0026                      l2030 038F  
                    l2006 034B                      l2110 009A                      l2102 0050  
                    l2008 0353                      l2120 00D1                      l2112 00A2  
                    l2104 0056                      l2026 037A                      l2018 0361  
                    l2130 0107                      l2122 00D9                      l2114 00AA  
                    l2106 0060                      l2028 038A                      l2140 014D  
                    l2132 0111                      l2124 00E1                      l2116 00B4  
                    l2108 0085                      l2150 0184                      l2142 0155  
                    l2134 0117                      l2126 00F7                      l2118 00BA  
                    l1600 06B1                      l2160 01BA                      l2152 018C  
                    l2144 015D                      l2136 0122                      l2128 00FF  
                    l1610 028D                      l1602 06C2                      l2162 01C4  
                    l2154 0194                      l2146 0167                      l2138 0138  
                    l1700 0544                      l1620 02BD                      l1612 029E  
                    l2156 01AA                      l2148 016D                      l1710 055D  
                    l1702 0549                      l1630 02EC                      l1622 02C0  
                    l1614 02A9                      l1606 0286                      l2158 01B2  
                    l1560 0F87                      l1552 0F6E                      l1800 0F57  
                    l1712 0561                      l1704 054F                      l1720 057E  
                    l1640 030F                      l1632 02FA                      l1624 02CD  
                    l1616 02AD                      l1608 0289                      l1554 0F72  
                    l1570 0FA6                      l1562 0F8E                      l1810 0F64  
                    l1802 0F58                      l1650 03A2                      l1722 0583  
                    l1714 056B                      l1706 0552                      l1730 0716  
                    l1642 031A                      l1634 02FB                      l1626 02D1  
                    l1618 02B5                      l1556 0F79                      l1580 0FC0  
                    l1572 0FAD                      l1564 0F94                      l1812 0F67  
                    l1804 0F5F                      l1660 03B6                      l1652 03A7  
                    l1724 0588                      l1716 0571                      l1708 0559  
                    l1740 072E                      l1732 071C                      l1636 0304  
                    l1628 02DA                      l1820 0778                      l1558 0F80  
                    l1590 0F4A                      l1582 0F35                      l1830 04F1  
                    l1574 0FB0                      l1566 0F95                      l1806 0F60  
                    l1670 03CC                      l1662 03B8                      l1654 03A9  
                    l1646 039B                      l1718 0578                      l1742 073F  
                    l1734 071F                      l1750 0753                      l1638 030A  
                    l1822 0790                      l1814 0758                      l1584 0F36  
                    l1832 04F7                      l1824 04CF                      l1840 064C  
                    l1576 0FB6                      l1568 0FA3                      l1808 0F61  
                    l1680 03EF                      l1672 03D0                      l1664 03BE  
                    l1656 03AD                      l1648 039E                      l1744 0745  
                    l1736 0726                      l1728 0712                      l1760 0FD6  
                    l1912 04C7                      l1904 04AD                      l1920 05ED  
                    l1592 0683                      l1816 075E                      l1586 0F3C  
                    l1834 0F25                      l1826 04D5                      l1850 0671  
                    l1842 064F                      l1578 0FB9                      l1674 03E1  
                    l1666 03C1                      l1682 03F5                      l1658 03B2  
                    l1690 0532                      l1746 0746                      l1738 072A  
                    l1770 0FF5                      l1762 0FDA                      l1754 0FC4  
                    l1914 04CD                      l1906 04B3                      l1594 068D  
                    l1818 076B                      l1588 0F3F                      l1828 04E0  
                    l1852 0674                      l1844 0655                      l1836 063A  
                    l1860 07E9                      l1684 03FA                      l1676 03E7  
                    l1668 03C8                      l1692 0535                      l1748 074D  
                    l1764 0FDE                      l1756 0FCC                      l1772 0FFB  
                    l1596 0691                      l1780 0418                      l1854 067A  
                    l1838 063F                      l1846 065E                      l1862 07F1  
                    l1686 03FF                      l1678 03E8                      l1694 0539  
                    l1766 0FE8                      l1758 0FCF                      l1870 07A9  
                    l1950 0606                      l1942 05FE                      l1934 05F6  
                    l1926 05EF                      l1918 05E8                      l1598 06A8  
                    l1790 0458                      l1782 0425                      l1848 0664  
                    l1856 07D9                      l1696 053E                      l1768 0FEE  
                    l1880 07C0                      l1872 07AC                      l1864 0798  
                    l1960 0614                      l1952 060C                      l1944 0604  
                    l1936 05FC                      l1928 05F4                      l1792 0464  
                    l1784 0432                      l1776 0407                      l1858 07DC  
                    l1698 0540                      l1882 07C7                      l1874 07B2  
                    l1866 07A0                      l1890 070D                      l1794 0468  
                    l1786 043F                      l1778 040D                      l1796 0F4E  
                    l1884 07CB                      l1876 07B6                      l1868 07A2  
                    l1788 044C                      l1798 0F56                      l1894 046C  
                    l1886 07D2                      l1878 07BD                      l1990 062E  
                    l1982 0626                      l1974 061E                      l1966 0616  
                    l1958 060E                      l1896 04A4                      l1992 0634  
                    l1984 062C                      l1976 0624                      l1968 061C  
                    l1888 06CE                      l1898 04AB                      l1996 0323  
                    l1998 032E                      _ADIF 0066                      ?_isr 0070  
                    STR_1 0806                      u2000 05F4                      u2001 05F3  
                    u2010 05FC                      u2011 05FB                      u2100 0345  
                    u2020 0604                      u1300 0691                      u2021 0603  
                    u1301 0690                      u2110 0359                      u2030 060C  
                    u2111 0358                      u2031 060B                      u1311 069A  
                    u2120 0360                      u2040 0614                      u1312 06A1  
                    u2121 035F                      u2105 0340                      u2041 0613  
                    u1313 06A8                      u1250 0F72                      u2050 061C  
                    u1410 02EC                      u1251 0F71                      u2051 061B  
                    u1411 02EB                      u1260 0F79                      u2140 0372  
                    u2060 0624                      u1340 06C2                      _IOCB 0096  
                    u1261 0F78                      u2141 0371                      u2061 0623  
                    u1405 02D3                      u1341 06C1                      u1325 06AA  
                    u1270 0F80                      u2150 0379                      u1510 03E1  
                    u2070 062C                      u1430 030A                      u1350 028D  
                    u1271 0F7F                      u2151 0378                      u2135 0362  
                    u1511 03E0                      u2071 062B                      u1431 0309  
                    u1415 02E8                      u1351 028C                      u1335 06B2  
                    u1280 0F87                      u1600 056B                      u2080 0634  
                    u1440 030F                      u1360 029E                      u1281 0F86  
                    u1505 03D1                      u1601 056A                      u2081 0633  
                    u1441 030E                      u1425 02FC                      u1361 029D  
                    u2170 038A                      u2090 032E                      u1530 03F5  
                    u1450 03A2                      u1370 02BD                      u2171 0389  
                    u2091 032D                      u1531 03F4                      u1515 03DD  
                    u1451 03A1                      u1371 02BC                      u2180 038F  
                    u1540 03FA                      u1460 03AD                      u1620 057E  
                    u1700 0753                      u2181 038E                      u2165 037C  
                    u1541 03F9                      u1525 03E9                      u1461 03AC  
                    u1621 057D                      u1605 0567                      u1701 0752  
                    u1470 03BE                      u1630 0583                      u1550 0539  
                    u1710 0FCC                      u1390 02D1                      u1295 0F98  
                    u1471 03BD                      u1631 0582                      u1615 0572  
                    u1551 0538                      u1711 0FCB                      u2407 07A6  
                    u1391 02D0                      u1560 0544                      u1640 071C  
                    u1800 0432                      u1561 0543                      u1641 071B  
                    u2417 07BA                      u1385 02C2                      u1801 0431  
                    u1490 03D0                      u1570 054F                      u1730 0FDE  
                    u1810 043F                      u1491 03CF                      u1571 054E  
                    u1731 0FDD                      u2427 07CF                      u1811 043E  
                    u1900 0664                      u1660 072E                      u1740 0FE8  
                    u1820 044C                      u1901 0663                      u2437 0FAA  
                    u1485 03C2                      u1661 072D                      u1741 0FE7  
                    u1725 0FD0                      u1821 044B                      u1590 0561  
                    u1830 0458                      u2447 0FBD                      u1591 0560  
                    u1655 0720                      u1831 0457                      u1920 07FE  
                    u1680 073F                      u1760 0FFB                      u1840 0464  
                    u2457 04DB                      u1921 07FD                      u1585 0553  
                    u1681 073E                      u1761 0FFA                      u1745 0FE4  
                    u1841 0463                      u1930 07A0                      u1770 040D  
                    u1850 075E                      u2467 04EC                      u1915 066A  
                    u1675 072F                      u1755 0FEF                      u1931 079F  
                    u1771 040C                      u1851 075D                      u1940 07B2  
                    u1780 0418                      u1860 076B                      u2477 04FD  
                    u1685 073B                      u1941 07B1                      u1781 0417  
                    u2397 0794                      u1861 076A                      u1950 07C7  
                    u1790 0425                      u1870 0778                      u2487 0F45  
                    u1695 0747                      u1951 07C6                      u1791 0424  
                    u1871 0777                      u1880 063F                      u1960 04AB  
                    u1881 063E                      u1961 04AA                      u1970 04B3  
                    u1971 04B2                      u1980 04CD                      u1981 04CC  
                    u1990 05ED                      u1895 0645                      u1991 05EC  
                    i1l64 05DE                      _WPUB 0095         ?_Lcd_Write_String 0070  
                    _cont 0052                      _main 0026                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 002B           __end_of_Lcd_Cmd 0F4E  
                   ??_isr 0020             ___fltol@sign1 002E           __end_of___aldiv 0323  
                   ?_main 0070           __end_of___awdiv 0404           __end_of___awmod 058D  
         __end_of___fltol 039B           ___awdiv@divisor 0026           __end_of___lwdiv 0758  
         __end_of___lwmod 1000                     i1l773 01F0                     i1l775 0285  
                   i1l786 024F                     i1l787 025B                     i1l779 0233  
         ___awdiv@counter 002B                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088       ___lmul@multiplicand 002A                     _mapeo 06CB  
                   pclath 000A                     status 0003                     wtemp0 007E  
             mapeo@outmax 0045               mapeo@outmin 0044          __end_of_Lcd_Init 0532  
        __end_of_Lcd_Port 0F8B           __initialization 0011              __end_of_main 01CE  
         ??_configpuertos 0026                    ??_main 004E                    ?_mapeo 0042  
                  _ADRESH 001E          ___awdiv@dividend 0028                    i1l2040 01F8  
                  i1l2032 01CF                    i1l2050 0218                    i1l2034 01D4  
                  i1l2060 0249                    i1l2052 021C                    i1l2044 0201  
                  i1l2036 01D8                    i1l2070 027C                    i1l2062 0253  
                  i1l2054 022A                    i1l2046 0204                    i1l2038 01E8  
                  i1l2072 027D                    i1l2064 025D                    i1l2056 023A  
                  i1l2048 0211                    i1l2080 0595                    i1l2066 0273  
                  i1l2058 0245                    i1l2090 05A6                    i1l2082 0599  
                  i1l2068 0278                    i1l2092 05AF                    i1l2084 059D  
                  i1l2076 058D                    i1l2094 05CD                    i1l2086 05A1  
                  i1l2078 0591                    i1l2096 05D6                    i1l2088 05A2  
                  i1l2098 05DD                    u220_20 01D8                    u220_21 01D7  
                  u221_20 01F8                    u221_21 01F7                    u230_20 0268  
                  u230_25 0263                    u222_25 0209                    u231_20 0278  
                  u223_20 0217                    u231_21 0277                    u223_21 0216  
                  u232_20 027C                    u232_21 027B                    u224_25 022B  
                  u225_20 0239                    u233_20 0591                    u225_21 0238  
                  u233_21 0590                    u234_20 0595                    u234_21 0594  
                  u226_25 023E                    u227_20 0249                    u219_20 01D4  
                  u235_20 059D                    u227_21 0248                    u219_21 01D3  
                  u235_21 059C                    u228_20 024F                    u236_20 05A6  
                  u228_21 024E                    u236_21 05A5                    u229_20 0253  
                  u237_20 05AF                    u229_21 0252                    u237_21 05AE  
                  u238_20 05D6                    u238_21 05D5                 ??_Lcd_Cmd 0027  
        __end_of___xxtofl 0286                    ___lmul 0683                 ??___aldiv 003B  
               ??___awdiv 002A                 ??___awmod 002A                 ??___fltol 002A  
               ??___lwdiv 002A                 ??___lwmod 002A          ___awdiv@quotient 002D  
         ___awmod@divisor 0026           ___awmod@counter 002B              ?_setupINTOSC 0070  
                  saved_w 007E           Lcd_Set_Cursor@a 002C           Lcd_Set_Cursor@b 002A  
         Lcd_Set_Cursor@y 002E           Lcd_Set_Cursor@z 002D              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070   __end_of__initialization 0022  
       __end_of_Lcd_Clear 0F32                ___fltol@f1 0026           descomponer@cent 0035  
          __pcstackCOMMON 0070             __end_of_mapeo 0712            _Lcd_Set_Cursor 0637  
          _OPTION_REGbits 0081                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_mapeo 0047                __pbssBANK0 004E         iniciarADC@channel 0026  
              __pmaintext 0026                   ?___lmul 0026                _centesimas 005A  
              __pintentry 0004            ___lmul@product 002F    __end_of_Lcd_Set_Cursor 0683  
               ?___xxtofl 0070                ??_Lcd_Init 002A                ??_Lcd_Port 0026  
              __stringtab 0800            _Lcd_Write_Char 0F8B                   _Lcd_Cmd 0F32  
              _iniciarADC 0798                   ___aldiv 0286                   ___awdiv 039B  
                 ___awmod 0532                   ___fltol 0323                   ___lwdiv 0712  
                 ___lwmod 0FC4                   _lecADC0 004E                   _lecADC1 0058  
                 _decimas 005B                 _ANSELbits 0188           ?_Lcd_Set_Cursor 002A  
                 __ptext1 0758                   __ptext2 0404                   __ptext3 06CB  
                 __ptext4 0683                   __ptext5 0286                   __ptext6 05E5  
                 __ptext7 0798                   __ptext8 046C                   __ptext9 0FC4  
                 _valADC0 0056                   _valADC1 0054                ??___xxtofl 0074  
        ___awmod@dividend 0028          ___aldiv@dividend 0037         __end_of_inttochar 0637  
  __end_of_Lcd_Write_Char 0FC4      end_of_initialization 0022         __end_of_setup_ADC 0798  
        ___aldiv@quotient 003E                 Lcd_Port@a 0026     __end_of_configpuertos 0F6B  
               _PORTAbits 0005                 _PORTBbits 0006                 _PORTDbits 0008  
           ??_descomponer 0033             ___xxtofl@sign 0078                 _TRISAbits 0085  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 002D         Lcd_Write_String@i 002B  
             ?_iniciarADC 0026                 _Lcd_Clear 0F25            __end_of___lmul 06CB  
        _Lcd_Write_String 07D6                mapeo@inmax 0043                mapeo@inmin 0042  
     start_initialization 0011                mapeo@valor 004D               __end_of_isr 05E5  
     __end_of_descomponer 04CF                ?_Lcd_Clear 0070                  ??___lmul 002E  
         Lcd_Write_Char@a 002A           Lcd_Write_Char@y 0029                 ___latbits 0002  
          descomponer@dec 0037             __pcstackBANK0 0020            descomponer@num 0031  
          descomponer@pos 002F            descomponer@uni 0036           setupINTOSC@IRCF 0026  
                ?_Lcd_Cmd 0070          ___lwdiv@dividend 0028          ??_Lcd_Set_Cursor 002B  
                ?___aldiv 0033              inttochar@num 0026                  ?___awdiv 0026  
                ?___awmod 0026                  ?___fltol 0026                  ?___lwdiv 0026  
                ?___lwmod 0026                 __pstrings 0800               _descomponer 046C  
        ___lwdiv@quotient 002B           ___aldiv@divisor 0033         interrupt_function 0004  
         ___aldiv@counter 003C                 _inttochar 05E5                  _PIE1bits 008C  
                Lcd_Cmd@a 0029                  _PIR1bits 000C               ??_Lcd_Clear 002A  
               _setup_ADC 0758                _ADCON0bits 001F               __stringbase 0805  
              _ADCON1bits 009F             ??_setupINTOSC 0026          ??_Lcd_Write_Char 0027  
                _Lcd_Init 04CF                  _Lcd_Port 0F6B         ___lmul@multiplier 0026  
__end_of_Lcd_Write_String 07FF                ?_inttochar 0070              ??_iniciarADC 0028  
              ?_setup_ADC 0026        __end_of__stringtab 0806                  ___xxtofl 01CE  
         ___lwdiv@divisor 0026           ___lwdiv@counter 002D        __end_of_iniciarADC 07D6  
                __ptext10 0712                  __ptext11 0532                  __ptext20 0F32  
                __ptext12 039B                  __ptext21 0F6B                  __ptext13 0F4E  
                __ptext22 058D                  __ptext14 0323                  __ptext23 01CE  
                __ptext15 07D6                  __ptext16 0F8B                  __ptext17 0637  
                __ptext18 04CF                  __ptext19 0F25       __end_of_setupINTOSC 046C  
                _unidades 005C                _INTCONbits 000B        Lcd_Write_Char@temp 0028  
                intlevel1 0000          ___lwmod@dividend 0028               ??_inttochar 0026  
               stringcode 0800                _OSCCONbits 008F               ??_setup_ADC 0028  
      Lcd_Set_Cursor@temp 002F             _configpuertos 0F4E               _setupINTOSC 0404  
           setup_ADC@chan 0026              ?_descomponer 002F           ___lwmod@divisor 0026  
         ___lwmod@counter 002B                  stringdir 0800                  stringtab 0800  
            ___aldiv@sign 003D  
