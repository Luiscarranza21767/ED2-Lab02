

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 27 03:28:51 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385     0000                     	;# 
   386     0001                     	;# 
   387     0002                     	;# 
   388     0003                     	;# 
   389     0004                     	;# 
   390     0005                     	;# 
   391     0006                     	;# 
   392     0007                     	;# 
   393     0008                     	;# 
   394     0009                     	;# 
   395     000A                     	;# 
   396     000B                     	;# 
   397     000C                     	;# 
   398     000D                     	;# 
   399     000E                     	;# 
   400     000E                     	;# 
   401     000F                     	;# 
   402     0010                     	;# 
   403     0011                     	;# 
   404     0012                     	;# 
   405     0013                     	;# 
   406     0014                     	;# 
   407     0015                     	;# 
   408     0015                     	;# 
   409     0016                     	;# 
   410     0017                     	;# 
   411     0018                     	;# 
   412     0019                     	;# 
   413     001A                     	;# 
   414     001B                     	;# 
   415     001B                     	;# 
   416     001C                     	;# 
   417     001D                     	;# 
   418     001E                     	;# 
   419     001F                     	;# 
   420     0081                     	;# 
   421     0085                     	;# 
   422     0086                     	;# 
   423     0087                     	;# 
   424     0088                     	;# 
   425     0089                     	;# 
   426     008C                     	;# 
   427     008D                     	;# 
   428     008E                     	;# 
   429     008F                     	;# 
   430     0090                     	;# 
   431     0091                     	;# 
   432     0092                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0093                     	;# 
   436     0094                     	;# 
   437     0095                     	;# 
   438     0096                     	;# 
   439     0097                     	;# 
   440     0098                     	;# 
   441     0099                     	;# 
   442     009A                     	;# 
   443     009B                     	;# 
   444     009C                     	;# 
   445     009D                     	;# 
   446     009E                     	;# 
   447     009F                     	;# 
   448     0105                     	;# 
   449     0107                     	;# 
   450     0108                     	;# 
   451     0109                     	;# 
   452     010C                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     010E                     	;# 
   456     010F                     	;# 
   457     0185                     	;# 
   458     0187                     	;# 
   459     0188                     	;# 
   460     0189                     	;# 
   461     018C                     	;# 
   462     018D                     	;# 
   463     0000                     	;# 
   464     0001                     	;# 
   465     0002                     	;# 
   466     0003                     	;# 
   467     0004                     	;# 
   468     0005                     	;# 
   469     0006                     	;# 
   470     0007                     	;# 
   471     0008                     	;# 
   472     0009                     	;# 
   473     000A                     	;# 
   474     000B                     	;# 
   475     000C                     	;# 
   476     000D                     	;# 
   477     000E                     	;# 
   478     000E                     	;# 
   479     000F                     	;# 
   480     0010                     	;# 
   481     0011                     	;# 
   482     0012                     	;# 
   483     0013                     	;# 
   484     0014                     	;# 
   485     0015                     	;# 
   486     0015                     	;# 
   487     0016                     	;# 
   488     0017                     	;# 
   489     0018                     	;# 
   490     0019                     	;# 
   491     001A                     	;# 
   492     001B                     	;# 
   493     001B                     	;# 
   494     001C                     	;# 
   495     001D                     	;# 
   496     001E                     	;# 
   497     001F                     	;# 
   498     0081                     	;# 
   499     0085                     	;# 
   500     0086                     	;# 
   501     0087                     	;# 
   502     0088                     	;# 
   503     0089                     	;# 
   504     008C                     	;# 
   505     008D                     	;# 
   506     008E                     	;# 
   507     008F                     	;# 
   508     0090                     	;# 
   509     0091                     	;# 
   510     0092                     	;# 
   511     0093                     	;# 
   512     0093                     	;# 
   513     0093                     	;# 
   514     0094                     	;# 
   515     0095                     	;# 
   516     0096                     	;# 
   517     0097                     	;# 
   518     0098                     	;# 
   519     0099                     	;# 
   520     009A                     	;# 
   521     009B                     	;# 
   522     009C                     	;# 
   523     009D                     	;# 
   524     009E                     	;# 
   525     009F                     	;# 
   526     0105                     	;# 
   527     0107                     	;# 
   528     0108                     	;# 
   529     0109                     	;# 
   530     010C                     	;# 
   531     010C                     	;# 
   532     010D                     	;# 
   533     010E                     	;# 
   534     010F                     	;# 
   535     0185                     	;# 
   536     0187                     	;# 
   537     0188                     	;# 
   538     0189                     	;# 
   539     018C                     	;# 
   540     018D                     	;# 
   541     0000                     	;# 
   542     0001                     	;# 
   543     0002                     	;# 
   544     0003                     	;# 
   545     0004                     	;# 
   546     0005                     	;# 
   547     0006                     	;# 
   548     0007                     	;# 
   549     0008                     	;# 
   550     0009                     	;# 
   551     000A                     	;# 
   552     000B                     	;# 
   553     000C                     	;# 
   554     000D                     	;# 
   555     000E                     	;# 
   556     000E                     	;# 
   557     000F                     	;# 
   558     0010                     	;# 
   559     0011                     	;# 
   560     0012                     	;# 
   561     0013                     	;# 
   562     0014                     	;# 
   563     0015                     	;# 
   564     0015                     	;# 
   565     0016                     	;# 
   566     0017                     	;# 
   567     0018                     	;# 
   568     0019                     	;# 
   569     001A                     	;# 
   570     001B                     	;# 
   571     001B                     	;# 
   572     001C                     	;# 
   573     001D                     	;# 
   574     001E                     	;# 
   575     001F                     	;# 
   576     0081                     	;# 
   577     0085                     	;# 
   578     0086                     	;# 
   579     0087                     	;# 
   580     0088                     	;# 
   581     0089                     	;# 
   582     008C                     	;# 
   583     008D                     	;# 
   584     008E                     	;# 
   585     008F                     	;# 
   586     0090                     	;# 
   587     0091                     	;# 
   588     0092                     	;# 
   589     0093                     	;# 
   590     0093                     	;# 
   591     0093                     	;# 
   592     0094                     	;# 
   593     0095                     	;# 
   594     0096                     	;# 
   595     0097                     	;# 
   596     0098                     	;# 
   597     0099                     	;# 
   598     009A                     	;# 
   599     009B                     	;# 
   600     009C                     	;# 
   601     009D                     	;# 
   602     009E                     	;# 
   603     009F                     	;# 
   604     0105                     	;# 
   605     0107                     	;# 
   606     0108                     	;# 
   607     0109                     	;# 
   608     010C                     	;# 
   609     010C                     	;# 
   610     010D                     	;# 
   611     010E                     	;# 
   612     010F                     	;# 
   613     0185                     	;# 
   614     0187                     	;# 
   615     0188                     	;# 
   616     0189                     	;# 
   617     018C                     	;# 
   618     018D                     	;# 
   619     0007                     _PORTC	set	7
   620     0008                     _PORTD	set	8
   621     0006                     _PORTB	set	6
   622     0008                     _PORTDbits	set	8
   623     0005                     _PORTAbits	set	5
   624     001E                     _ADRESH	set	30
   625     001F                     _ADCON0bits	set	31
   626     000C                     _PIR1bits	set	12
   627     0006                     _PORTBbits	set	6
   628     000B                     _INTCONbits	set	11
   629     0043                     _RD3	set	67
   630     0047                     _RD7	set	71
   631     0046                     _RD6	set	70
   632     0045                     _RD5	set	69
   633     0044                     _RD4	set	68
   634     0066                     _ADIF	set	102
   635     0087                     _TRISC	set	135
   636     0088                     _TRISD	set	136
   637     0081                     _OPTION_REGbits	set	129
   638     0095                     _WPUB	set	149
   639     0096                     _IOCB	set	150
   640     0086                     _TRISB	set	134
   641     009F                     _ADCON1bits	set	159
   642     008C                     _PIE1bits	set	140
   643     0085                     _TRISAbits	set	133
   644     008F                     _OSCCONbits	set	143
   645     0188                     _ANSELbits	set	392
   646                           
   647                           	psect	strings
   648     0800                     __pstrings:
   649     0800                     stringtab:
   650     0800                     __stringtab:
   651     0800                     stringcode:	
   652                           ;	String table - string pointers are 1 byte each
   653                           
   654     0800                     stringdir:
   655     0800  3008               	movlw	high stringdir
   656     0801  008A               	movwf	10
   657     0802  0804               	movf	4,w
   658     0803  0A84               	incf	4,f
   659     0804  0782               	addwf	2,f
   660     0805                     __stringbase:
   661     0805  3400               	retlw	0
   662     0806                     __end_of__stringtab:
   663     0806                     STR_1:
   664     0806  3453               	retlw	83	;'S'
   665     0807  3431               	retlw	49	;'1'
   666     0808  343A               	retlw	58	;':'
   667     0809  3420               	retlw	32	;' '
   668     080A  3420               	retlw	32	;' '
   669     080B  3420               	retlw	32	;' '
   670     080C  3453               	retlw	83	;'S'
   671     080D  3432               	retlw	50	;'2'
   672     080E  343A               	retlw	58	;':'
   673     080F  3420               	retlw	32	;' '
   674     0810  3420               	retlw	32	;' '
   675     0811  3453               	retlw	83	;'S'
   676     0812  3433               	retlw	51	;'3'
   677     0813  343A               	retlw	58	;':'
   678     0814  3400               	retlw	0
   679                           
   680                           	psect	cinit
   681     0011                     start_initialization:	
   682                           ; #config settings
   683                           
   684     0011                     __initialization:
   685                           
   686                           ; Clear objects allocated to BANK0
   687     0011  1283               	bcf	3,5	;RP0=0, select bank0
   688     0012  1303               	bcf	3,6	;RP1=0, select bank0
   689     0013  01CE               	clrf	__pbssBANK0& (0+127)
   690     0014  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   691     0015  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   692     0016  01D1               	clrf	(__pbssBANK0+3)& (0+127)
   693     0017  01D2               	clrf	(__pbssBANK0+4)& (0+127)
   694     0018  01D3               	clrf	(__pbssBANK0+5)& (0+127)
   695     0019  01D4               	clrf	(__pbssBANK0+6)& (0+127)
   696     001A  01D5               	clrf	(__pbssBANK0+7)& (0+127)
   697     001B  01D6               	clrf	(__pbssBANK0+8)& (0+127)
   698     001C  01D7               	clrf	(__pbssBANK0+9)& (0+127)
   699     001D  01D8               	clrf	(__pbssBANK0+10)& (0+127)
   700     001E  01D9               	clrf	(__pbssBANK0+11)& (0+127)
   701     001F  01DA               	clrf	(__pbssBANK0+12)& (0+127)
   702     0020  01DB               	clrf	(__pbssBANK0+13)& (0+127)
   703     0021  01DC               	clrf	(__pbssBANK0+14)& (0+127)
   704     0022                     end_of_initialization:	
   705                           ;End of C runtime variable initialization code
   706                           
   707     0022                     __end_of__initialization:
   708     0022  0183               	clrf	3
   709     0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   710                           
   711                           	psect	bssBANK0
   712     004E                     __pbssBANK0:
   713     004E                     _lecADC0:
   714     004E                     	ds	4
   715     0052                     _cont:
   716     0052                     	ds	2
   717     0054                     _valADC1:
   718     0054                     	ds	2
   719     0056                     _valADC0:
   720     0056                     	ds	2
   721     0058                     _lecADC1:
   722     0058                     	ds	2
   723     005A                     _centesimas:
   724     005A                     	ds	1
   725     005B                     _decimas:
   726     005B                     	ds	1
   727     005C                     _unidades:
   728     005C                     	ds	1
   729                           
   730                           	psect	cstackCOMMON
   731     0070                     __pcstackCOMMON:
   732     0070                     ?_setupINTOSC:
   733     0070                     ?_configpuertos:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_Lcd_Init:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_Lcd_Clear:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_Lcd_Write_String:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_inttochar:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_Lcd_Write_Char:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_isr:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_main:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_Lcd_Port:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_Lcd_Cmd:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?___xxtofl:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ___xxtofl@val:	
   767                           ; 4 bytes @ 0x0
   768                           
   769                           
   770                           ; 4 bytes @ 0x0
   771     0070                     	ds	4
   772     0074                     ??___xxtofl:
   773                           
   774                           ; 1 bytes @ 0x4
   775     0074                     	ds	4
   776     0078                     ___xxtofl@sign:
   777                           
   778                           ; 1 bytes @ 0x8
   779     0078                     	ds	1
   780     0079                     ___xxtofl@exp:
   781                           
   782                           ; 1 bytes @ 0x9
   783     0079                     	ds	1
   784     007A                     ___xxtofl@arg:
   785                           
   786                           ; 4 bytes @ 0xA
   787     007A                     	ds	4
   788                           
   789                           	psect	cstackBANK0
   790     0020                     __pcstackBANK0:
   791     0020                     ??_isr:
   792                           
   793                           ; 1 bytes @ 0x0
   794     0020                     	ds	6
   795     0026                     ??_setupINTOSC:
   796     0026                     ??_configpuertos:	
   797                           ; 1 bytes @ 0x6
   798                           
   799     0026                     ?_ADC_config:	
   800                           ; 1 bytes @ 0x6
   801                           
   802     0026                     ?_ADC_read:	
   803                           ; 1 bytes @ 0x6
   804                           
   805     0026                     ??_inttochar:	
   806                           ; 1 bytes @ 0x6
   807                           
   808     0026                     ??_Lcd_Port:	
   809                           ; 1 bytes @ 0x6
   810                           
   811     0026                     ?___awdiv:	
   812                           ; 1 bytes @ 0x6
   813                           
   814     0026                     ?___awmod:	
   815                           ; 2 bytes @ 0x6
   816                           
   817     0026                     ?___lwdiv:	
   818                           ; 2 bytes @ 0x6
   819                           
   820     0026                     ?___lwmod:	
   821                           ; 2 bytes @ 0x6
   822                           
   823     0026                     ?___lmul:	
   824                           ; 2 bytes @ 0x6
   825                           
   826     0026                     ?___fltol:	
   827                           ; 4 bytes @ 0x6
   828                           
   829     0026                     setupINTOSC@IRCF:	
   830                           ; 4 bytes @ 0x6
   831                           
   832     0026                     Lcd_Port@a:	
   833                           ; 1 bytes @ 0x6
   834                           
   835     0026                     inttochar@num:	
   836                           ; 1 bytes @ 0x6
   837                           
   838     0026                     ADC_config@channel:	
   839                           ; 1 bytes @ 0x6
   840                           
   841     0026                     ADC_read@channel:	
   842                           ; 2 bytes @ 0x6
   843                           
   844     0026                     ___awdiv@divisor:	
   845                           ; 2 bytes @ 0x6
   846                           
   847     0026                     ___awmod@divisor:	
   848                           ; 2 bytes @ 0x6
   849                           
   850     0026                     ___lwdiv@divisor:	
   851                           ; 2 bytes @ 0x6
   852                           
   853     0026                     ___lwmod@divisor:	
   854                           ; 2 bytes @ 0x6
   855                           
   856     0026                     ___lmul@multiplier:	
   857                           ; 2 bytes @ 0x6
   858                           
   859     0026                     ___fltol@f1:	
   860                           ; 4 bytes @ 0x6
   861                           
   862                           
   863                           ; 4 bytes @ 0x6
   864     0026                     	ds	1
   865     0027                     ??_Lcd_Write_Char:
   866     0027                     ??_Lcd_Cmd:	
   867                           ; 1 bytes @ 0x7
   868                           
   869                           
   870                           ; 1 bytes @ 0x7
   871     0027                     	ds	1
   872     0028                     ??_ADC_config:
   873     0028                     ??_ADC_read:	
   874                           ; 1 bytes @ 0x8
   875                           
   876     0028                     Lcd_Write_Char@temp:	
   877                           ; 1 bytes @ 0x8
   878                           
   879     0028                     ___awdiv@dividend:	
   880                           ; 1 bytes @ 0x8
   881                           
   882     0028                     ___awmod@dividend:	
   883                           ; 2 bytes @ 0x8
   884                           
   885     0028                     ___lwdiv@dividend:	
   886                           ; 2 bytes @ 0x8
   887                           
   888     0028                     ___lwmod@dividend:	
   889                           ; 2 bytes @ 0x8
   890                           
   891                           
   892                           ; 2 bytes @ 0x8
   893     0028                     	ds	1
   894     0029                     Lcd_Cmd@a:
   895     0029                     Lcd_Write_Char@y:	
   896                           ; 1 bytes @ 0x9
   897                           
   898                           
   899                           ; 1 bytes @ 0x9
   900     0029                     	ds	1
   901     002A                     ??_Lcd_Init:
   902     002A                     ??_Lcd_Clear:	
   903                           ; 1 bytes @ 0xA
   904                           
   905     002A                     ?_Lcd_Set_Cursor:	
   906                           ; 1 bytes @ 0xA
   907                           
   908     002A                     ??___awdiv:	
   909                           ; 1 bytes @ 0xA
   910                           
   911     002A                     ??___awmod:	
   912                           ; 1 bytes @ 0xA
   913                           
   914     002A                     ??___fltol:	
   915                           ; 1 bytes @ 0xA
   916                           
   917     002A                     ??___lwdiv:	
   918                           ; 1 bytes @ 0xA
   919                           
   920     002A                     ??___lwmod:	
   921                           ; 1 bytes @ 0xA
   922                           
   923     002A                     Lcd_Set_Cursor@b:	
   924                           ; 1 bytes @ 0xA
   925                           
   926     002A                     Lcd_Write_Char@a:	
   927                           ; 1 bytes @ 0xA
   928                           
   929     002A                     ___lmul@multiplicand:	
   930                           ; 1 bytes @ 0xA
   931                           
   932                           
   933                           ; 4 bytes @ 0xA
   934     002A                     	ds	1
   935     002B                     ??_Lcd_Set_Cursor:
   936     002B                     ??_Lcd_Write_String:	
   937                           ; 1 bytes @ 0xB
   938                           
   939     002B                     ___awdiv@counter:	
   940                           ; 1 bytes @ 0xB
   941                           
   942     002B                     ___awmod@counter:	
   943                           ; 1 bytes @ 0xB
   944                           
   945     002B                     ___lwmod@counter:	
   946                           ; 1 bytes @ 0xB
   947                           
   948     002B                     Lcd_Write_String@i:	
   949                           ; 1 bytes @ 0xB
   950                           
   951     002B                     ___lwdiv@quotient:	
   952                           ; 2 bytes @ 0xB
   953                           
   954                           
   955                           ; 2 bytes @ 0xB
   956     002B                     	ds	1
   957     002C                     Lcd_Set_Cursor@a:
   958     002C                     ___awdiv@sign:	
   959                           ; 1 bytes @ 0xC
   960                           
   961     002C                     ___awmod@sign:	
   962                           ; 1 bytes @ 0xC
   963                           
   964                           
   965                           ; 1 bytes @ 0xC
   966     002C                     	ds	1
   967     002D                     Lcd_Set_Cursor@z:
   968     002D                     Lcd_Write_String@a:	
   969                           ; 1 bytes @ 0xD
   970                           
   971     002D                     ___lwdiv@counter:	
   972                           ; 1 bytes @ 0xD
   973                           
   974     002D                     ___awdiv@quotient:	
   975                           ; 1 bytes @ 0xD
   976                           
   977                           
   978                           ; 2 bytes @ 0xD
   979     002D                     	ds	1
   980     002E                     ??___lmul:
   981     002E                     Lcd_Set_Cursor@y:	
   982                           ; 1 bytes @ 0xE
   983                           
   984     002E                     ___fltol@sign1:	
   985                           ; 1 bytes @ 0xE
   986                           
   987                           
   988                           ; 1 bytes @ 0xE
   989     002E                     	ds	1
   990     002F                     ?_descomponer:
   991     002F                     Lcd_Set_Cursor@temp:	
   992                           ; 1 bytes @ 0xF
   993                           
   994     002F                     ___fltol@exp1:	
   995                           ; 1 bytes @ 0xF
   996                           
   997     002F                     descomponer@pos:	
   998                           ; 1 bytes @ 0xF
   999                           
  1000     002F                     ___lmul@product:	
  1001                           ; 2 bytes @ 0xF
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0xF
  1005     002F                     	ds	2
  1006     0031                     descomponer@num:
  1007                           
  1008                           ; 2 bytes @ 0x11
  1009     0031                     	ds	2
  1010     0033                     ??_descomponer:
  1011     0033                     ?___aldiv:	
  1012                           ; 1 bytes @ 0x13
  1013                           
  1014     0033                     ___aldiv@divisor:	
  1015                           ; 4 bytes @ 0x13
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x13
  1019     0033                     	ds	2
  1020     0035                     descomponer@cent:
  1021                           
  1022                           ; 1 bytes @ 0x15
  1023     0035                     	ds	1
  1024     0036                     descomponer@uni:
  1025                           
  1026                           ; 1 bytes @ 0x16
  1027     0036                     	ds	1
  1028     0037                     descomponer@dec:
  1029     0037                     ___aldiv@dividend:	
  1030                           ; 1 bytes @ 0x17
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x17
  1034     0037                     	ds	4
  1035     003B                     ??___aldiv:
  1036                           
  1037                           ; 1 bytes @ 0x1B
  1038     003B                     	ds	1
  1039     003C                     ___aldiv@counter:
  1040                           
  1041                           ; 1 bytes @ 0x1C
  1042     003C                     	ds	1
  1043     003D                     ___aldiv@sign:
  1044                           
  1045                           ; 1 bytes @ 0x1D
  1046     003D                     	ds	1
  1047     003E                     ___aldiv@quotient:
  1048                           
  1049                           ; 4 bytes @ 0x1E
  1050     003E                     	ds	4
  1051     0042                     ?_mapeo:
  1052     0042                     mapeo@inmin:	
  1053                           ; 2 bytes @ 0x22
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x22
  1057     0042                     	ds	1
  1058     0043                     mapeo@inmax:
  1059                           
  1060                           ; 1 bytes @ 0x23
  1061     0043                     	ds	1
  1062     0044                     mapeo@outmin:
  1063                           
  1064                           ; 1 bytes @ 0x24
  1065     0044                     	ds	1
  1066     0045                     mapeo@outmax:
  1067                           
  1068                           ; 2 bytes @ 0x25
  1069     0045                     	ds	2
  1070     0047                     ??_mapeo:
  1071                           
  1072                           ; 1 bytes @ 0x27
  1073     0047                     	ds	4
  1074     004B                     mapeo@resultado:
  1075                           
  1076                           ; 2 bytes @ 0x2B
  1077     004B                     	ds	2
  1078     004D                     mapeo@valor:
  1079                           
  1080                           ; 1 bytes @ 0x2D
  1081     004D                     	ds	1
  1082     004E                     ??_main:
  1083                           
  1084                           	psect	maintext
  1085     0026                     __pmaintext:	
  1086                           ; 1 bytes @ 0x2E
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 78 in file "main.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : B00/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels required when called: 5
  1112 ;; This function calls:
  1113 ;;		_ADC_config
  1114 ;;		_ADC_read
  1115 ;;		_Lcd_Clear
  1116 ;;		_Lcd_Init
  1117 ;;		_Lcd_Set_Cursor
  1118 ;;		_Lcd_Write_Char
  1119 ;;		_Lcd_Write_String
  1120 ;;		___fltol
  1121 ;;		_configpuertos
  1122 ;;		_descomponer
  1123 ;;		_inttochar
  1124 ;;		_mapeo
  1125 ;;		_setupINTOSC
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131     0026                     _main:	
  1132                           ;psect for function _main
  1133                           
  1134     0026                     l2093:	
  1135                           ;incstack = 0
  1136                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1137                           
  1138                           
  1139                           ;main.c: 79:     setupINTOSC(6);
  1140     0026  3006               	movlw	6
  1141     0027  120A  118A  2404  120A  118A  	fcall	_setupINTOSC
  1142                           
  1143                           ;main.c: 80:     configpuertos();
  1144     002C  120A  158A  274E  120A  118A  	fcall	_configpuertos
  1145                           
  1146                           ;main.c: 81:     ADC_config(0x03);
  1147     0031  3003               	movlw	3
  1148     0032  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0033  1303               	bcf	3,6	;RP1=0, select bank0
  1150     0034  00A6               	movwf	ADC_config@channel
  1151     0035  3000               	movlw	0
  1152     0036  00A7               	movwf	ADC_config@channel+1
  1153     0037  120A  118A  2758  120A  118A  	fcall	_ADC_config
  1154                           
  1155                           ;main.c: 82:     Lcd_Init();
  1156     003C  120A  118A  24CF  120A  118A  	fcall	_Lcd_Init
  1157                           
  1158                           ;main.c: 83:     Lcd_Clear();
  1159     0041  120A  158A  2725  120A  118A  	fcall	_Lcd_Clear
  1160                           
  1161                           ;main.c: 84:     Lcd_Set_Cursor(1,2);
  1162     0046  3002               	movlw	2
  1163     0047  1283               	bcf	3,5	;RP0=0, select bank0
  1164     0048  1303               	bcf	3,6	;RP1=0, select bank0
  1165     0049  00AA               	movwf	Lcd_Set_Cursor@b
  1166     004A  3001               	movlw	1
  1167     004B  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1168     0050                     l2095:
  1169                           
  1170                           ;main.c: 85:     Lcd_Write_String("S1:   S2:  S3:");
  1171     0050  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1172     0051  120A  118A  27D6  120A  118A  	fcall	_Lcd_Write_String
  1173     0056                     l2097:
  1174                           
  1175                           ;main.c: 89:         ADC_read(0);
  1176     0056  3000               	movlw	0
  1177     0057  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0058  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0059  00A6               	movwf	ADC_read@channel
  1180     005A  00A7               	movwf	ADC_read@channel+1
  1181     005B  120A  118A  2798  120A  118A  	fcall	_ADC_read
  1182     0060                     l2099:
  1183                           
  1184                           ;main.c: 90:         valADC0 = mapeo(lecADC0, 0, 255, 0, 500);
  1185     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1186     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1187     0062  01C2               	clrf	mapeo@inmin
  1188     0063  30FF               	movlw	255
  1189     0064  00C3               	movwf	mapeo@inmax
  1190     0065  01C4               	clrf	mapeo@outmin
  1191     0066  30F4               	movlw	244
  1192     0067  00C5               	movwf	mapeo@outmax
  1193     0068  3001               	movlw	1
  1194     0069  00C6               	movwf	mapeo@outmax+1
  1195     006A  0851               	movf	_lecADC0+3,w
  1196     006B  00A9               	movwf	___fltol@f1+3
  1197     006C  0850               	movf	_lecADC0+2,w
  1198     006D  00A8               	movwf	___fltol@f1+2
  1199     006E  084F               	movf	_lecADC0+1,w
  1200     006F  00A7               	movwf	___fltol@f1+1
  1201     0070  084E               	movf	_lecADC0,w
  1202     0071  00A6               	movwf	___fltol@f1
  1203     0072  120A  118A  2323  120A  118A  	fcall	___fltol
  1204     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1205     0078  1303               	bcf	3,6	;RP1=0, select bank0
  1206     0079  0826               	movf	?___fltol,w
  1207     007A  120A  118A  26CB  120A  118A  	fcall	_mapeo
  1208     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0081  0843               	movf	?_mapeo+1,w
  1211     0082  00D7               	movwf	_valADC0+1
  1212     0083  0842               	movf	?_mapeo,w
  1213     0084  00D6               	movwf	_valADC0
  1214     0085                     l2101:
  1215                           
  1216                           ;main.c: 91:         unidades = inttochar(descomponer(2, valADC0));
  1217     0085  3002               	movlw	2
  1218     0086  00AF               	movwf	descomponer@pos
  1219     0087  3000               	movlw	0
  1220     0088  00B0               	movwf	descomponer@pos+1
  1221     0089  0857               	movf	_valADC0+1,w
  1222     008A  00B2               	movwf	descomponer@num+1
  1223     008B  0856               	movf	_valADC0,w
  1224     008C  00B1               	movwf	descomponer@num
  1225     008D  120A  118A  246C  120A  118A  	fcall	_descomponer
  1226     0092  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1227     0097  1283               	bcf	3,5	;RP0=0, select bank0
  1228     0098  1303               	bcf	3,6	;RP1=0, select bank0
  1229     0099  00DC               	movwf	_unidades
  1230     009A                     l2103:
  1231                           
  1232                           ;main.c: 92:         Lcd_Set_Cursor(2,1);
  1233     009A  01AA               	clrf	Lcd_Set_Cursor@b
  1234     009B  0AAA               	incf	Lcd_Set_Cursor@b,f
  1235     009C  3002               	movlw	2
  1236     009D  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1237     00A2                     l2105:
  1238                           
  1239                           ;main.c: 93:         Lcd_Write_Char(unidades);
  1240     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1241     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1242     00A4  085C               	movf	_unidades,w
  1243     00A5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1244     00AA                     l2107:
  1245                           
  1246                           ;main.c: 94:         Lcd_Set_Cursor(2,2);
  1247     00AA  3002               	movlw	2
  1248     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1249     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1250     00AD  00AA               	movwf	Lcd_Set_Cursor@b
  1251     00AE  3002               	movlw	2
  1252     00AF  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1253     00B4                     l2109:
  1254                           
  1255                           ;main.c: 95:         Lcd_Write_Char('.');
  1256     00B4  302E               	movlw	46
  1257     00B5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1258     00BA                     l2111:
  1259                           
  1260                           ;main.c: 96:         decimas = inttochar(descomponer(1, valADC0));
  1261     00BA  3001               	movlw	1
  1262     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1263     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1264     00BD  00AF               	movwf	descomponer@pos
  1265     00BE  3000               	movlw	0
  1266     00BF  00B0               	movwf	descomponer@pos+1
  1267     00C0  0857               	movf	_valADC0+1,w
  1268     00C1  00B2               	movwf	descomponer@num+1
  1269     00C2  0856               	movf	_valADC0,w
  1270     00C3  00B1               	movwf	descomponer@num
  1271     00C4  120A  118A  246C  120A  118A  	fcall	_descomponer
  1272     00C9  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1273     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1274     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1275     00D0  00DB               	movwf	_decimas
  1276     00D1                     l2113:
  1277                           
  1278                           ;main.c: 97:         Lcd_Set_Cursor(2,3);
  1279     00D1  3003               	movlw	3
  1280     00D2  00AA               	movwf	Lcd_Set_Cursor@b
  1281     00D3  3002               	movlw	2
  1282     00D4  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1283     00D9                     l2115:
  1284                           
  1285                           ;main.c: 98:         Lcd_Write_Char(decimas);
  1286     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1287     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1288     00DB  085B               	movf	_decimas,w
  1289     00DC  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1290     00E1                     l2117:
  1291                           
  1292                           ;main.c: 99:         centesimas = inttochar(descomponer(0, valADC0));
  1293     00E1  3000               	movlw	0
  1294     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1295     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1296     00E4  00AF               	movwf	descomponer@pos
  1297     00E5  00B0               	movwf	descomponer@pos+1
  1298     00E6  0857               	movf	_valADC0+1,w
  1299     00E7  00B2               	movwf	descomponer@num+1
  1300     00E8  0856               	movf	_valADC0,w
  1301     00E9  00B1               	movwf	descomponer@num
  1302     00EA  120A  118A  246C  120A  118A  	fcall	_descomponer
  1303     00EF  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1304     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1305     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1306     00F6  00DA               	movwf	_centesimas
  1307     00F7                     l2119:
  1308                           
  1309                           ;main.c: 100:         Lcd_Set_Cursor(2,4);
  1310     00F7  3004               	movlw	4
  1311     00F8  00AA               	movwf	Lcd_Set_Cursor@b
  1312     00F9  3002               	movlw	2
  1313     00FA  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1314     00FF                     l2121:
  1315                           
  1316                           ;main.c: 101:         Lcd_Write_Char(centesimas);
  1317     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1318     0100  1303               	bcf	3,6	;RP1=0, select bank0
  1319     0101  085A               	movf	_centesimas,w
  1320     0102  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1321     0107                     l2123:
  1322                           
  1323                           ;main.c: 102:         Lcd_Set_Cursor(2,5);
  1324     0107  3005               	movlw	5
  1325     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1327     010A  00AA               	movwf	Lcd_Set_Cursor@b
  1328     010B  3002               	movlw	2
  1329     010C  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1330     0111                     l2125:
  1331                           
  1332                           ;main.c: 103:         Lcd_Write_Char('V');
  1333     0111  3056               	movlw	86
  1334     0112  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1335     0117                     l2127:
  1336                           
  1337                           ;main.c: 106:         ADC_read(1);
  1338     0117  3001               	movlw	1
  1339     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1340     0119  1303               	bcf	3,6	;RP1=0, select bank0
  1341     011A  00A6               	movwf	ADC_read@channel
  1342     011B  3000               	movlw	0
  1343     011C  00A7               	movwf	ADC_read@channel+1
  1344     011D  120A  118A  2798  120A  118A  	fcall	_ADC_read
  1345     0122                     l2129:
  1346                           
  1347                           ;main.c: 107:         valADC1 = mapeo(lecADC1, 0, 255, 0, 500);
  1348     0122  1283               	bcf	3,5	;RP0=0, select bank0
  1349     0123  1303               	bcf	3,6	;RP1=0, select bank0
  1350     0124  01C2               	clrf	mapeo@inmin
  1351     0125  30FF               	movlw	255
  1352     0126  00C3               	movwf	mapeo@inmax
  1353     0127  01C4               	clrf	mapeo@outmin
  1354     0128  30F4               	movlw	244
  1355     0129  00C5               	movwf	mapeo@outmax
  1356     012A  3001               	movlw	1
  1357     012B  00C6               	movwf	mapeo@outmax+1
  1358     012C  0858               	movf	_lecADC1,w
  1359     012D  120A  118A  26CB  120A  118A  	fcall	_mapeo
  1360     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1361     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1362     0134  0843               	movf	?_mapeo+1,w
  1363     0135  00D5               	movwf	_valADC1+1
  1364     0136  0842               	movf	?_mapeo,w
  1365     0137  00D4               	movwf	_valADC1
  1366     0138                     l2131:
  1367                           
  1368                           ;main.c: 108:         unidades = inttochar(descomponer(2, valADC1));
  1369     0138  3002               	movlw	2
  1370     0139  00AF               	movwf	descomponer@pos
  1371     013A  3000               	movlw	0
  1372     013B  00B0               	movwf	descomponer@pos+1
  1373     013C  0855               	movf	_valADC1+1,w
  1374     013D  00B2               	movwf	descomponer@num+1
  1375     013E  0854               	movf	_valADC1,w
  1376     013F  00B1               	movwf	descomponer@num
  1377     0140  120A  118A  246C  120A  118A  	fcall	_descomponer
  1378     0145  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1379     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1380     014B  1303               	bcf	3,6	;RP1=0, select bank0
  1381     014C  00DC               	movwf	_unidades
  1382     014D                     l2133:
  1383                           
  1384                           ;main.c: 109:         Lcd_Set_Cursor(2,7);
  1385     014D  3007               	movlw	7
  1386     014E  00AA               	movwf	Lcd_Set_Cursor@b
  1387     014F  3002               	movlw	2
  1388     0150  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1389     0155                     l2135:
  1390                           
  1391                           ;main.c: 110:         Lcd_Write_Char(unidades);
  1392     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1393     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1394     0157  085C               	movf	_unidades,w
  1395     0158  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1396     015D                     l2137:
  1397                           
  1398                           ;main.c: 111:         Lcd_Set_Cursor(2,8);
  1399     015D  3008               	movlw	8
  1400     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1401     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1402     0160  00AA               	movwf	Lcd_Set_Cursor@b
  1403     0161  3002               	movlw	2
  1404     0162  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1405     0167                     l2139:
  1406                           
  1407                           ;main.c: 112:         Lcd_Write_Char('.');
  1408     0167  302E               	movlw	46
  1409     0168  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1410     016D                     l2141:
  1411                           
  1412                           ;main.c: 113:         decimas = inttochar(descomponer(1, valADC1));
  1413     016D  3001               	movlw	1
  1414     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1415     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1416     0170  00AF               	movwf	descomponer@pos
  1417     0171  3000               	movlw	0
  1418     0172  00B0               	movwf	descomponer@pos+1
  1419     0173  0855               	movf	_valADC1+1,w
  1420     0174  00B2               	movwf	descomponer@num+1
  1421     0175  0854               	movf	_valADC1,w
  1422     0176  00B1               	movwf	descomponer@num
  1423     0177  120A  118A  246C  120A  118A  	fcall	_descomponer
  1424     017C  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1425     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1427     0183  00DB               	movwf	_decimas
  1428     0184                     l2143:
  1429                           
  1430                           ;main.c: 114:         Lcd_Set_Cursor(2,9);
  1431     0184  3009               	movlw	9
  1432     0185  00AA               	movwf	Lcd_Set_Cursor@b
  1433     0186  3002               	movlw	2
  1434     0187  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1435     018C                     l2145:
  1436                           
  1437                           ;main.c: 115:         Lcd_Write_Char(decimas);
  1438     018C  1283               	bcf	3,5	;RP0=0, select bank0
  1439     018D  1303               	bcf	3,6	;RP1=0, select bank0
  1440     018E  085B               	movf	_decimas,w
  1441     018F  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1442     0194                     l2147:
  1443                           
  1444                           ;main.c: 116:         centesimas = inttochar(descomponer(0, valADC1));
  1445     0194  3000               	movlw	0
  1446     0195  1283               	bcf	3,5	;RP0=0, select bank0
  1447     0196  1303               	bcf	3,6	;RP1=0, select bank0
  1448     0197  00AF               	movwf	descomponer@pos
  1449     0198  00B0               	movwf	descomponer@pos+1
  1450     0199  0855               	movf	_valADC1+1,w
  1451     019A  00B2               	movwf	descomponer@num+1
  1452     019B  0854               	movf	_valADC1,w
  1453     019C  00B1               	movwf	descomponer@num
  1454     019D  120A  118A  246C  120A  118A  	fcall	_descomponer
  1455     01A2  120A  118A  25E5  120A  118A  	fcall	_inttochar
  1456     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1457     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1458     01A9  00DA               	movwf	_centesimas
  1459     01AA                     l2149:
  1460                           
  1461                           ;main.c: 117:         Lcd_Set_Cursor(2,10);
  1462     01AA  300A               	movlw	10
  1463     01AB  00AA               	movwf	Lcd_Set_Cursor@b
  1464     01AC  3002               	movlw	2
  1465     01AD  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1466     01B2                     l2151:
  1467                           
  1468                           ;main.c: 118:         Lcd_Write_Char(centesimas);
  1469     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1470     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1471     01B4  085A               	movf	_centesimas,w
  1472     01B5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1473     01BA                     l2153:
  1474                           
  1475                           ;main.c: 119:         Lcd_Set_Cursor(2,11);
  1476     01BA  300B               	movlw	11
  1477     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1478     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1479     01BD  00AA               	movwf	Lcd_Set_Cursor@b
  1480     01BE  3002               	movlw	2
  1481     01BF  120A  118A  2637  120A  118A  	fcall	_Lcd_Set_Cursor
  1482     01C4                     l2155:
  1483                           
  1484                           ;main.c: 120:         Lcd_Write_Char('V');
  1485     01C4  3056               	movlw	86
  1486     01C5  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  1487     01CA  2856               	goto	l2097
  1488     01CB  120A  118A  280E   	ljmp	start
  1489     01CE                     __end_of_main:
  1490                           
  1491                           	psect	text1
  1492     0404                     __ptext1:	
  1493 ;; *************** function _setupINTOSC *****************
  1494 ;; Defined at:
  1495 ;;		line 10 in file "oscilador.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  IRCF            1    wreg     unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  IRCF            1    6[BANK0 ] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       1       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         0       1       0       0       0
  1513 ;;Total ram usage:        1 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 2
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523     0404                     _setupINTOSC:	
  1524                           ;psect for function _setupINTOSC
  1525                           
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1529                           ;setupINTOSC@IRCF stored from wreg
  1530     0404  1283               	bcf	3,5	;RP0=0, select bank0
  1531     0405  1303               	bcf	3,6	;RP1=0, select bank0
  1532     0406  00A6               	movwf	setupINTOSC@IRCF
  1533     0407                     l1769:
  1534                           
  1535                           ;oscilador.c: 11:     if (IRCF == 7){
  1536     0407  3007               	movlw	7
  1537     0408  0626               	xorwf	setupINTOSC@IRCF,w
  1538     0409  1D03               	btfss	3,2
  1539     040A  2C0C               	goto	u1771
  1540     040B  2C0D               	goto	u1770
  1541     040C                     u1771:
  1542     040C  2C11               	goto	l77
  1543     040D                     u1770:
  1544     040D                     l1771:
  1545                           
  1546                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  1547     040D  3070               	movlw	112
  1548     040E  1683               	bsf	3,5	;RP0=1, select bank1
  1549     040F  1303               	bcf	3,6	;RP1=0, select bank1
  1550     0410  048F               	iorwf	15,f	;volatile
  1551     0411                     l77:	
  1552                           ;oscilador.c: 13:     }
  1553                           
  1554                           
  1555                           ;oscilador.c: 14:     if (IRCF == 6){
  1556     0411  3006               	movlw	6
  1557     0412  1283               	bcf	3,5	;RP0=0, select bank0
  1558     0413  0626               	xorwf	setupINTOSC@IRCF,w
  1559     0414  1D03               	btfss	3,2
  1560     0415  2C17               	goto	u1781
  1561     0416  2C18               	goto	u1780
  1562     0417                     u1781:
  1563     0417  2C1E               	goto	l78
  1564     0418                     u1780:
  1565     0418                     l1773:
  1566                           
  1567                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  1568     0418  1683               	bsf	3,5	;RP0=1, select bank1
  1569     0419  1303               	bcf	3,6	;RP1=0, select bank1
  1570     041A  080F               	movf	15,w	;volatile
  1571     041B  398F               	andlw	-113
  1572     041C  3860               	iorlw	96
  1573     041D  008F               	movwf	15	;volatile
  1574     041E                     l78:	
  1575                           ;oscilador.c: 16:     }
  1576                           
  1577                           
  1578                           ;oscilador.c: 17:     if (IRCF == 5){
  1579     041E  3005               	movlw	5
  1580     041F  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0420  0626               	xorwf	setupINTOSC@IRCF,w
  1582     0421  1D03               	btfss	3,2
  1583     0422  2C24               	goto	u1791
  1584     0423  2C25               	goto	u1790
  1585     0424                     u1791:
  1586     0424  2C2B               	goto	l79
  1587     0425                     u1790:
  1588     0425                     l1775:
  1589                           
  1590                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  1591     0425  1683               	bsf	3,5	;RP0=1, select bank1
  1592     0426  1303               	bcf	3,6	;RP1=0, select bank1
  1593     0427  080F               	movf	15,w	;volatile
  1594     0428  398F               	andlw	-113
  1595     0429  3850               	iorlw	80
  1596     042A  008F               	movwf	15	;volatile
  1597     042B                     l79:	
  1598                           ;oscilador.c: 19:     }
  1599                           
  1600                           
  1601                           ;oscilador.c: 20:     if (IRCF == 4){
  1602     042B  3004               	movlw	4
  1603     042C  1283               	bcf	3,5	;RP0=0, select bank0
  1604     042D  0626               	xorwf	setupINTOSC@IRCF,w
  1605     042E  1D03               	btfss	3,2
  1606     042F  2C31               	goto	u1801
  1607     0430  2C32               	goto	u1800
  1608     0431                     u1801:
  1609     0431  2C38               	goto	l80
  1610     0432                     u1800:
  1611     0432                     l1777:
  1612                           
  1613                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  1614     0432  1683               	bsf	3,5	;RP0=1, select bank1
  1615     0433  1303               	bcf	3,6	;RP1=0, select bank1
  1616     0434  080F               	movf	15,w	;volatile
  1617     0435  398F               	andlw	-113
  1618     0436  3840               	iorlw	64
  1619     0437  008F               	movwf	15	;volatile
  1620     0438                     l80:	
  1621                           ;oscilador.c: 22:     }
  1622                           
  1623                           
  1624                           ;oscilador.c: 23:     if (IRCF == 3){
  1625     0438  3003               	movlw	3
  1626     0439  1283               	bcf	3,5	;RP0=0, select bank0
  1627     043A  0626               	xorwf	setupINTOSC@IRCF,w
  1628     043B  1D03               	btfss	3,2
  1629     043C  2C3E               	goto	u1811
  1630     043D  2C3F               	goto	u1810
  1631     043E                     u1811:
  1632     043E  2C45               	goto	l81
  1633     043F                     u1810:
  1634     043F                     l1779:
  1635                           
  1636                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1637     043F  1683               	bsf	3,5	;RP0=1, select bank1
  1638     0440  1303               	bcf	3,6	;RP1=0, select bank1
  1639     0441  080F               	movf	15,w	;volatile
  1640     0442  398F               	andlw	-113
  1641     0443  3830               	iorlw	48
  1642     0444  008F               	movwf	15	;volatile
  1643     0445                     l81:	
  1644                           ;oscilador.c: 25:     }
  1645                           
  1646                           
  1647                           ;oscilador.c: 26:     if (IRCF == 2){
  1648     0445  3002               	movlw	2
  1649     0446  1283               	bcf	3,5	;RP0=0, select bank0
  1650     0447  0626               	xorwf	setupINTOSC@IRCF,w
  1651     0448  1D03               	btfss	3,2
  1652     0449  2C4B               	goto	u1821
  1653     044A  2C4C               	goto	u1820
  1654     044B                     u1821:
  1655     044B  2C52               	goto	l82
  1656     044C                     u1820:
  1657     044C                     l1781:
  1658                           
  1659                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1660     044C  1683               	bsf	3,5	;RP0=1, select bank1
  1661     044D  1303               	bcf	3,6	;RP1=0, select bank1
  1662     044E  080F               	movf	15,w	;volatile
  1663     044F  398F               	andlw	-113
  1664     0450  3820               	iorlw	32
  1665     0451  008F               	movwf	15	;volatile
  1666     0452                     l82:	
  1667                           ;oscilador.c: 28:     }
  1668                           
  1669                           
  1670                           ;oscilador.c: 29:     if (IRCF == 1){
  1671     0452  1283               	bcf	3,5	;RP0=0, select bank0
  1672     0453  0326               	decf	setupINTOSC@IRCF,w
  1673     0454  1D03               	btfss	3,2
  1674     0455  2C57               	goto	u1831
  1675     0456  2C58               	goto	u1830
  1676     0457                     u1831:
  1677     0457  2C5E               	goto	l83
  1678     0458                     u1830:
  1679     0458                     l1783:
  1680                           
  1681                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1682     0458  1683               	bsf	3,5	;RP0=1, select bank1
  1683     0459  1303               	bcf	3,6	;RP1=0, select bank1
  1684     045A  080F               	movf	15,w	;volatile
  1685     045B  398F               	andlw	-113
  1686     045C  3810               	iorlw	16
  1687     045D  008F               	movwf	15	;volatile
  1688     045E                     l83:	
  1689                           ;oscilador.c: 31:     }
  1690                           
  1691                           
  1692                           ;oscilador.c: 32:     if (IRCF == 0){
  1693     045E  1283               	bcf	3,5	;RP0=0, select bank0
  1694     045F  0826               	movf	setupINTOSC@IRCF,w
  1695     0460  1D03               	btfss	3,2
  1696     0461  2C63               	goto	u1841
  1697     0462  2C64               	goto	u1840
  1698     0463                     u1841:
  1699     0463  2C68               	goto	l1787
  1700     0464                     u1840:
  1701     0464                     l1785:
  1702                           
  1703                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1704     0464  308F               	movlw	-113
  1705     0465  1683               	bsf	3,5	;RP0=1, select bank1
  1706     0466  1303               	bcf	3,6	;RP1=0, select bank1
  1707     0467  058F               	andwf	15,f	;volatile
  1708     0468                     l1787:
  1709                           
  1710                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1711     0468  1683               	bsf	3,5	;RP0=1, select bank1
  1712     0469  1303               	bcf	3,6	;RP1=0, select bank1
  1713     046A  140F               	bsf	15,0	;volatile
  1714     046B                     l85:
  1715     046B  0008               	return
  1716     046C                     __end_of_setupINTOSC:
  1717                           
  1718                           	psect	text2
  1719     06CB                     __ptext2:	
  1720 ;; *************** function _mapeo *****************
  1721 ;; Defined at:
  1722 ;;		line 110 in file "conversiones.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  valor           1    wreg     unsigned char 
  1725 ;;  inmin           1   34[BANK0 ] unsigned char 
  1726 ;;  inmax           1   35[BANK0 ] unsigned char 
  1727 ;;  outmin          1   36[BANK0 ] unsigned char 
  1728 ;;  outmax          2   37[BANK0 ] unsigned int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  valor           1   45[BANK0 ] unsigned char 
  1731 ;;  resultado       2   43[BANK0 ] unsigned int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2   34[BANK0 ] unsigned int 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       5       0       0       0
  1742 ;;      Locals:         0       3       0       0       0
  1743 ;;      Temps:          0       4       0       0       0
  1744 ;;      Totals:         0      12       0       0       0
  1745 ;;Total ram usage:       12 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 3
  1748 ;; This function calls:
  1749 ;;		___aldiv
  1750 ;;		___lmul
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756     06CB                     _mapeo:	
  1757                           ;psect for function _mapeo
  1758                           
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _mapeo: [wreg+status,2+status,0+pclath+cstack]
  1762                           ;mapeo@valor stored from wreg
  1763     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1764     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1765     06CD  00CD               	movwf	mapeo@valor
  1766     06CE                     l1881:
  1767                           
  1768                           ;conversiones.c: 111:     uint16_t resultado;;conversiones.c: 112:     resultado = (((ou
      +                          tmax-outmin)* (long long)(valor-inmin))/inmax)+outmin;
  1769     06CE  0843               	movf	mapeo@inmax,w
  1770     06CF  00C7               	movwf	??_mapeo
  1771     06D0  01C8               	clrf	??_mapeo+1
  1772     06D1  01C9               	clrf	??_mapeo+2
  1773     06D2  01CA               	clrf	??_mapeo+3
  1774     06D3  084A               	movf	??_mapeo+3,w
  1775     06D4  00B6               	movwf	___aldiv@divisor+3
  1776     06D5  0849               	movf	??_mapeo+2,w
  1777     06D6  00B5               	movwf	___aldiv@divisor+2
  1778     06D7  0848               	movf	??_mapeo+1,w
  1779     06D8  00B4               	movwf	___aldiv@divisor+1
  1780     06D9  0847               	movf	??_mapeo,w
  1781     06DA  00B3               	movwf	___aldiv@divisor
  1782     06DB  0844               	movf	mapeo@outmin,w
  1783     06DC  0245               	subwf	mapeo@outmax,w
  1784     06DD  00A6               	movwf	___lmul@multiplier
  1785     06DE  0846               	movf	mapeo@outmax+1,w
  1786     06DF  1C03               	skipc
  1787     06E0  0346               	decf	mapeo@outmax+1,w
  1788     06E1  00A7               	movwf	___lmul@multiplier+1
  1789     06E2  01A8               	clrf	___lmul@multiplier+2
  1790     06E3  01A9               	clrf	___lmul@multiplier+3
  1791     06E4  0842               	movf	mapeo@inmin,w
  1792     06E5  024D               	subwf	mapeo@valor,w
  1793     06E6  00AA               	movwf	___lmul@multiplicand
  1794     06E7  01AB               	clrf	___lmul@multiplicand+1
  1795     06E8  1C03               	skipc
  1796     06E9  03AB               	decf	___lmul@multiplicand+1,f
  1797     06EA  01AC               	clrf	___lmul@multiplicand+2
  1798     06EB  1BAB               	btfsc	___lmul@multiplicand+1,7
  1799     06EC  03AC               	decf	___lmul@multiplicand+2,f
  1800     06ED  082C               	movf	___lmul@multiplicand+2,w
  1801     06EE  00AD               	movwf	___lmul@multiplicand+3
  1802     06EF  120A  118A  2683  120A  118A  	fcall	___lmul
  1803     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1804     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1805     06F6  0829               	movf	?___lmul+3,w
  1806     06F7  00BA               	movwf	___aldiv@dividend+3
  1807     06F8  0828               	movf	?___lmul+2,w
  1808     06F9  00B9               	movwf	___aldiv@dividend+2
  1809     06FA  0827               	movf	?___lmul+1,w
  1810     06FB  00B8               	movwf	___aldiv@dividend+1
  1811     06FC  0826               	movf	?___lmul,w
  1812     06FD  00B7               	movwf	___aldiv@dividend
  1813     06FE  120A  118A  2286  120A  118A  	fcall	___aldiv
  1814     0703  1283               	bcf	3,5	;RP0=0, select bank0
  1815     0704  1303               	bcf	3,6	;RP1=0, select bank0
  1816     0705  0844               	movf	mapeo@outmin,w
  1817     0706  0733               	addwf	?___aldiv,w
  1818     0707  00CB               	movwf	mapeo@resultado
  1819     0708  3000               	movlw	0
  1820     0709  1803               	skipnc
  1821     070A  3001               	movlw	1
  1822     070B  0734               	addwf	?___aldiv+1,w
  1823     070C  00CC               	movwf	mapeo@resultado+1
  1824     070D                     l1883:
  1825                           
  1826                           ;conversiones.c: 113:     return resultado;
  1827     070D  084C               	movf	mapeo@resultado+1,w
  1828     070E  00C3               	movwf	?_mapeo+1
  1829     070F  084B               	movf	mapeo@resultado,w
  1830     0710  00C2               	movwf	?_mapeo
  1831     0711                     l251:
  1832     0711  0008               	return
  1833     0712                     __end_of_mapeo:
  1834                           
  1835                           	psect	text3
  1836     0683                     __ptext3:	
  1837 ;; *************** function ___lmul *****************
  1838 ;; Defined at:
  1839 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  multiplier      4    6[BANK0 ] unsigned long 
  1842 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  product         4   15[BANK0 ] unsigned long 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  4    6[BANK0 ] unsigned long 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       8       0       0       0
  1855 ;;      Locals:         0       4       0       0       0
  1856 ;;      Temps:          0       1       0       0       0
  1857 ;;      Totals:         0      13       0       0       0
  1858 ;;Total ram usage:       13 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 2
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_mapeo
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868     0683                     ___lmul:	
  1869                           ;psect for function ___lmul
  1870                           
  1871     0683                     l1585:	
  1872                           ;incstack = 0
  1873                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1874                           
  1875     0683  3000               	movlw	0
  1876     0684  1283               	bcf	3,5	;RP0=0, select bank0
  1877     0685  1303               	bcf	3,6	;RP1=0, select bank0
  1878     0686  00B2               	movwf	___lmul@product+3
  1879     0687  3000               	movlw	0
  1880     0688  00B1               	movwf	___lmul@product+2
  1881     0689  3000               	movlw	0
  1882     068A  00B0               	movwf	___lmul@product+1
  1883     068B  3000               	movlw	0
  1884     068C  00AF               	movwf	___lmul@product
  1885     068D                     l1587:
  1886     068D  1C26               	btfss	___lmul@multiplier,0
  1887     068E  2E90               	goto	u1301
  1888     068F  2E91               	goto	u1300
  1889     0690                     u1301:
  1890     0690  2EA8               	goto	l1591
  1891     0691                     u1300:
  1892     0691                     l1589:
  1893     0691  082A               	movf	___lmul@multiplicand,w
  1894     0692  07AF               	addwf	___lmul@product,f
  1895     0693  082B               	movf	___lmul@multiplicand+1,w
  1896     0694  1103               	clrz
  1897     0695  1803               	skipnc
  1898     0696  3E01               	addlw	1
  1899     0697  1903               	skipnz
  1900     0698  2E9A               	goto	u1311
  1901     0699  07B0               	addwf	___lmul@product+1,f
  1902     069A                     u1311:
  1903     069A  082C               	movf	___lmul@multiplicand+2,w
  1904     069B  1103               	clrz
  1905     069C  1803               	skipnc
  1906     069D  3E01               	addlw	1
  1907     069E  1903               	skipnz
  1908     069F  2EA1               	goto	u1312
  1909     06A0  07B1               	addwf	___lmul@product+2,f
  1910     06A1                     u1312:
  1911     06A1  082D               	movf	___lmul@multiplicand+3,w
  1912     06A2  1103               	clrz
  1913     06A3  1803               	skipnc
  1914     06A4  3E01               	addlw	1
  1915     06A5  1903               	skipnz
  1916     06A6  2EA8               	goto	u1313
  1917     06A7  07B2               	addwf	___lmul@product+3,f
  1918     06A8                     u1313:
  1919     06A8                     l1591:
  1920     06A8  3001               	movlw	1
  1921     06A9  00AE               	movwf	??___lmul
  1922     06AA                     u1325:
  1923     06AA  1003               	clrc
  1924     06AB  0DAA               	rlf	___lmul@multiplicand,f
  1925     06AC  0DAB               	rlf	___lmul@multiplicand+1,f
  1926     06AD  0DAC               	rlf	___lmul@multiplicand+2,f
  1927     06AE  0DAD               	rlf	___lmul@multiplicand+3,f
  1928     06AF  0BAE               	decfsz	??___lmul,f
  1929     06B0  2EAA               	goto	u1325
  1930     06B1                     l1593:
  1931     06B1  3001               	movlw	1
  1932     06B2                     u1335:
  1933     06B2  1003               	clrc
  1934     06B3  0CA9               	rrf	___lmul@multiplier+3,f
  1935     06B4  0CA8               	rrf	___lmul@multiplier+2,f
  1936     06B5  0CA7               	rrf	___lmul@multiplier+1,f
  1937     06B6  0CA6               	rrf	___lmul@multiplier,f
  1938     06B7  3EFF               	addlw	-1
  1939     06B8  1D03               	skipz
  1940     06B9  2EB2               	goto	u1335
  1941     06BA  0829               	movf	___lmul@multiplier+3,w
  1942     06BB  0428               	iorwf	___lmul@multiplier+2,w
  1943     06BC  0427               	iorwf	___lmul@multiplier+1,w
  1944     06BD  0426               	iorwf	___lmul@multiplier,w
  1945     06BE  1D03               	skipz
  1946     06BF  2EC1               	goto	u1341
  1947     06C0  2EC2               	goto	u1340
  1948     06C1                     u1341:
  1949     06C1  2E8D               	goto	l1587
  1950     06C2                     u1340:
  1951     06C2                     l1595:
  1952     06C2  0832               	movf	___lmul@product+3,w
  1953     06C3  00A9               	movwf	?___lmul+3
  1954     06C4  0831               	movf	___lmul@product+2,w
  1955     06C5  00A8               	movwf	?___lmul+2
  1956     06C6  0830               	movf	___lmul@product+1,w
  1957     06C7  00A7               	movwf	?___lmul+1
  1958     06C8  082F               	movf	___lmul@product,w
  1959     06C9  00A6               	movwf	?___lmul
  1960     06CA                     l351:
  1961     06CA  0008               	return
  1962     06CB                     __end_of___lmul:
  1963                           
  1964                           	psect	text4
  1965     0286                     __ptext4:	
  1966 ;; *************** function ___aldiv *****************
  1967 ;; Defined at:
  1968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  divisor         4   19[BANK0 ] long 
  1971 ;;  dividend        4   23[BANK0 ] long 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  quotient        4   30[BANK0 ] long 
  1974 ;;  sign            1   29[BANK0 ] unsigned char 
  1975 ;;  counter         1   28[BANK0 ] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  4   19[BANK0 ] long 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         0       8       0       0       0
  1986 ;;      Locals:         0       6       0       0       0
  1987 ;;      Temps:          0       1       0       0       0
  1988 ;;      Totals:         0      15       0       0       0
  1989 ;;Total ram usage:       15 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 2
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_mapeo
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999     0286                     ___aldiv:	
  2000                           ;psect for function ___aldiv
  2001                           
  2002     0286                     l1599:	
  2003                           ;incstack = 0
  2004                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2005                           
  2006     0286  1283               	bcf	3,5	;RP0=0, select bank0
  2007     0287  1303               	bcf	3,6	;RP1=0, select bank0
  2008     0288  01BD               	clrf	___aldiv@sign
  2009     0289                     l1601:
  2010     0289  1FB6               	btfss	___aldiv@divisor+3,7
  2011     028A  2A8C               	goto	u1351
  2012     028B  2A8D               	goto	u1350
  2013     028C                     u1351:
  2014     028C  2A9A               	goto	l402
  2015     028D                     u1350:
  2016     028D                     l1603:
  2017     028D  09B3               	comf	___aldiv@divisor,f
  2018     028E  09B4               	comf	___aldiv@divisor+1,f
  2019     028F  09B5               	comf	___aldiv@divisor+2,f
  2020     0290  09B6               	comf	___aldiv@divisor+3,f
  2021     0291  0AB3               	incf	___aldiv@divisor,f
  2022     0292  1903               	skipnz
  2023     0293  0AB4               	incf	___aldiv@divisor+1,f
  2024     0294  1903               	skipnz
  2025     0295  0AB5               	incf	___aldiv@divisor+2,f
  2026     0296  1903               	skipnz
  2027     0297  0AB6               	incf	___aldiv@divisor+3,f
  2028     0298  01BD               	clrf	___aldiv@sign
  2029     0299  0ABD               	incf	___aldiv@sign,f
  2030     029A                     l402:
  2031     029A  1FBA               	btfss	___aldiv@dividend+3,7
  2032     029B  2A9D               	goto	u1361
  2033     029C  2A9E               	goto	u1360
  2034     029D                     u1361:
  2035     029D  2AAD               	goto	l1609
  2036     029E                     u1360:
  2037     029E                     l1605:
  2038     029E  09B7               	comf	___aldiv@dividend,f
  2039     029F  09B8               	comf	___aldiv@dividend+1,f
  2040     02A0  09B9               	comf	___aldiv@dividend+2,f
  2041     02A1  09BA               	comf	___aldiv@dividend+3,f
  2042     02A2  0AB7               	incf	___aldiv@dividend,f
  2043     02A3  1903               	skipnz
  2044     02A4  0AB8               	incf	___aldiv@dividend+1,f
  2045     02A5  1903               	skipnz
  2046     02A6  0AB9               	incf	___aldiv@dividend+2,f
  2047     02A7  1903               	skipnz
  2048     02A8  0ABA               	incf	___aldiv@dividend+3,f
  2049     02A9                     l1607:
  2050     02A9  3001               	movlw	1
  2051     02AA  00BB               	movwf	??___aldiv
  2052     02AB  083B               	movf	??___aldiv,w
  2053     02AC  06BD               	xorwf	___aldiv@sign,f
  2054     02AD                     l1609:
  2055     02AD  3000               	movlw	0
  2056     02AE  00C1               	movwf	___aldiv@quotient+3
  2057     02AF  3000               	movlw	0
  2058     02B0  00C0               	movwf	___aldiv@quotient+2
  2059     02B1  3000               	movlw	0
  2060     02B2  00BF               	movwf	___aldiv@quotient+1
  2061     02B3  3000               	movlw	0
  2062     02B4  00BE               	movwf	___aldiv@quotient
  2063     02B5                     l1611:
  2064     02B5  0836               	movf	___aldiv@divisor+3,w
  2065     02B6  0435               	iorwf	___aldiv@divisor+2,w
  2066     02B7  0434               	iorwf	___aldiv@divisor+1,w
  2067     02B8  0433               	iorwf	___aldiv@divisor,w
  2068     02B9  1903               	skipnz
  2069     02BA  2ABC               	goto	u1371
  2070     02BB  2ABD               	goto	u1370
  2071     02BC                     u1371:
  2072     02BC  2B0A               	goto	l1631
  2073     02BD                     u1370:
  2074     02BD                     l1613:
  2075     02BD  01BC               	clrf	___aldiv@counter
  2076     02BE  0ABC               	incf	___aldiv@counter,f
  2077     02BF  2ACD               	goto	l1617
  2078     02C0                     l1615:
  2079     02C0  3001               	movlw	1
  2080     02C1  00BB               	movwf	??___aldiv
  2081     02C2                     u1385:
  2082     02C2  1003               	clrc
  2083     02C3  0DB3               	rlf	___aldiv@divisor,f
  2084     02C4  0DB4               	rlf	___aldiv@divisor+1,f
  2085     02C5  0DB5               	rlf	___aldiv@divisor+2,f
  2086     02C6  0DB6               	rlf	___aldiv@divisor+3,f
  2087     02C7  0BBB               	decfsz	??___aldiv,f
  2088     02C8  2AC2               	goto	u1385
  2089     02C9  3001               	movlw	1
  2090     02CA  00BB               	movwf	??___aldiv
  2091     02CB  083B               	movf	??___aldiv,w
  2092     02CC  07BC               	addwf	___aldiv@counter,f
  2093     02CD                     l1617:
  2094     02CD  1FB6               	btfss	___aldiv@divisor+3,7
  2095     02CE  2AD0               	goto	u1391
  2096     02CF  2AD1               	goto	u1390
  2097     02D0                     u1391:
  2098     02D0  2AC0               	goto	l1615
  2099     02D1                     u1390:
  2100     02D1                     l1619:
  2101     02D1  3001               	movlw	1
  2102     02D2  00BB               	movwf	??___aldiv
  2103     02D3                     u1405:
  2104     02D3  1003               	clrc
  2105     02D4  0DBE               	rlf	___aldiv@quotient,f
  2106     02D5  0DBF               	rlf	___aldiv@quotient+1,f
  2107     02D6  0DC0               	rlf	___aldiv@quotient+2,f
  2108     02D7  0DC1               	rlf	___aldiv@quotient+3,f
  2109     02D8  0BBB               	decfsz	??___aldiv,f
  2110     02D9  2AD3               	goto	u1405
  2111     02DA                     l1621:
  2112     02DA  0836               	movf	___aldiv@divisor+3,w
  2113     02DB  023A               	subwf	___aldiv@dividend+3,w
  2114     02DC  1D03               	skipz
  2115     02DD  2AE8               	goto	u1415
  2116     02DE  0835               	movf	___aldiv@divisor+2,w
  2117     02DF  0239               	subwf	___aldiv@dividend+2,w
  2118     02E0  1D03               	skipz
  2119     02E1  2AE8               	goto	u1415
  2120     02E2  0834               	movf	___aldiv@divisor+1,w
  2121     02E3  0238               	subwf	___aldiv@dividend+1,w
  2122     02E4  1D03               	skipz
  2123     02E5  2AE8               	goto	u1415
  2124     02E6  0833               	movf	___aldiv@divisor,w
  2125     02E7  0237               	subwf	___aldiv@dividend,w
  2126     02E8                     u1415:
  2127     02E8  1C03               	skipc
  2128     02E9  2AEB               	goto	u1411
  2129     02EA  2AEC               	goto	u1410
  2130     02EB                     u1411:
  2131     02EB  2AFB               	goto	l1627
  2132     02EC                     u1410:
  2133     02EC                     l1623:
  2134     02EC  0833               	movf	___aldiv@divisor,w
  2135     02ED  02B7               	subwf	___aldiv@dividend,f
  2136     02EE  0834               	movf	___aldiv@divisor+1,w
  2137     02EF  1C03               	skipc
  2138     02F0  0F34               	incfsz	___aldiv@divisor+1,w
  2139     02F1  02B8               	subwf	___aldiv@dividend+1,f
  2140     02F2  0835               	movf	___aldiv@divisor+2,w
  2141     02F3  1C03               	skipc
  2142     02F4  0F35               	incfsz	___aldiv@divisor+2,w
  2143     02F5  02B9               	subwf	___aldiv@dividend+2,f
  2144     02F6  0836               	movf	___aldiv@divisor+3,w
  2145     02F7  1C03               	skipc
  2146     02F8  0F36               	incfsz	___aldiv@divisor+3,w
  2147     02F9  02BA               	subwf	___aldiv@dividend+3,f
  2148     02FA                     l1625:
  2149     02FA  143E               	bsf	___aldiv@quotient,0
  2150     02FB                     l1627:
  2151     02FB  3001               	movlw	1
  2152     02FC                     u1425:
  2153     02FC  1003               	clrc
  2154     02FD  0CB6               	rrf	___aldiv@divisor+3,f
  2155     02FE  0CB5               	rrf	___aldiv@divisor+2,f
  2156     02FF  0CB4               	rrf	___aldiv@divisor+1,f
  2157     0300  0CB3               	rrf	___aldiv@divisor,f
  2158     0301  3EFF               	addlw	-1
  2159     0302  1D03               	skipz
  2160     0303  2AFC               	goto	u1425
  2161     0304                     l1629:
  2162     0304  3001               	movlw	1
  2163     0305  02BC               	subwf	___aldiv@counter,f
  2164     0306  1D03               	btfss	3,2
  2165     0307  2B09               	goto	u1431
  2166     0308  2B0A               	goto	u1430
  2167     0309                     u1431:
  2168     0309  2AD1               	goto	l1619
  2169     030A                     u1430:
  2170     030A                     l1631:
  2171     030A  083D               	movf	___aldiv@sign,w
  2172     030B  1903               	btfsc	3,2
  2173     030C  2B0E               	goto	u1441
  2174     030D  2B0F               	goto	u1440
  2175     030E                     u1441:
  2176     030E  2B1A               	goto	l1635
  2177     030F                     u1440:
  2178     030F                     l1633:
  2179     030F  09BE               	comf	___aldiv@quotient,f
  2180     0310  09BF               	comf	___aldiv@quotient+1,f
  2181     0311  09C0               	comf	___aldiv@quotient+2,f
  2182     0312  09C1               	comf	___aldiv@quotient+3,f
  2183     0313  0ABE               	incf	___aldiv@quotient,f
  2184     0314  1903               	skipnz
  2185     0315  0ABF               	incf	___aldiv@quotient+1,f
  2186     0316  1903               	skipnz
  2187     0317  0AC0               	incf	___aldiv@quotient+2,f
  2188     0318  1903               	skipnz
  2189     0319  0AC1               	incf	___aldiv@quotient+3,f
  2190     031A                     l1635:
  2191     031A  0841               	movf	___aldiv@quotient+3,w
  2192     031B  00B6               	movwf	?___aldiv+3
  2193     031C  0840               	movf	___aldiv@quotient+2,w
  2194     031D  00B5               	movwf	?___aldiv+2
  2195     031E  083F               	movf	___aldiv@quotient+1,w
  2196     031F  00B4               	movwf	?___aldiv+1
  2197     0320  083E               	movf	___aldiv@quotient,w
  2198     0321  00B3               	movwf	?___aldiv
  2199     0322                     l412:
  2200     0322  0008               	return
  2201     0323                     __end_of___aldiv:
  2202                           
  2203                           	psect	text5
  2204     05E5                     __ptext5:	
  2205 ;; *************** function _inttochar *****************
  2206 ;; Defined at:
  2207 ;;		line 12 in file "conversiones.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  num             1    wreg     unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  num             1    6[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      unsigned char 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       1       0       0       0
  2223 ;;      Temps:          0       0       0       0       0
  2224 ;;      Totals:         0       1       0       0       0
  2225 ;;Total ram usage:        1 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 2
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235     05E5                     _inttochar:	
  2236                           ;psect for function _inttochar
  2237                           
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  2241                           ;inttochar@num stored from wreg
  2242     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2243     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2244     05E7  00A6               	movwf	inttochar@num
  2245     05E8                     l1911:
  2246                           
  2247                           ;conversiones.c: 13:     if(num == 0){
  2248     05E8  0826               	movf	inttochar@num,w
  2249     05E9  1D03               	btfss	3,2
  2250     05EA  2DEC               	goto	u1991
  2251     05EB  2DED               	goto	u1990
  2252     05EC                     u1991:
  2253     05EC  2DEF               	goto	l1919
  2254     05ED                     u1990:
  2255     05ED                     l1913:
  2256                           
  2257                           ;conversiones.c: 14:         return '0';
  2258     05ED  3030               	movlw	48
  2259     05EE  2E36               	goto	l197
  2260     05EF                     l1919:
  2261     05EF  0326               	decf	inttochar@num,w
  2262     05F0  1D03               	btfss	3,2
  2263     05F1  2DF3               	goto	u2001
  2264     05F2  2DF4               	goto	u2000
  2265     05F3                     u2001:
  2266     05F3  2DF6               	goto	l1927
  2267     05F4                     u2000:
  2268     05F4                     l1921:
  2269                           
  2270                           ;conversiones.c: 17:         return '1';
  2271     05F4  3031               	movlw	49
  2272     05F5  2E36               	goto	l197
  2273     05F6                     l1927:
  2274     05F6  3002               	movlw	2
  2275     05F7  0626               	xorwf	inttochar@num,w
  2276     05F8  1D03               	btfss	3,2
  2277     05F9  2DFB               	goto	u2011
  2278     05FA  2DFC               	goto	u2010
  2279     05FB                     u2011:
  2280     05FB  2DFE               	goto	l1935
  2281     05FC                     u2010:
  2282     05FC                     l1929:
  2283                           
  2284                           ;conversiones.c: 20:         return '2';
  2285     05FC  3032               	movlw	50
  2286     05FD  2E36               	goto	l197
  2287     05FE                     l1935:
  2288     05FE  3003               	movlw	3
  2289     05FF  0626               	xorwf	inttochar@num,w
  2290     0600  1D03               	btfss	3,2
  2291     0601  2E03               	goto	u2021
  2292     0602  2E04               	goto	u2020
  2293     0603                     u2021:
  2294     0603  2E06               	goto	l1943
  2295     0604                     u2020:
  2296     0604                     l1937:
  2297                           
  2298                           ;conversiones.c: 23:         return '3';
  2299     0604  3033               	movlw	51
  2300     0605  2E36               	goto	l197
  2301     0606                     l1943:
  2302     0606  3004               	movlw	4
  2303     0607  0626               	xorwf	inttochar@num,w
  2304     0608  1D03               	btfss	3,2
  2305     0609  2E0B               	goto	u2031
  2306     060A  2E0C               	goto	u2030
  2307     060B                     u2031:
  2308     060B  2E0E               	goto	l1951
  2309     060C                     u2030:
  2310     060C                     l1945:
  2311                           
  2312                           ;conversiones.c: 26:         return '4';
  2313     060C  3034               	movlw	52
  2314     060D  2E36               	goto	l197
  2315     060E                     l1951:
  2316     060E  3005               	movlw	5
  2317     060F  0626               	xorwf	inttochar@num,w
  2318     0610  1D03               	btfss	3,2
  2319     0611  2E13               	goto	u2041
  2320     0612  2E14               	goto	u2040
  2321     0613                     u2041:
  2322     0613  2E16               	goto	l1959
  2323     0614                     u2040:
  2324     0614                     l1953:
  2325                           
  2326                           ;conversiones.c: 29:         return '5';
  2327     0614  3035               	movlw	53
  2328     0615  2E36               	goto	l197
  2329     0616                     l1959:
  2330     0616  3006               	movlw	6
  2331     0617  0626               	xorwf	inttochar@num,w
  2332     0618  1D03               	btfss	3,2
  2333     0619  2E1B               	goto	u2051
  2334     061A  2E1C               	goto	u2050
  2335     061B                     u2051:
  2336     061B  2E1E               	goto	l1967
  2337     061C                     u2050:
  2338     061C                     l1961:
  2339                           
  2340                           ;conversiones.c: 32:         return '6';
  2341     061C  3036               	movlw	54
  2342     061D  2E36               	goto	l197
  2343     061E                     l1967:
  2344     061E  3007               	movlw	7
  2345     061F  0626               	xorwf	inttochar@num,w
  2346     0620  1D03               	btfss	3,2
  2347     0621  2E23               	goto	u2061
  2348     0622  2E24               	goto	u2060
  2349     0623                     u2061:
  2350     0623  2E26               	goto	l1975
  2351     0624                     u2060:
  2352     0624                     l1969:
  2353                           
  2354                           ;conversiones.c: 35:         return '7';
  2355     0624  3037               	movlw	55
  2356     0625  2E36               	goto	l197
  2357     0626                     l1975:
  2358     0626  3008               	movlw	8
  2359     0627  0626               	xorwf	inttochar@num,w
  2360     0628  1D03               	btfss	3,2
  2361     0629  2E2B               	goto	u2071
  2362     062A  2E2C               	goto	u2070
  2363     062B                     u2071:
  2364     062B  2E2E               	goto	l1983
  2365     062C                     u2070:
  2366     062C                     l1977:
  2367                           
  2368                           ;conversiones.c: 38:         return '8';
  2369     062C  3038               	movlw	56
  2370     062D  2E36               	goto	l197
  2371     062E                     l1983:
  2372     062E  3009               	movlw	9
  2373     062F  0626               	xorwf	inttochar@num,w
  2374     0630  1D03               	btfss	3,2
  2375     0631  2E33               	goto	u2081
  2376     0632  2E34               	goto	u2080
  2377     0633                     u2081:
  2378     0633  2E36               	goto	l210
  2379     0634                     u2080:
  2380     0634                     l1985:
  2381                           
  2382                           ;conversiones.c: 41:         return '9';
  2383     0634  3039               	movlw	57
  2384     0635  2E36               	goto	l197
  2385     0636                     l210:
  2386     0636                     l197:
  2387     0636  0008               	return
  2388     0637                     __end_of_inttochar:
  2389                           
  2390                           	psect	text6
  2391     046C                     __ptext6:	
  2392 ;; *************** function _descomponer *****************
  2393 ;; Defined at:
  2394 ;;		line 45 in file "conversiones.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  pos             2   15[BANK0 ] int 
  2397 ;;  num             2   17[BANK0 ] unsigned int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  dec             1   23[BANK0 ] unsigned char 
  2400 ;;  uni             1   22[BANK0 ] unsigned char 
  2401 ;;  cent            1   21[BANK0 ] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      unsigned char 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       4       0       0       0
  2412 ;;      Locals:         0       3       0       0       0
  2413 ;;      Temps:          0       2       0       0       0
  2414 ;;      Totals:         0       9       0       0       0
  2415 ;;Total ram usage:        9 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 3
  2418 ;; This function calls:
  2419 ;;		___awdiv
  2420 ;;		___awmod
  2421 ;;		___lwdiv
  2422 ;;		___lwmod
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428     046C                     _descomponer:	
  2429                           ;psect for function _descomponer
  2430                           
  2431     046C                     l1887:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  2434                           
  2435                           
  2436                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  2437     046C  3064               	movlw	100
  2438     046D  1283               	bcf	3,5	;RP0=0, select bank0
  2439     046E  1303               	bcf	3,6	;RP1=0, select bank0
  2440     046F  00A6               	movwf	___lwdiv@divisor
  2441     0470  3000               	movlw	0
  2442     0471  00A7               	movwf	___lwdiv@divisor+1
  2443     0472  0832               	movf	descomponer@num+1,w
  2444     0473  00A9               	movwf	___lwdiv@dividend+1
  2445     0474  0831               	movf	descomponer@num,w
  2446     0475  00A8               	movwf	___lwdiv@dividend
  2447     0476  120A  118A  2712  120A  118A  	fcall	___lwdiv
  2448     047B  1283               	bcf	3,5	;RP0=0, select bank0
  2449     047C  1303               	bcf	3,6	;RP1=0, select bank0
  2450     047D  0826               	movf	?___lwdiv,w
  2451     047E  00B5               	movwf	descomponer@cent
  2452                           
  2453                           ;conversiones.c: 50:     dec = (num%100);
  2454     047F  3064               	movlw	100
  2455     0480  00A6               	movwf	___lwmod@divisor
  2456     0481  3000               	movlw	0
  2457     0482  00A7               	movwf	___lwmod@divisor+1
  2458     0483  0832               	movf	descomponer@num+1,w
  2459     0484  00A9               	movwf	___lwmod@dividend+1
  2460     0485  0831               	movf	descomponer@num,w
  2461     0486  00A8               	movwf	___lwmod@dividend
  2462     0487  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2463     048C  1283               	bcf	3,5	;RP0=0, select bank0
  2464     048D  1303               	bcf	3,6	;RP1=0, select bank0
  2465     048E  0826               	movf	?___lwmod,w
  2466     048F  00B7               	movwf	descomponer@dec
  2467                           
  2468                           ;conversiones.c: 51:     uni = (dec%10);
  2469     0490  300A               	movlw	10
  2470     0491  00A6               	movwf	___awmod@divisor
  2471     0492  3000               	movlw	0
  2472     0493  00A7               	movwf	___awmod@divisor+1
  2473     0494  0837               	movf	descomponer@dec,w
  2474     0495  00B3               	movwf	??_descomponer
  2475     0496  01B4               	clrf	??_descomponer+1
  2476     0497  0833               	movf	??_descomponer,w
  2477     0498  00A8               	movwf	___awmod@dividend
  2478     0499  0834               	movf	??_descomponer+1,w
  2479     049A  00A9               	movwf	___awmod@dividend+1
  2480     049B  120A  118A  2532  120A  118A  	fcall	___awmod
  2481     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2482     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2483     04A2  0826               	movf	?___awmod,w
  2484     04A3  00B6               	movwf	descomponer@uni
  2485     04A4                     l1889:
  2486                           
  2487                           ;conversiones.c: 52:     if(pos == 2){
  2488     04A4  3002               	movlw	2
  2489     04A5  062F               	xorwf	descomponer@pos,w
  2490     04A6  0430               	iorwf	descomponer@pos+1,w
  2491     04A7  1D03               	btfss	3,2
  2492     04A8  2CAA               	goto	u1961
  2493     04A9  2CAB               	goto	u1960
  2494     04AA                     u1961:
  2495     04AA  2CAD               	goto	l1897
  2496     04AB                     u1960:
  2497     04AB                     l1891:
  2498                           
  2499                           ;conversiones.c: 53:         return cent;
  2500     04AB  0835               	movf	descomponer@cent,w
  2501     04AC  2CCE               	goto	l219
  2502     04AD                     l1897:
  2503     04AD  032F               	decf	descomponer@pos,w
  2504     04AE  0430               	iorwf	descomponer@pos+1,w
  2505     04AF  1D03               	btfss	3,2
  2506     04B0  2CB2               	goto	u1971
  2507     04B1  2CB3               	goto	u1970
  2508     04B2                     u1971:
  2509     04B2  2CC7               	goto	l1905
  2510     04B3                     u1970:
  2511     04B3                     l1899:
  2512                           
  2513                           ;conversiones.c: 56:         return (dec/10);
  2514     04B3  300A               	movlw	10
  2515     04B4  00A6               	movwf	___awdiv@divisor
  2516     04B5  3000               	movlw	0
  2517     04B6  00A7               	movwf	___awdiv@divisor+1
  2518     04B7  0837               	movf	descomponer@dec,w
  2519     04B8  00B3               	movwf	??_descomponer
  2520     04B9  01B4               	clrf	??_descomponer+1
  2521     04BA  0833               	movf	??_descomponer,w
  2522     04BB  00A8               	movwf	___awdiv@dividend
  2523     04BC  0834               	movf	??_descomponer+1,w
  2524     04BD  00A9               	movwf	___awdiv@dividend+1
  2525     04BE  120A  118A  239B  120A  118A  	fcall	___awdiv
  2526     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2527     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2528     04C5  0826               	movf	?___awdiv,w
  2529     04C6  2CCE               	goto	l219
  2530     04C7                     l1905:
  2531     04C7  082F               	movf	descomponer@pos,w
  2532     04C8  0430               	iorwf	descomponer@pos+1,w
  2533     04C9  1D03               	btfss	3,2
  2534     04CA  2CCC               	goto	u1981
  2535     04CB  2CCD               	goto	u1980
  2536     04CC                     u1981:
  2537     04CC  2CCE               	goto	l219
  2538     04CD                     u1980:
  2539     04CD                     l1907:
  2540                           
  2541                           ;conversiones.c: 59:         return uni;
  2542     04CD  0836               	movf	descomponer@uni,w
  2543     04CE                     l219:
  2544     04CE  0008               	return
  2545     04CF                     __end_of_descomponer:
  2546                           
  2547                           	psect	text7
  2548     0FC4                     __ptext7:	
  2549 ;; *************** function ___lwmod *****************
  2550 ;; Defined at:
  2551 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  divisor         2    6[BANK0 ] unsigned int 
  2554 ;;  dividend        2    8[BANK0 ] unsigned int 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  counter         1   11[BANK0 ] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  2    6[BANK0 ] unsigned int 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       4       0       0       0
  2567 ;;      Locals:         0       1       0       0       0
  2568 ;;      Temps:          0       1       0       0       0
  2569 ;;      Totals:         0       6       0       0       0
  2570 ;;Total ram usage:        6 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 2
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_descomponer
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580     0FC4                     ___lwmod:	
  2581                           ;psect for function ___lwmod
  2582                           
  2583     0FC4                     l1747:	
  2584                           ;incstack = 0
  2585                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2586                           
  2587     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2589     0FC6  0826               	movf	___lwmod@divisor,w
  2590     0FC7  0427               	iorwf	___lwmod@divisor+1,w
  2591     0FC8  1903               	btfsc	3,2
  2592     0FC9  2FCB               	goto	u1711
  2593     0FCA  2FCC               	goto	u1710
  2594     0FCB                     u1711:
  2595     0FCB  2FFB               	goto	l1765
  2596     0FCC                     u1710:
  2597     0FCC                     l1749:
  2598     0FCC  01AB               	clrf	___lwmod@counter
  2599     0FCD  0AAB               	incf	___lwmod@counter,f
  2600     0FCE  2FDA               	goto	l1755
  2601     0FCF                     l1751:
  2602     0FCF  3001               	movlw	1
  2603     0FD0                     u1725:
  2604     0FD0  1003               	clrc
  2605     0FD1  0DA6               	rlf	___lwmod@divisor,f
  2606     0FD2  0DA7               	rlf	___lwmod@divisor+1,f
  2607     0FD3  3EFF               	addlw	-1
  2608     0FD4  1D03               	skipz
  2609     0FD5  2FD0               	goto	u1725
  2610     0FD6                     l1753:
  2611     0FD6  3001               	movlw	1
  2612     0FD7  00AA               	movwf	??___lwmod
  2613     0FD8  082A               	movf	??___lwmod,w
  2614     0FD9  07AB               	addwf	___lwmod@counter,f
  2615     0FDA                     l1755:
  2616     0FDA  1FA7               	btfss	___lwmod@divisor+1,7
  2617     0FDB  2FDD               	goto	u1731
  2618     0FDC  2FDE               	goto	u1730
  2619     0FDD                     u1731:
  2620     0FDD  2FCF               	goto	l1751
  2621     0FDE                     u1730:
  2622     0FDE                     l1757:
  2623     0FDE  0827               	movf	___lwmod@divisor+1,w
  2624     0FDF  0229               	subwf	___lwmod@dividend+1,w
  2625     0FE0  1D03               	skipz
  2626     0FE1  2FE4               	goto	u1745
  2627     0FE2  0826               	movf	___lwmod@divisor,w
  2628     0FE3  0228               	subwf	___lwmod@dividend,w
  2629     0FE4                     u1745:
  2630     0FE4  1C03               	skipc
  2631     0FE5  2FE7               	goto	u1741
  2632     0FE6  2FE8               	goto	u1740
  2633     0FE7                     u1741:
  2634     0FE7  2FEE               	goto	l1761
  2635     0FE8                     u1740:
  2636     0FE8                     l1759:
  2637     0FE8  0826               	movf	___lwmod@divisor,w
  2638     0FE9  02A8               	subwf	___lwmod@dividend,f
  2639     0FEA  0827               	movf	___lwmod@divisor+1,w
  2640     0FEB  1C03               	skipc
  2641     0FEC  03A9               	decf	___lwmod@dividend+1,f
  2642     0FED  02A9               	subwf	___lwmod@dividend+1,f
  2643     0FEE                     l1761:
  2644     0FEE  3001               	movlw	1
  2645     0FEF                     u1755:
  2646     0FEF  1003               	clrc
  2647     0FF0  0CA7               	rrf	___lwmod@divisor+1,f
  2648     0FF1  0CA6               	rrf	___lwmod@divisor,f
  2649     0FF2  3EFF               	addlw	-1
  2650     0FF3  1D03               	skipz
  2651     0FF4  2FEF               	goto	u1755
  2652     0FF5                     l1763:
  2653     0FF5  3001               	movlw	1
  2654     0FF6  02AB               	subwf	___lwmod@counter,f
  2655     0FF7  1D03               	btfss	3,2
  2656     0FF8  2FFA               	goto	u1761
  2657     0FF9  2FFB               	goto	u1760
  2658     0FFA                     u1761:
  2659     0FFA  2FDE               	goto	l1757
  2660     0FFB                     u1760:
  2661     0FFB                     l1765:
  2662     0FFB  0829               	movf	___lwmod@dividend+1,w
  2663     0FFC  00A7               	movwf	?___lwmod+1
  2664     0FFD  0828               	movf	___lwmod@dividend,w
  2665     0FFE  00A6               	movwf	?___lwmod
  2666     0FFF                     l619:
  2667     0FFF  0008               	return
  2668     1000                     __end_of___lwmod:
  2669                           
  2670                           	psect	text8
  2671     0712                     __ptext8:	
  2672 ;; *************** function ___lwdiv *****************
  2673 ;; Defined at:
  2674 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  divisor         2    6[BANK0 ] unsigned int 
  2677 ;;  dividend        2    8[BANK0 ] unsigned int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  quotient        2   11[BANK0 ] unsigned int 
  2680 ;;  counter         1   13[BANK0 ] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    6[BANK0 ] unsigned int 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2690 ;;      Params:         0       4       0       0       0
  2691 ;;      Locals:         0       3       0       0       0
  2692 ;;      Temps:          0       1       0       0       0
  2693 ;;      Totals:         0       8       0       0       0
  2694 ;;Total ram usage:        8 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 2
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_descomponer
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704     0712                     ___lwdiv:	
  2705                           ;psect for function ___lwdiv
  2706                           
  2707     0712                     l1721:	
  2708                           ;incstack = 0
  2709                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2710                           
  2711     0712  1283               	bcf	3,5	;RP0=0, select bank0
  2712     0713  1303               	bcf	3,6	;RP1=0, select bank0
  2713     0714  01AB               	clrf	___lwdiv@quotient
  2714     0715  01AC               	clrf	___lwdiv@quotient+1
  2715     0716                     l1723:
  2716     0716  0826               	movf	___lwdiv@divisor,w
  2717     0717  0427               	iorwf	___lwdiv@divisor+1,w
  2718     0718  1903               	btfsc	3,2
  2719     0719  2F1B               	goto	u1641
  2720     071A  2F1C               	goto	u1640
  2721     071B                     u1641:
  2722     071B  2F53               	goto	l1743
  2723     071C                     u1640:
  2724     071C                     l1725:
  2725     071C  01AD               	clrf	___lwdiv@counter
  2726     071D  0AAD               	incf	___lwdiv@counter,f
  2727     071E  2F2A               	goto	l1731
  2728     071F                     l1727:
  2729     071F  3001               	movlw	1
  2730     0720                     u1655:
  2731     0720  1003               	clrc
  2732     0721  0DA6               	rlf	___lwdiv@divisor,f
  2733     0722  0DA7               	rlf	___lwdiv@divisor+1,f
  2734     0723  3EFF               	addlw	-1
  2735     0724  1D03               	skipz
  2736     0725  2F20               	goto	u1655
  2737     0726                     l1729:
  2738     0726  3001               	movlw	1
  2739     0727  00AA               	movwf	??___lwdiv
  2740     0728  082A               	movf	??___lwdiv,w
  2741     0729  07AD               	addwf	___lwdiv@counter,f
  2742     072A                     l1731:
  2743     072A  1FA7               	btfss	___lwdiv@divisor+1,7
  2744     072B  2F2D               	goto	u1661
  2745     072C  2F2E               	goto	u1660
  2746     072D                     u1661:
  2747     072D  2F1F               	goto	l1727
  2748     072E                     u1660:
  2749     072E                     l1733:
  2750     072E  3001               	movlw	1
  2751     072F                     u1675:
  2752     072F  1003               	clrc
  2753     0730  0DAB               	rlf	___lwdiv@quotient,f
  2754     0731  0DAC               	rlf	___lwdiv@quotient+1,f
  2755     0732  3EFF               	addlw	-1
  2756     0733  1D03               	skipz
  2757     0734  2F2F               	goto	u1675
  2758     0735  0827               	movf	___lwdiv@divisor+1,w
  2759     0736  0229               	subwf	___lwdiv@dividend+1,w
  2760     0737  1D03               	skipz
  2761     0738  2F3B               	goto	u1685
  2762     0739  0826               	movf	___lwdiv@divisor,w
  2763     073A  0228               	subwf	___lwdiv@dividend,w
  2764     073B                     u1685:
  2765     073B  1C03               	skipc
  2766     073C  2F3E               	goto	u1681
  2767     073D  2F3F               	goto	u1680
  2768     073E                     u1681:
  2769     073E  2F46               	goto	l1739
  2770     073F                     u1680:
  2771     073F                     l1735:
  2772     073F  0826               	movf	___lwdiv@divisor,w
  2773     0740  02A8               	subwf	___lwdiv@dividend,f
  2774     0741  0827               	movf	___lwdiv@divisor+1,w
  2775     0742  1C03               	skipc
  2776     0743  03A9               	decf	___lwdiv@dividend+1,f
  2777     0744  02A9               	subwf	___lwdiv@dividend+1,f
  2778     0745                     l1737:
  2779     0745  142B               	bsf	___lwdiv@quotient,0
  2780     0746                     l1739:
  2781     0746  3001               	movlw	1
  2782     0747                     u1695:
  2783     0747  1003               	clrc
  2784     0748  0CA7               	rrf	___lwdiv@divisor+1,f
  2785     0749  0CA6               	rrf	___lwdiv@divisor,f
  2786     074A  3EFF               	addlw	-1
  2787     074B  1D03               	skipz
  2788     074C  2F47               	goto	u1695
  2789     074D                     l1741:
  2790     074D  3001               	movlw	1
  2791     074E  02AD               	subwf	___lwdiv@counter,f
  2792     074F  1D03               	btfss	3,2
  2793     0750  2F52               	goto	u1701
  2794     0751  2F53               	goto	u1700
  2795     0752                     u1701:
  2796     0752  2F2E               	goto	l1733
  2797     0753                     u1700:
  2798     0753                     l1743:
  2799     0753  082C               	movf	___lwdiv@quotient+1,w
  2800     0754  00A7               	movwf	?___lwdiv+1
  2801     0755  082B               	movf	___lwdiv@quotient,w
  2802     0756  00A6               	movwf	?___lwdiv
  2803     0757                     l609:
  2804     0757  0008               	return
  2805     0758                     __end_of___lwdiv:
  2806                           
  2807                           	psect	text9
  2808     0532                     __ptext9:	
  2809 ;; *************** function ___awmod *****************
  2810 ;; Defined at:
  2811 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  divisor         2    6[BANK0 ] int 
  2814 ;;  dividend        2    8[BANK0 ] int 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  sign            1   12[BANK0 ] unsigned char 
  2817 ;;  counter         1   11[BANK0 ] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2    6[BANK0 ] int 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       4       0       0       0
  2828 ;;      Locals:         0       2       0       0       0
  2829 ;;      Temps:          0       1       0       0       0
  2830 ;;      Totals:         0       7       0       0       0
  2831 ;;Total ram usage:        7 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 2
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_descomponer
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841     0532                     ___awmod:	
  2842                           ;psect for function ___awmod
  2843                           
  2844     0532                     l1683:	
  2845                           ;incstack = 0
  2846                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2847                           
  2848     0532  1283               	bcf	3,5	;RP0=0, select bank0
  2849     0533  1303               	bcf	3,6	;RP1=0, select bank0
  2850     0534  01AC               	clrf	___awmod@sign
  2851     0535                     l1685:
  2852     0535  1FA9               	btfss	___awmod@dividend+1,7
  2853     0536  2D38               	goto	u1551
  2854     0537  2D39               	goto	u1550
  2855     0538                     u1551:
  2856     0538  2D40               	goto	l1691
  2857     0539                     u1550:
  2858     0539                     l1687:
  2859     0539  09A8               	comf	___awmod@dividend,f
  2860     053A  09A9               	comf	___awmod@dividend+1,f
  2861     053B  0AA8               	incf	___awmod@dividend,f
  2862     053C  1903               	skipnz
  2863     053D  0AA9               	incf	___awmod@dividend+1,f
  2864     053E                     l1689:
  2865     053E  01AC               	clrf	___awmod@sign
  2866     053F  0AAC               	incf	___awmod@sign,f
  2867     0540                     l1691:
  2868     0540  1FA7               	btfss	___awmod@divisor+1,7
  2869     0541  2D43               	goto	u1561
  2870     0542  2D44               	goto	u1560
  2871     0543                     u1561:
  2872     0543  2D49               	goto	l1695
  2873     0544                     u1560:
  2874     0544                     l1693:
  2875     0544  09A6               	comf	___awmod@divisor,f
  2876     0545  09A7               	comf	___awmod@divisor+1,f
  2877     0546  0AA6               	incf	___awmod@divisor,f
  2878     0547  1903               	skipnz
  2879     0548  0AA7               	incf	___awmod@divisor+1,f
  2880     0549                     l1695:
  2881     0549  0826               	movf	___awmod@divisor,w
  2882     054A  0427               	iorwf	___awmod@divisor+1,w
  2883     054B  1903               	btfsc	3,2
  2884     054C  2D4E               	goto	u1571
  2885     054D  2D4F               	goto	u1570
  2886     054E                     u1571:
  2887     054E  2D7E               	goto	l1713
  2888     054F                     u1570:
  2889     054F                     l1697:
  2890     054F  01AB               	clrf	___awmod@counter
  2891     0550  0AAB               	incf	___awmod@counter,f
  2892     0551  2D5D               	goto	l1703
  2893     0552                     l1699:
  2894     0552  3001               	movlw	1
  2895     0553                     u1585:
  2896     0553  1003               	clrc
  2897     0554  0DA6               	rlf	___awmod@divisor,f
  2898     0555  0DA7               	rlf	___awmod@divisor+1,f
  2899     0556  3EFF               	addlw	-1
  2900     0557  1D03               	skipz
  2901     0558  2D53               	goto	u1585
  2902     0559                     l1701:
  2903     0559  3001               	movlw	1
  2904     055A  00AA               	movwf	??___awmod
  2905     055B  082A               	movf	??___awmod,w
  2906     055C  07AB               	addwf	___awmod@counter,f
  2907     055D                     l1703:
  2908     055D  1FA7               	btfss	___awmod@divisor+1,7
  2909     055E  2D60               	goto	u1591
  2910     055F  2D61               	goto	u1590
  2911     0560                     u1591:
  2912     0560  2D52               	goto	l1699
  2913     0561                     u1590:
  2914     0561                     l1705:
  2915     0561  0827               	movf	___awmod@divisor+1,w
  2916     0562  0229               	subwf	___awmod@dividend+1,w
  2917     0563  1D03               	skipz
  2918     0564  2D67               	goto	u1605
  2919     0565  0826               	movf	___awmod@divisor,w
  2920     0566  0228               	subwf	___awmod@dividend,w
  2921     0567                     u1605:
  2922     0567  1C03               	skipc
  2923     0568  2D6A               	goto	u1601
  2924     0569  2D6B               	goto	u1600
  2925     056A                     u1601:
  2926     056A  2D71               	goto	l1709
  2927     056B                     u1600:
  2928     056B                     l1707:
  2929     056B  0826               	movf	___awmod@divisor,w
  2930     056C  02A8               	subwf	___awmod@dividend,f
  2931     056D  0827               	movf	___awmod@divisor+1,w
  2932     056E  1C03               	skipc
  2933     056F  03A9               	decf	___awmod@dividend+1,f
  2934     0570  02A9               	subwf	___awmod@dividend+1,f
  2935     0571                     l1709:
  2936     0571  3001               	movlw	1
  2937     0572                     u1615:
  2938     0572  1003               	clrc
  2939     0573  0CA7               	rrf	___awmod@divisor+1,f
  2940     0574  0CA6               	rrf	___awmod@divisor,f
  2941     0575  3EFF               	addlw	-1
  2942     0576  1D03               	skipz
  2943     0577  2D72               	goto	u1615
  2944     0578                     l1711:
  2945     0578  3001               	movlw	1
  2946     0579  02AB               	subwf	___awmod@counter,f
  2947     057A  1D03               	btfss	3,2
  2948     057B  2D7D               	goto	u1621
  2949     057C  2D7E               	goto	u1620
  2950     057D                     u1621:
  2951     057D  2D61               	goto	l1705
  2952     057E                     u1620:
  2953     057E                     l1713:
  2954     057E  082C               	movf	___awmod@sign,w
  2955     057F  1903               	btfsc	3,2
  2956     0580  2D82               	goto	u1631
  2957     0581  2D83               	goto	u1630
  2958     0582                     u1631:
  2959     0582  2D88               	goto	l1717
  2960     0583                     u1630:
  2961     0583                     l1715:
  2962     0583  09A8               	comf	___awmod@dividend,f
  2963     0584  09A9               	comf	___awmod@dividend+1,f
  2964     0585  0AA8               	incf	___awmod@dividend,f
  2965     0586  1903               	skipnz
  2966     0587  0AA9               	incf	___awmod@dividend+1,f
  2967     0588                     l1717:
  2968     0588  0829               	movf	___awmod@dividend+1,w
  2969     0589  00A7               	movwf	?___awmod+1
  2970     058A  0828               	movf	___awmod@dividend,w
  2971     058B  00A6               	movwf	?___awmod
  2972     058C                     l503:
  2973     058C  0008               	return
  2974     058D                     __end_of___awmod:
  2975                           
  2976                           	psect	text10
  2977     039B                     __ptext10:	
  2978 ;; *************** function ___awdiv *****************
  2979 ;; Defined at:
  2980 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  divisor         2    6[BANK0 ] int 
  2983 ;;  dividend        2    8[BANK0 ] int 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  quotient        2   13[BANK0 ] int 
  2986 ;;  sign            1   12[BANK0 ] unsigned char 
  2987 ;;  counter         1   11[BANK0 ] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2    6[BANK0 ] int 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       4       0       0       0
  2998 ;;      Locals:         0       4       0       0       0
  2999 ;;      Temps:          0       1       0       0       0
  3000 ;;      Totals:         0       9       0       0       0
  3001 ;;Total ram usage:        9 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 2
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_descomponer
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     039B                     ___awdiv:	
  3012                           ;psect for function ___awdiv
  3013                           
  3014     039B                     l1639:	
  3015                           ;incstack = 0
  3016                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3017                           
  3018     039B  1283               	bcf	3,5	;RP0=0, select bank0
  3019     039C  1303               	bcf	3,6	;RP1=0, select bank0
  3020     039D  01AC               	clrf	___awdiv@sign
  3021     039E                     l1641:
  3022     039E  1FA7               	btfss	___awdiv@divisor+1,7
  3023     039F  2BA1               	goto	u1451
  3024     03A0  2BA2               	goto	u1450
  3025     03A1                     u1451:
  3026     03A1  2BA9               	goto	l1647
  3027     03A2                     u1450:
  3028     03A2                     l1643:
  3029     03A2  09A6               	comf	___awdiv@divisor,f
  3030     03A3  09A7               	comf	___awdiv@divisor+1,f
  3031     03A4  0AA6               	incf	___awdiv@divisor,f
  3032     03A5  1903               	skipnz
  3033     03A6  0AA7               	incf	___awdiv@divisor+1,f
  3034     03A7                     l1645:
  3035     03A7  01AC               	clrf	___awdiv@sign
  3036     03A8  0AAC               	incf	___awdiv@sign,f
  3037     03A9                     l1647:
  3038     03A9  1FA9               	btfss	___awdiv@dividend+1,7
  3039     03AA  2BAC               	goto	u1461
  3040     03AB  2BAD               	goto	u1460
  3041     03AC                     u1461:
  3042     03AC  2BB6               	goto	l1653
  3043     03AD                     u1460:
  3044     03AD                     l1649:
  3045     03AD  09A8               	comf	___awdiv@dividend,f
  3046     03AE  09A9               	comf	___awdiv@dividend+1,f
  3047     03AF  0AA8               	incf	___awdiv@dividend,f
  3048     03B0  1903               	skipnz
  3049     03B1  0AA9               	incf	___awdiv@dividend+1,f
  3050     03B2                     l1651:
  3051     03B2  3001               	movlw	1
  3052     03B3  00AA               	movwf	??___awdiv
  3053     03B4  082A               	movf	??___awdiv,w
  3054     03B5  06AC               	xorwf	___awdiv@sign,f
  3055     03B6                     l1653:
  3056     03B6  01AD               	clrf	___awdiv@quotient
  3057     03B7  01AE               	clrf	___awdiv@quotient+1
  3058     03B8                     l1655:
  3059     03B8  0826               	movf	___awdiv@divisor,w
  3060     03B9  0427               	iorwf	___awdiv@divisor+1,w
  3061     03BA  1903               	btfsc	3,2
  3062     03BB  2BBD               	goto	u1471
  3063     03BC  2BBE               	goto	u1470
  3064     03BD                     u1471:
  3065     03BD  2BF5               	goto	l1675
  3066     03BE                     u1470:
  3067     03BE                     l1657:
  3068     03BE  01AB               	clrf	___awdiv@counter
  3069     03BF  0AAB               	incf	___awdiv@counter,f
  3070     03C0  2BCC               	goto	l1663
  3071     03C1                     l1659:
  3072     03C1  3001               	movlw	1
  3073     03C2                     u1485:
  3074     03C2  1003               	clrc
  3075     03C3  0DA6               	rlf	___awdiv@divisor,f
  3076     03C4  0DA7               	rlf	___awdiv@divisor+1,f
  3077     03C5  3EFF               	addlw	-1
  3078     03C6  1D03               	skipz
  3079     03C7  2BC2               	goto	u1485
  3080     03C8                     l1661:
  3081     03C8  3001               	movlw	1
  3082     03C9  00AA               	movwf	??___awdiv
  3083     03CA  082A               	movf	??___awdiv,w
  3084     03CB  07AB               	addwf	___awdiv@counter,f
  3085     03CC                     l1663:
  3086     03CC  1FA7               	btfss	___awdiv@divisor+1,7
  3087     03CD  2BCF               	goto	u1491
  3088     03CE  2BD0               	goto	u1490
  3089     03CF                     u1491:
  3090     03CF  2BC1               	goto	l1659
  3091     03D0                     u1490:
  3092     03D0                     l1665:
  3093     03D0  3001               	movlw	1
  3094     03D1                     u1505:
  3095     03D1  1003               	clrc
  3096     03D2  0DAD               	rlf	___awdiv@quotient,f
  3097     03D3  0DAE               	rlf	___awdiv@quotient+1,f
  3098     03D4  3EFF               	addlw	-1
  3099     03D5  1D03               	skipz
  3100     03D6  2BD1               	goto	u1505
  3101     03D7  0827               	movf	___awdiv@divisor+1,w
  3102     03D8  0229               	subwf	___awdiv@dividend+1,w
  3103     03D9  1D03               	skipz
  3104     03DA  2BDD               	goto	u1515
  3105     03DB  0826               	movf	___awdiv@divisor,w
  3106     03DC  0228               	subwf	___awdiv@dividend,w
  3107     03DD                     u1515:
  3108     03DD  1C03               	skipc
  3109     03DE  2BE0               	goto	u1511
  3110     03DF  2BE1               	goto	u1510
  3111     03E0                     u1511:
  3112     03E0  2BE8               	goto	l1671
  3113     03E1                     u1510:
  3114     03E1                     l1667:
  3115     03E1  0826               	movf	___awdiv@divisor,w
  3116     03E2  02A8               	subwf	___awdiv@dividend,f
  3117     03E3  0827               	movf	___awdiv@divisor+1,w
  3118     03E4  1C03               	skipc
  3119     03E5  03A9               	decf	___awdiv@dividend+1,f
  3120     03E6  02A9               	subwf	___awdiv@dividend+1,f
  3121     03E7                     l1669:
  3122     03E7  142D               	bsf	___awdiv@quotient,0
  3123     03E8                     l1671:
  3124     03E8  3001               	movlw	1
  3125     03E9                     u1525:
  3126     03E9  1003               	clrc
  3127     03EA  0CA7               	rrf	___awdiv@divisor+1,f
  3128     03EB  0CA6               	rrf	___awdiv@divisor,f
  3129     03EC  3EFF               	addlw	-1
  3130     03ED  1D03               	skipz
  3131     03EE  2BE9               	goto	u1525
  3132     03EF                     l1673:
  3133     03EF  3001               	movlw	1
  3134     03F0  02AB               	subwf	___awdiv@counter,f
  3135     03F1  1D03               	btfss	3,2
  3136     03F2  2BF4               	goto	u1531
  3137     03F3  2BF5               	goto	u1530
  3138     03F4                     u1531:
  3139     03F4  2BD0               	goto	l1665
  3140     03F5                     u1530:
  3141     03F5                     l1675:
  3142     03F5  082C               	movf	___awdiv@sign,w
  3143     03F6  1903               	btfsc	3,2
  3144     03F7  2BF9               	goto	u1541
  3145     03F8  2BFA               	goto	u1540
  3146     03F9                     u1541:
  3147     03F9  2BFF               	goto	l1679
  3148     03FA                     u1540:
  3149     03FA                     l1677:
  3150     03FA  09AD               	comf	___awdiv@quotient,f
  3151     03FB  09AE               	comf	___awdiv@quotient+1,f
  3152     03FC  0AAD               	incf	___awdiv@quotient,f
  3153     03FD  1903               	skipnz
  3154     03FE  0AAE               	incf	___awdiv@quotient+1,f
  3155     03FF                     l1679:
  3156     03FF  082E               	movf	___awdiv@quotient+1,w
  3157     0400  00A7               	movwf	?___awdiv+1
  3158     0401  082D               	movf	___awdiv@quotient,w
  3159     0402  00A6               	movwf	?___awdiv
  3160     0403                     l490:
  3161     0403  0008               	return
  3162     0404                     __end_of___awdiv:
  3163                           
  3164                           	psect	text11
  3165     0F4E                     __ptext11:	
  3166 ;; *************** function _configpuertos *****************
  3167 ;; Defined at:
  3168 ;;		line 9 in file "confpuertos.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 2
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196     0F4E                     _configpuertos:	
  3197                           ;psect for function _configpuertos
  3198                           
  3199     0F4E                     l1789:	
  3200                           ;incstack = 0
  3201                           ; Regs used in _configpuertos: [wreg+status,2]
  3202                           
  3203                           
  3204                           ;confpuertos.c: 11:     TRISB = 0b11000000;
  3205     0F4E  30C0               	movlw	192
  3206     0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  3207     0F50  1303               	bcf	3,6	;RP1=0, select bank1
  3208     0F51  0086               	movwf	6	;volatile
  3209                           
  3210                           ;confpuertos.c: 12:     PORTB = 0b11000000;
  3211     0F52  30C0               	movlw	192
  3212     0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3213     0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3214     0F55  0086               	movwf	6	;volatile
  3215     0F56                     l1791:
  3216                           
  3217                           ;confpuertos.c: 13:     INTCONbits.GIE = 1;
  3218     0F56  178B               	bsf	11,7	;volatile
  3219     0F57                     l1793:
  3220                           
  3221                           ;confpuertos.c: 14:     INTCONbits.RBIE = 1;
  3222     0F57  158B               	bsf	11,3	;volatile
  3223     0F58                     l1795:
  3224                           
  3225                           ;confpuertos.c: 15:     INTCONbits.RBIF = 0;
  3226     0F58  100B               	bcf	11,0	;volatile
  3227                           
  3228                           ;confpuertos.c: 16:     IOCB = 0b11000000;
  3229     0F59  30C0               	movlw	192
  3230     0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  3231     0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  3232     0F5C  0096               	movwf	22	;volatile
  3233                           
  3234                           ;confpuertos.c: 17:     WPUB = 0b11000000;
  3235     0F5D  30C0               	movlw	192
  3236     0F5E  0095               	movwf	21	;volatile
  3237     0F5F                     l1797:
  3238                           
  3239                           ;confpuertos.c: 18:     OPTION_REGbits.nRBPU = 0;
  3240     0F5F  1381               	bcf	1,7	;volatile
  3241     0F60                     l1799:
  3242                           
  3243                           ;confpuertos.c: 22:     TRISD = 0;
  3244     0F60  0188               	clrf	8	;volatile
  3245     0F61                     l1801:
  3246                           
  3247                           ;confpuertos.c: 23:     PORTD = 0;
  3248     0F61  1283               	bcf	3,5	;RP0=0, select bank0
  3249     0F62  1303               	bcf	3,6	;RP1=0, select bank0
  3250     0F63  0188               	clrf	8	;volatile
  3251     0F64                     l1803:
  3252                           
  3253                           ;confpuertos.c: 24:     TRISC = 0;
  3254     0F64  1683               	bsf	3,5	;RP0=1, select bank1
  3255     0F65  1303               	bcf	3,6	;RP1=0, select bank1
  3256     0F66  0187               	clrf	7	;volatile
  3257     0F67                     l1805:
  3258                           
  3259                           ;confpuertos.c: 25:     PORTC = 0;
  3260     0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3261     0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3262     0F69  0187               	clrf	7	;volatile
  3263     0F6A                     l193:
  3264     0F6A  0008               	return
  3265     0F6B                     __end_of_configpuertos:
  3266                           
  3267                           	psect	text12
  3268     0323                     __ptext12:	
  3269 ;; *************** function ___fltol *****************
  3270 ;; Defined at:
  3271 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  f1              4    6[BANK0 ] void 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  exp1            1   15[BANK0 ] unsigned char 
  3276 ;;  sign1           1   14[BANK0 ] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  4    6[BANK0 ] long 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         0       4       0       0       0
  3287 ;;      Locals:         0       2       0       0       0
  3288 ;;      Temps:          0       4       0       0       0
  3289 ;;      Totals:         0      10       0       0       0
  3290 ;;Total ram usage:       10 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 2
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300     0323                     ___fltol:	
  3301                           ;psect for function ___fltol
  3302                           
  3303     0323                     l1989:	
  3304                           ;incstack = 0
  3305                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3306                           
  3307     0323  1003               	clrc
  3308     0324  1283               	bcf	3,5	;RP0=0, select bank0
  3309     0325  1303               	bcf	3,6	;RP1=0, select bank0
  3310     0326  0D28               	rlf	___fltol@f1+2,w
  3311     0327  0D29               	rlf	___fltol@f1+3,w
  3312     0328  00AF               	movwf	___fltol@exp1
  3313     0329  082F               	movf	___fltol@exp1,w
  3314     032A  1D03               	btfss	3,2
  3315     032B  2B2D               	goto	u2091
  3316     032C  2B2E               	goto	u2090
  3317     032D                     u2091:
  3318     032D  2B37               	goto	l1995
  3319     032E                     u2090:
  3320     032E                     l1991:
  3321     032E  3000               	movlw	0
  3322     032F  00A9               	movwf	?___fltol+3
  3323     0330  3000               	movlw	0
  3324     0331  00A8               	movwf	?___fltol+2
  3325     0332  3000               	movlw	0
  3326     0333  00A7               	movwf	?___fltol+1
  3327     0334  3000               	movlw	0
  3328     0335  00A6               	movwf	?___fltol
  3329     0336  2B9A               	goto	l523
  3330     0337                     l1995:
  3331     0337  0826               	movf	___fltol@f1,w
  3332     0338  00AA               	movwf	??___fltol
  3333     0339  0827               	movf	___fltol@f1+1,w
  3334     033A  00AB               	movwf	??___fltol+1
  3335     033B  0828               	movf	___fltol@f1+2,w
  3336     033C  00AC               	movwf	??___fltol+2
  3337     033D  0829               	movf	___fltol@f1+3,w
  3338     033E  00AD               	movwf	??___fltol+3
  3339     033F  301F               	movlw	31
  3340     0340                     u2105:
  3341     0340  1003               	clrc
  3342     0341  0CAD               	rrf	??___fltol+3,f
  3343     0342  0CAC               	rrf	??___fltol+2,f
  3344     0343  0CAB               	rrf	??___fltol+1,f
  3345     0344  0CAA               	rrf	??___fltol,f
  3346     0345                     u2100:
  3347     0345  3EFF               	addlw	-1
  3348     0346  1D03               	skipz
  3349     0347  2B40               	goto	u2105
  3350     0348  082A               	movf	??___fltol,w
  3351     0349  00AE               	movwf	___fltol@sign1
  3352     034A                     l1997:
  3353     034A  17A8               	bsf	___fltol@f1+2,7
  3354     034B                     l1999:
  3355     034B  30FF               	movlw	255
  3356     034C  05A6               	andwf	___fltol@f1,f
  3357     034D  30FF               	movlw	255
  3358     034E  05A7               	andwf	___fltol@f1+1,f
  3359     034F  30FF               	movlw	255
  3360     0350  05A8               	andwf	___fltol@f1+2,f
  3361     0351  3000               	movlw	0
  3362     0352  05A9               	andwf	___fltol@f1+3,f
  3363     0353                     l2001:
  3364     0353  3096               	movlw	150
  3365     0354  02AF               	subwf	___fltol@exp1,f
  3366     0355                     l2003:
  3367     0355  1FAF               	btfss	___fltol@exp1,7
  3368     0356  2B58               	goto	u2111
  3369     0357  2B59               	goto	u2110
  3370     0358                     u2111:
  3371     0358  2B73               	goto	l2013
  3372     0359                     u2110:
  3373     0359                     l2005:
  3374     0359  082F               	movf	___fltol@exp1,w
  3375     035A  3A80               	xorlw	128
  3376     035B  3E97               	addlw	151
  3377     035C  1803               	skipnc
  3378     035D  2B5F               	goto	u2121
  3379     035E  2B60               	goto	u2120
  3380     035F                     u2121:
  3381     035F  2B61               	goto	l2011
  3382     0360                     u2120:
  3383     0360  2B2E               	goto	l1991
  3384     0361                     l2011:
  3385     0361  3001               	movlw	1
  3386     0362                     u2135:
  3387     0362  1003               	clrc
  3388     0363  0CA9               	rrf	___fltol@f1+3,f
  3389     0364  0CA8               	rrf	___fltol@f1+2,f
  3390     0365  0CA7               	rrf	___fltol@f1+1,f
  3391     0366  0CA6               	rrf	___fltol@f1,f
  3392     0367  3EFF               	addlw	-1
  3393     0368  1D03               	skipz
  3394     0369  2B62               	goto	u2135
  3395     036A  3001               	movlw	1
  3396     036B  00AA               	movwf	??___fltol
  3397     036C  082A               	movf	??___fltol,w
  3398     036D  07AF               	addwf	___fltol@exp1,f
  3399     036E  1D03               	btfss	3,2
  3400     036F  2B71               	goto	u2141
  3401     0370  2B72               	goto	u2140
  3402     0371                     u2141:
  3403     0371  2B61               	goto	l2011
  3404     0372                     u2140:
  3405     0372  2B8A               	goto	l2021
  3406     0373                     l2013:
  3407     0373  3020               	movlw	32
  3408     0374  022F               	subwf	___fltol@exp1,w
  3409     0375  1C03               	skipc
  3410     0376  2B78               	goto	u2151
  3411     0377  2B79               	goto	u2150
  3412     0378                     u2151:
  3413     0378  2B85               	goto	l530
  3414     0379                     u2150:
  3415     0379  2B2E               	goto	l1991
  3416     037A                     l2019:
  3417     037A  3001               	movlw	1
  3418     037B  00AA               	movwf	??___fltol
  3419     037C                     u2165:
  3420     037C  1003               	clrc
  3421     037D  0DA6               	rlf	___fltol@f1,f
  3422     037E  0DA7               	rlf	___fltol@f1+1,f
  3423     037F  0DA8               	rlf	___fltol@f1+2,f
  3424     0380  0DA9               	rlf	___fltol@f1+3,f
  3425     0381  0BAA               	decfsz	??___fltol,f
  3426     0382  2B7C               	goto	u2165
  3427     0383  3001               	movlw	1
  3428     0384  02AF               	subwf	___fltol@exp1,f
  3429     0385                     l530:
  3430     0385  082F               	movf	___fltol@exp1,w
  3431     0386  1D03               	btfss	3,2
  3432     0387  2B89               	goto	u2171
  3433     0388  2B8A               	goto	u2170
  3434     0389                     u2171:
  3435     0389  2B7A               	goto	l2019
  3436     038A                     u2170:
  3437     038A                     l2021:
  3438     038A  082E               	movf	___fltol@sign1,w
  3439     038B  1903               	btfsc	3,2
  3440     038C  2B8E               	goto	u2181
  3441     038D  2B8F               	goto	u2180
  3442     038E                     u2181:
  3443     038E  2B9A               	goto	l533
  3444     038F                     u2180:
  3445     038F                     l2023:
  3446     038F  09A6               	comf	___fltol@f1,f
  3447     0390  09A7               	comf	___fltol@f1+1,f
  3448     0391  09A8               	comf	___fltol@f1+2,f
  3449     0392  09A9               	comf	___fltol@f1+3,f
  3450     0393  0AA6               	incf	___fltol@f1,f
  3451     0394  1903               	skipnz
  3452     0395  0AA7               	incf	___fltol@f1+1,f
  3453     0396  1903               	skipnz
  3454     0397  0AA8               	incf	___fltol@f1+2,f
  3455     0398  1903               	skipnz
  3456     0399  0AA9               	incf	___fltol@f1+3,f
  3457     039A                     l533:
  3458     039A                     l523:
  3459     039A  0008               	return
  3460     039B                     __end_of___fltol:
  3461                           
  3462                           	psect	text13
  3463     07D6                     __ptext13:	
  3464 ;; *************** function _Lcd_Write_String *****************
  3465 ;; Defined at:
  3466 ;;		line 98 in file "LCD.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  a               1    wreg     PTR unsigned char 
  3469 ;;		 -> STR_1(15), 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  a               1   13[BANK0 ] PTR unsigned char 
  3472 ;;		 -> STR_1(15), 
  3473 ;;  i               2   11[BANK0 ] int 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       3       0       0       0
  3485 ;;      Temps:          0       0       0       0       0
  3486 ;;      Totals:         0       3       0       0       0
  3487 ;;Total ram usage:        3 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; Hardware stack levels required when called: 4
  3490 ;; This function calls:
  3491 ;;		_Lcd_Write_Char
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497     07D6                     _Lcd_Write_String:	
  3498                           ;psect for function _Lcd_Write_String
  3499                           
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3503                           ;Lcd_Write_String@a stored from wreg
  3504     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3505     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3506     07D8  00AD               	movwf	Lcd_Write_String@a
  3507     07D9                     l1849:
  3508                           
  3509                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3510     07D9  01AB               	clrf	Lcd_Write_String@i
  3511     07DA  01AC               	clrf	Lcd_Write_String@i+1
  3512     07DB  2FF1               	goto	l1855
  3513     07DC                     l1851:
  3514                           
  3515                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3516     07DC  082B               	movf	Lcd_Write_String@i,w
  3517     07DD  072D               	addwf	Lcd_Write_String@a,w
  3518     07DE  0084               	movwf	4
  3519     07DF  120A  158A  2000  120A  118A  	fcall	stringdir
  3520     07E4  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  3521     07E9                     l1853:
  3522     07E9  3001               	movlw	1
  3523     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  3524     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  3525     07EC  07AB               	addwf	Lcd_Write_String@i,f
  3526     07ED  1803               	skipnc
  3527     07EE  0AAC               	incf	Lcd_Write_String@i+1,f
  3528     07EF  3000               	movlw	0
  3529     07F0  07AC               	addwf	Lcd_Write_String@i+1,f
  3530     07F1                     l1855:
  3531     07F1  082B               	movf	Lcd_Write_String@i,w
  3532     07F2  072D               	addwf	Lcd_Write_String@a,w
  3533     07F3  0084               	movwf	4
  3534     07F4  120A  158A  2000  120A  118A  	fcall	stringdir
  3535     07F9  3A00               	xorlw	0
  3536     07FA  1D03               	skipz
  3537     07FB  2FFD               	goto	u1921
  3538     07FC  2FFE               	goto	u1920
  3539     07FD                     u1921:
  3540     07FD  2FDC               	goto	l1851
  3541     07FE                     u1920:
  3542     07FE                     l164:
  3543     07FE  0008               	return
  3544     07FF                     __end_of_Lcd_Write_String:
  3545                           
  3546                           	psect	text14
  3547     0F8B                     __ptext14:	
  3548 ;; *************** function _Lcd_Write_Char *****************
  3549 ;; Defined at:
  3550 ;;		line 83 in file "LCD.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  a               1    wreg     unsigned char 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  a               1   10[BANK0 ] unsigned char 
  3555 ;;  y               1    9[BANK0 ] unsigned char 
  3556 ;;  temp            1    8[BANK0 ] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         0       0       0       0       0
  3567 ;;      Locals:         0       3       0       0       0
  3568 ;;      Temps:          0       1       0       0       0
  3569 ;;      Totals:         0       4       0       0       0
  3570 ;;Total ram usage:        4 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 3
  3573 ;; This function calls:
  3574 ;;		_Lcd_Port
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;;		_Lcd_Write_String
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581     0F8B                     _Lcd_Write_Char:	
  3582                           ;psect for function _Lcd_Write_Char
  3583                           
  3584                           
  3585                           ;incstack = 0
  3586                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3587                           ;Lcd_Write_Char@a stored from wreg
  3588     0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  3589     0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  3590     0F8D  00AA               	movwf	Lcd_Write_Char@a
  3591     0F8E                     l1555:
  3592                           
  3593                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3594     0F8E  082A               	movf	Lcd_Write_Char@a,w
  3595     0F8F  390F               	andlw	15
  3596     0F90  00A8               	movwf	Lcd_Write_Char@temp
  3597                           
  3598                           ;LCD.c: 86:     y = a & 0xF0;
  3599     0F91  082A               	movf	Lcd_Write_Char@a,w
  3600     0F92  39F0               	andlw	240
  3601     0F93  00A9               	movwf	Lcd_Write_Char@y
  3602     0F94                     l1557:
  3603                           
  3604                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3605     0F94  1508               	bsf	8,2	;volatile
  3606     0F95                     l1559:
  3607                           
  3608                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3609     0F95  0829               	movf	Lcd_Write_Char@y,w
  3610     0F96  00A7               	movwf	??_Lcd_Write_Char
  3611     0F97  3004               	movlw	4
  3612     0F98                     u1295:
  3613     0F98  1003               	clrc
  3614     0F99  0CA7               	rrf	??_Lcd_Write_Char,f
  3615     0F9A  3EFF               	addlw	-1
  3616     0F9B  1D03               	skipz
  3617     0F9C  2F98               	goto	u1295
  3618     0F9D  0827               	movf	??_Lcd_Write_Char,w
  3619     0F9E  120A  158A  276B  120A  158A  	fcall	_Lcd_Port
  3620     0FA3                     l1561:
  3621                           
  3622                           ;LCD.c: 89:     RD3 = 1;
  3623     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3624     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3625     0FA5  1588               	bsf	8,3	;volatile
  3626     0FA6                     l1563:
  3627                           
  3628                           ;LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3629     0FA6  300C               	movlw	12
  3630     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3631     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3632     0FA9  00A7               	movwf	??_Lcd_Write_Char
  3633     0FAA                     u2397:
  3634     0FAA  0BA7               	decfsz	??_Lcd_Write_Char,f
  3635     0FAB  2FAA               	goto	u2397
  3636     0FAC  0000               	nop
  3637     0FAD                     l1565:
  3638                           
  3639                           ;LCD.c: 91:     RD3 = 0;
  3640     0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3641     0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3642     0FAF  1188               	bcf	8,3	;volatile
  3643     0FB0                     l1567:
  3644                           
  3645                           ;LCD.c: 92:     Lcd_Port(temp);
  3646     0FB0  0828               	movf	Lcd_Write_Char@temp,w
  3647     0FB1  120A  158A  276B  120A  158A  	fcall	_Lcd_Port
  3648     0FB6                     l1569:
  3649                           
  3650                           ;LCD.c: 93:     RD3 = 1;
  3651     0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3652     0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  3653     0FB8  1588               	bsf	8,3	;volatile
  3654     0FB9                     l1571:
  3655                           
  3656                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3657     0FB9  300C               	movlw	12
  3658     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3659     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  3660     0FBC  00A7               	movwf	??_Lcd_Write_Char
  3661     0FBD                     u2407:
  3662     0FBD  0BA7               	decfsz	??_Lcd_Write_Char,f
  3663     0FBE  2FBD               	goto	u2407
  3664     0FBF  0000               	nop
  3665     0FC0                     l1573:
  3666                           
  3667                           ;LCD.c: 95:     RD3 = 0;
  3668     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  3669     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  3670     0FC2  1188               	bcf	8,3	;volatile
  3671     0FC3                     l158:
  3672     0FC3  0008               	return
  3673     0FC4                     __end_of_Lcd_Write_Char:
  3674                           
  3675                           	psect	text15
  3676     0637                     __ptext15:	
  3677 ;; *************** function _Lcd_Set_Cursor *****************
  3678 ;; Defined at:
  3679 ;;		line 48 in file "LCD.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  a               1    wreg     unsigned char 
  3682 ;;  b               1   10[BANK0 ] unsigned char 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  a               1   12[BANK0 ] unsigned char 
  3685 ;;  temp            1   15[BANK0 ] unsigned char 
  3686 ;;  y               1   14[BANK0 ] unsigned char 
  3687 ;;  z               1   13[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       1       0       0       0
  3698 ;;      Locals:         0       4       0       0       0
  3699 ;;      Temps:          0       1       0       0       0
  3700 ;;      Totals:         0       6       0       0       0
  3701 ;;Total ram usage:        6 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 4
  3704 ;; This function calls:
  3705 ;;		_Lcd_Cmd
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711     0637                     _Lcd_Set_Cursor:	
  3712                           ;psect for function _Lcd_Set_Cursor
  3713                           
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3717                           ;Lcd_Set_Cursor@a stored from wreg
  3718     0637  1283               	bcf	3,5	;RP0=0, select bank0
  3719     0638  1303               	bcf	3,6	;RP1=0, select bank0
  3720     0639  00AC               	movwf	Lcd_Set_Cursor@a
  3721     063A                     l1829:
  3722                           
  3723                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3724     063A  032C               	decf	Lcd_Set_Cursor@a,w
  3725     063B  1D03               	btfss	3,2
  3726     063C  2E3E               	goto	u1881
  3727     063D  2E3F               	goto	u1880
  3728     063E                     u1881:
  3729     063E  2E5E               	goto	l1839
  3730     063F                     u1880:
  3731     063F                     l1831:
  3732                           
  3733                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3734     063F  082A               	movf	Lcd_Set_Cursor@b,w
  3735     0640  3E7F               	addlw	127
  3736     0641  00AF               	movwf	Lcd_Set_Cursor@temp
  3737                           
  3738                           ;LCD.c: 52:         z = temp >> 4;
  3739     0642  082F               	movf	Lcd_Set_Cursor@temp,w
  3740     0643  00AB               	movwf	??_Lcd_Set_Cursor
  3741     0644  3004               	movlw	4
  3742     0645                     u1895:
  3743     0645  1003               	clrc
  3744     0646  0CAB               	rrf	??_Lcd_Set_Cursor,f
  3745     0647  3EFF               	addlw	-1
  3746     0648  1D03               	skipz
  3747     0649  2E45               	goto	u1895
  3748     064A  082B               	movf	??_Lcd_Set_Cursor,w
  3749     064B  00AD               	movwf	Lcd_Set_Cursor@z
  3750     064C                     l1833:
  3751                           
  3752                           ;LCD.c: 53:         y = temp & 0x0F;
  3753     064C  082F               	movf	Lcd_Set_Cursor@temp,w
  3754     064D  390F               	andlw	15
  3755     064E  00AE               	movwf	Lcd_Set_Cursor@y
  3756     064F                     l1835:
  3757                           
  3758                           ;LCD.c: 54:         Lcd_Cmd(z);
  3759     064F  082D               	movf	Lcd_Set_Cursor@z,w
  3760     0650  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3761     0655                     l1837:
  3762                           
  3763                           ;LCD.c: 55:         Lcd_Cmd(y);
  3764     0655  1283               	bcf	3,5	;RP0=0, select bank0
  3765     0656  1303               	bcf	3,6	;RP1=0, select bank0
  3766     0657  082E               	movf	Lcd_Set_Cursor@y,w
  3767     0658  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3768                           
  3769                           ;LCD.c: 56:     } else if (a == 2) {
  3770     065D  2E82               	goto	l152
  3771     065E                     l1839:
  3772     065E  3002               	movlw	2
  3773     065F  062C               	xorwf	Lcd_Set_Cursor@a,w
  3774     0660  1D03               	btfss	3,2
  3775     0661  2E63               	goto	u1901
  3776     0662  2E64               	goto	u1900
  3777     0663                     u1901:
  3778     0663  2E82               	goto	l152
  3779     0664                     u1900:
  3780     0664                     l1841:
  3781                           
  3782                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3783     0664  082A               	movf	Lcd_Set_Cursor@b,w
  3784     0665  3EBF               	addlw	191
  3785     0666  00AF               	movwf	Lcd_Set_Cursor@temp
  3786                           
  3787                           ;LCD.c: 58:         z = temp >> 4;
  3788     0667  082F               	movf	Lcd_Set_Cursor@temp,w
  3789     0668  00AB               	movwf	??_Lcd_Set_Cursor
  3790     0669  3004               	movlw	4
  3791     066A                     u1915:
  3792     066A  1003               	clrc
  3793     066B  0CAB               	rrf	??_Lcd_Set_Cursor,f
  3794     066C  3EFF               	addlw	-1
  3795     066D  1D03               	skipz
  3796     066E  2E6A               	goto	u1915
  3797     066F  082B               	movf	??_Lcd_Set_Cursor,w
  3798     0670  00AD               	movwf	Lcd_Set_Cursor@z
  3799     0671                     l1843:
  3800                           
  3801                           ;LCD.c: 59:         y = temp & 0x0F;
  3802     0671  082F               	movf	Lcd_Set_Cursor@temp,w
  3803     0672  390F               	andlw	15
  3804     0673  00AE               	movwf	Lcd_Set_Cursor@y
  3805     0674                     l1845:
  3806                           
  3807                           ;LCD.c: 60:         Lcd_Cmd(z);
  3808     0674  082D               	movf	Lcd_Set_Cursor@z,w
  3809     0675  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3810     067A                     l1847:
  3811                           
  3812                           ;LCD.c: 61:         Lcd_Cmd(y);
  3813     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3814     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3815     067C  082E               	movf	Lcd_Set_Cursor@y,w
  3816     067D  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3817     0682                     l152:
  3818     0682  0008               	return
  3819     0683                     __end_of_Lcd_Set_Cursor:
  3820                           
  3821                           	psect	text16
  3822     04CF                     __ptext16:	
  3823 ;; *************** function _Lcd_Init *****************
  3824 ;; Defined at:
  3825 ;;		line 65 in file "LCD.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0
  3841 ;;      Temps:          0       2       0       0       0
  3842 ;;      Totals:         0       2       0       0       0
  3843 ;;Total ram usage:        2 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 4
  3846 ;; This function calls:
  3847 ;;		_Lcd_Cmd
  3848 ;;		_Lcd_Port
  3849 ;; This function is called by:
  3850 ;;		_main
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854     04CF                     _Lcd_Init:	
  3855                           ;psect for function _Lcd_Init
  3856                           
  3857     04CF                     l1817:	
  3858                           ;incstack = 0
  3859                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3860                           
  3861                           
  3862                           ;LCD.c: 66:     Lcd_Port(0x00);
  3863     04CF  3000               	movlw	0
  3864     04D0  120A  158A  276B  120A  118A  	fcall	_Lcd_Port
  3865     04D5                     l1819:
  3866                           
  3867                           ;LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3868     04D5  301A               	movlw	26
  3869     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3870     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  3871     04D8  00AB               	movwf	??_Lcd_Init+1
  3872     04D9  30F7               	movlw	247
  3873     04DA  00AA               	movwf	??_Lcd_Init
  3874     04DB                     u2417:
  3875     04DB  0BAA               	decfsz	??_Lcd_Init,f
  3876     04DC  2CDB               	goto	u2417
  3877     04DD  0BAB               	decfsz	??_Lcd_Init+1,f
  3878     04DE  2CDB               	goto	u2417
  3879     04DF  2CE0               	nop2
  3880     04E0                     l1821:
  3881                           
  3882                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3883     04E0  3003               	movlw	3
  3884     04E1  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3885                           
  3886                           ;LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3887     04E6  3007               	movlw	7
  3888     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3889     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3890     04E9  00AB               	movwf	??_Lcd_Init+1
  3891     04EA  307C               	movlw	124
  3892     04EB  00AA               	movwf	??_Lcd_Init
  3893     04EC                     u2427:
  3894     04EC  0BAA               	decfsz	??_Lcd_Init,f
  3895     04ED  2CEC               	goto	u2427
  3896     04EE  0BAB               	decfsz	??_Lcd_Init+1,f
  3897     04EF  2CEC               	goto	u2427
  3898     04F0  0000               	nop
  3899     04F1                     l1823:
  3900                           
  3901                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3902     04F1  3003               	movlw	3
  3903     04F2  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3904     04F7                     l1825:
  3905                           
  3906                           ;LCD.c: 71:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3907     04F7  300F               	movlw	15
  3908     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3909     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3910     04FA  00AB               	movwf	??_Lcd_Init+1
  3911     04FB  3047               	movlw	71
  3912     04FC  00AA               	movwf	??_Lcd_Init
  3913     04FD                     u2437:
  3914     04FD  0BAA               	decfsz	??_Lcd_Init,f
  3915     04FE  2CFD               	goto	u2437
  3916     04FF  0BAB               	decfsz	??_Lcd_Init+1,f
  3917     0500  2CFD               	goto	u2437
  3918                           
  3919                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3920     0501  3003               	movlw	3
  3921     0502  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3922                           
  3923                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3924     0507  3002               	movlw	2
  3925     0508  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3926                           
  3927                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3928     050D  3002               	movlw	2
  3929     050E  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3930                           
  3931                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3932     0513  3008               	movlw	8
  3933     0514  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3934                           
  3935                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3936     0519  3000               	movlw	0
  3937     051A  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3938                           
  3939                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3940     051F  300C               	movlw	12
  3941     0520  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3942                           
  3943                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3944     0525  3000               	movlw	0
  3945     0526  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3946                           
  3947                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3948     052B  3006               	movlw	6
  3949     052C  120A  158A  2732  120A  118A  	fcall	_Lcd_Cmd
  3950     0531                     l155:
  3951     0531  0008               	return
  3952     0532                     __end_of_Lcd_Init:
  3953                           
  3954                           	psect	text17
  3955     0F25                     __ptext17:	
  3956 ;; *************** function _Lcd_Clear *****************
  3957 ;; Defined at:
  3958 ;;		line 43 in file "LCD.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3972 ;;      Params:         0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0
  3975 ;;      Totals:         0       0       0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 4
  3979 ;; This function calls:
  3980 ;;		_Lcd_Cmd
  3981 ;; This function is called by:
  3982 ;;		_main
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986     0F25                     _Lcd_Clear:	
  3987                           ;psect for function _Lcd_Clear
  3988                           
  3989     0F25                     l1827:	
  3990                           ;incstack = 0
  3991                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3992                           
  3993                           
  3994                           ;LCD.c: 44:     Lcd_Cmd(0);
  3995     0F25  3000               	movlw	0
  3996     0F26  120A  158A  2732  120A  158A  	fcall	_Lcd_Cmd
  3997                           
  3998                           ;LCD.c: 45:     Lcd_Cmd(1);
  3999     0F2B  3001               	movlw	1
  4000     0F2C  120A  158A  2732  120A  158A  	fcall	_Lcd_Cmd
  4001     0F31                     l146:
  4002     0F31  0008               	return
  4003     0F32                     __end_of_Lcd_Clear:
  4004                           
  4005                           	psect	text18
  4006     0F32                     __ptext18:	
  4007 ;; *************** function _Lcd_Cmd *****************
  4008 ;; Defined at:
  4009 ;;		line 35 in file "LCD.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  a               1    wreg     unsigned char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  a               1    9[BANK0 ] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4023 ;;      Params:         0       0       0       0       0
  4024 ;;      Locals:         0       1       0       0       0
  4025 ;;      Temps:          0       2       0       0       0
  4026 ;;      Totals:         0       3       0       0       0
  4027 ;;Total ram usage:        3 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 3
  4030 ;; This function calls:
  4031 ;;		_Lcd_Port
  4032 ;; This function is called by:
  4033 ;;		_Lcd_Clear
  4034 ;;		_Lcd_Set_Cursor
  4035 ;;		_Lcd_Init
  4036 ;;		_Lcd_Shift_Right
  4037 ;;		_Lcd_Shift_Left
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041     0F32                     _Lcd_Cmd:	
  4042                           ;psect for function _Lcd_Cmd
  4043                           
  4044                           
  4045                           ;incstack = 0
  4046                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4047                           ;Lcd_Cmd@a stored from wreg
  4048     0F32  1283               	bcf	3,5	;RP0=0, select bank0
  4049     0F33  1303               	bcf	3,6	;RP1=0, select bank0
  4050     0F34  00A9               	movwf	Lcd_Cmd@a
  4051     0F35                     l1575:
  4052                           
  4053                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4054     0F35  1108               	bcf	8,2	;volatile
  4055     0F36                     l1577:
  4056                           
  4057                           ;LCD.c: 37:     Lcd_Port(a);
  4058     0F36  0829               	movf	Lcd_Cmd@a,w
  4059     0F37  120A  158A  276B  120A  158A  	fcall	_Lcd_Port
  4060     0F3C                     l1579:
  4061                           
  4062                           ;LCD.c: 38:     RD3 = 1;
  4063     0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  4064     0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  4065     0F3E  1588               	bsf	8,3	;volatile
  4066     0F3F                     l1581:
  4067                           
  4068                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4069     0F3F  3006               	movlw	6
  4070     0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4071     0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4072     0F42  00A8               	movwf	??_Lcd_Cmd+1
  4073     0F43  302F               	movlw	47
  4074     0F44  00A7               	movwf	??_Lcd_Cmd
  4075     0F45                     u2447:
  4076     0F45  0BA7               	decfsz	??_Lcd_Cmd,f
  4077     0F46  2F45               	goto	u2447
  4078     0F47  0BA8               	decfsz	??_Lcd_Cmd+1,f
  4079     0F48  2F45               	goto	u2447
  4080     0F49  2F4A               	nop2
  4081     0F4A                     l1583:
  4082                           
  4083                           ;LCD.c: 40:     RD3 = 0;
  4084     0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  4085     0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  4086     0F4C  1188               	bcf	8,3	;volatile
  4087     0F4D                     l143:
  4088     0F4D  0008               	return
  4089     0F4E                     __end_of_Lcd_Cmd:
  4090                           
  4091                           	psect	text19
  4092     0F6B                     __ptext19:	
  4093 ;; *************** function _Lcd_Port *****************
  4094 ;; Defined at:
  4095 ;;		line 13 in file "LCD.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  a               1    wreg     unsigned char 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  a               1    6[BANK0 ] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       0       0       0       0
  4110 ;;      Locals:         0       1       0       0       0
  4111 ;;      Temps:          0       0       0       0       0
  4112 ;;      Totals:         0       1       0       0       0
  4113 ;;Total ram usage:        1 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 2
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_Lcd_Cmd
  4120 ;;		_Lcd_Init
  4121 ;;		_Lcd_Write_Char
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125     0F6B                     _Lcd_Port:	
  4126                           ;psect for function _Lcd_Port
  4127                           
  4128                           
  4129                           ;incstack = 0
  4130                           ; Regs used in _Lcd_Port: [wreg]
  4131                           ;Lcd_Port@a stored from wreg
  4132     0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  4133     0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  4134     0F6D  00A6               	movwf	Lcd_Port@a
  4135     0F6E                     l1545:
  4136                           
  4137                           ;LCD.c: 14:     if (a & 1)
  4138     0F6E  1C26               	btfss	Lcd_Port@a,0
  4139     0F6F  2F71               	goto	u1251
  4140     0F70  2F72               	goto	u1250
  4141     0F71                     u1251:
  4142     0F71  2F74               	goto	l132
  4143     0F72                     u1250:
  4144     0F72                     l1547:
  4145                           
  4146                           ;LCD.c: 15:         RD4 = 1;
  4147     0F72  1608               	bsf	8,4	;volatile
  4148     0F73  2F75               	goto	l133
  4149     0F74                     l132:	
  4150                           ;LCD.c: 16:     else
  4151                           
  4152                           
  4153                           ;LCD.c: 17:         RD4 = 0;
  4154     0F74  1208               	bcf	8,4	;volatile
  4155     0F75                     l133:
  4156                           
  4157                           ;LCD.c: 19:     if (a & 2)
  4158     0F75  1CA6               	btfss	Lcd_Port@a,1
  4159     0F76  2F78               	goto	u1261
  4160     0F77  2F79               	goto	u1260
  4161     0F78                     u1261:
  4162     0F78  2F7B               	goto	l134
  4163     0F79                     u1260:
  4164     0F79                     l1549:
  4165                           
  4166                           ;LCD.c: 20:         RD5 = 1;
  4167     0F79  1688               	bsf	8,5	;volatile
  4168     0F7A  2F7C               	goto	l135
  4169     0F7B                     l134:	
  4170                           ;LCD.c: 21:     else
  4171                           
  4172                           
  4173                           ;LCD.c: 22:         RD5 = 0;
  4174     0F7B  1288               	bcf	8,5	;volatile
  4175     0F7C                     l135:
  4176                           
  4177                           ;LCD.c: 24:     if (a & 4)
  4178     0F7C  1D26               	btfss	Lcd_Port@a,2
  4179     0F7D  2F7F               	goto	u1271
  4180     0F7E  2F80               	goto	u1270
  4181     0F7F                     u1271:
  4182     0F7F  2F82               	goto	l136
  4183     0F80                     u1270:
  4184     0F80                     l1551:
  4185                           
  4186                           ;LCD.c: 25:         RD6 = 1;
  4187     0F80  1708               	bsf	8,6	;volatile
  4188     0F81  2F83               	goto	l137
  4189     0F82                     l136:	
  4190                           ;LCD.c: 26:     else
  4191                           
  4192                           
  4193                           ;LCD.c: 27:         RD6 = 0;
  4194     0F82  1308               	bcf	8,6	;volatile
  4195     0F83                     l137:
  4196                           
  4197                           ;LCD.c: 29:     if (a & 8)
  4198     0F83  1DA6               	btfss	Lcd_Port@a,3
  4199     0F84  2F86               	goto	u1281
  4200     0F85  2F87               	goto	u1280
  4201     0F86                     u1281:
  4202     0F86  2F89               	goto	l138
  4203     0F87                     u1280:
  4204     0F87                     l1553:
  4205                           
  4206                           ;LCD.c: 30:         RD7 = 1;
  4207     0F87  1788               	bsf	8,7	;volatile
  4208     0F88  2F8A               	goto	l140
  4209     0F89                     l138:	
  4210                           ;LCD.c: 31:     else
  4211                           
  4212                           
  4213                           ;LCD.c: 32:         RD7 = 0;
  4214     0F89  1388               	bcf	8,7	;volatile
  4215     0F8A                     l140:
  4216     0F8A  0008               	return
  4217     0F8B                     __end_of_Lcd_Port:
  4218                           
  4219                           	psect	text20
  4220     0798                     __ptext20:	
  4221 ;; *************** function _ADC_read *****************
  4222 ;; Defined at:
  4223 ;;		line 44 in file "setupADC.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  channel         2    6[BANK0 ] int 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4237 ;;      Params:         0       2       0       0       0
  4238 ;;      Locals:         0       0       0       0       0
  4239 ;;      Temps:          0       1       0       0       0
  4240 ;;      Totals:         0       3       0       0       0
  4241 ;;Total ram usage:        3 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 2
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251     0798                     _ADC_read:	
  4252                           ;psect for function _ADC_read
  4253                           
  4254     0798                     l1857:	
  4255                           ;incstack = 0
  4256                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  4257                           
  4258                           
  4259                           ;setupADC.c: 45:     if(channel ==0){
  4260     0798  1283               	bcf	3,5	;RP0=0, select bank0
  4261     0799  1303               	bcf	3,6	;RP1=0, select bank0
  4262     079A  0826               	movf	ADC_read@channel,w
  4263     079B  0427               	iorwf	ADC_read@channel+1,w
  4264     079C  1D03               	btfss	3,2
  4265     079D  2F9F               	goto	u1931
  4266     079E  2FA0               	goto	u1930
  4267     079F                     u1931:
  4268     079F  2FAC               	goto	l1865
  4269     07A0                     u1930:
  4270     07A0                     l1859:
  4271                           
  4272                           ;setupADC.c: 46:         ADCON0bits.CHS = 0b0000;
  4273     07A0  30C3               	movlw	-61
  4274     07A1  059F               	andwf	31,f	;volatile
  4275     07A2                     l1861:
  4276                           
  4277                           ;setupADC.c: 47:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  4278     07A2  3020               	movlw	32
  4279     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4280     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4281     07A5  00A8               	movwf	??_ADC_read
  4282     07A6                     u2457:
  4283     07A6  0BA8               	decfsz	??_ADC_read,f
  4284     07A7  2FA6               	goto	u2457
  4285     07A8  0000               	nop
  4286     07A9                     l1863:
  4287                           
  4288                           ;setupADC.c: 48:         ADCON0bits.GO = 1;
  4289     07A9  1283               	bcf	3,5	;RP0=0, select bank0
  4290     07AA  1303               	bcf	3,6	;RP1=0, select bank0
  4291     07AB  149F               	bsf	31,1	;volatile
  4292     07AC                     l1865:
  4293                           
  4294                           ;setupADC.c: 50:     if(channel ==1){
  4295     07AC  0326               	decf	ADC_read@channel,w
  4296     07AD  0427               	iorwf	ADC_read@channel+1,w
  4297     07AE  1D03               	btfss	3,2
  4298     07AF  2FB1               	goto	u1941
  4299     07B0  2FB2               	goto	u1940
  4300     07B1                     u1941:
  4301     07B1  2FC0               	goto	l1873
  4302     07B2                     u1940:
  4303     07B2                     l1867:
  4304                           
  4305                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  4306     07B2  081F               	movf	31,w	;volatile
  4307     07B3  39C3               	andlw	-61
  4308     07B4  3804               	iorlw	4
  4309     07B5  009F               	movwf	31	;volatile
  4310     07B6                     l1869:
  4311                           
  4312                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  4313     07B6  3020               	movlw	32
  4314     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  4315     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  4316     07B9  00A8               	movwf	??_ADC_read
  4317     07BA                     u2467:
  4318     07BA  0BA8               	decfsz	??_ADC_read,f
  4319     07BB  2FBA               	goto	u2467
  4320     07BC  0000               	nop
  4321     07BD                     l1871:
  4322                           
  4323                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  4324     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  4325     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  4326     07BF  149F               	bsf	31,1	;volatile
  4327     07C0                     l1873:
  4328                           
  4329                           ;setupADC.c: 55:     if(channel ==2){
  4330     07C0  3002               	movlw	2
  4331     07C1  0626               	xorwf	ADC_read@channel,w
  4332     07C2  0427               	iorwf	ADC_read@channel+1,w
  4333     07C3  1D03               	btfss	3,2
  4334     07C4  2FC6               	goto	u1951
  4335     07C5  2FC7               	goto	u1950
  4336     07C6                     u1951:
  4337     07C6  2FD5               	goto	l115
  4338     07C7                     u1950:
  4339     07C7                     l1875:
  4340                           
  4341                           ;setupADC.c: 56:         ADCON0bits.CHS = 0b0010;
  4342     07C7  081F               	movf	31,w	;volatile
  4343     07C8  39C3               	andlw	-61
  4344     07C9  3808               	iorlw	8
  4345     07CA  009F               	movwf	31	;volatile
  4346     07CB                     l1877:
  4347                           
  4348                           ;setupADC.c: 57:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  4349     07CB  3020               	movlw	32
  4350     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  4351     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  4352     07CE  00A8               	movwf	??_ADC_read
  4353     07CF                     u2477:
  4354     07CF  0BA8               	decfsz	??_ADC_read,f
  4355     07D0  2FCF               	goto	u2477
  4356     07D1  0000               	nop
  4357     07D2                     l1879:
  4358                           
  4359                           ;setupADC.c: 58:         ADCON0bits.GO = 1;
  4360     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4361     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  4362     07D4  149F               	bsf	31,1	;volatile
  4363     07D5                     l115:
  4364     07D5  0008               	return
  4365     07D6                     __end_of_ADC_read:
  4366                           
  4367                           	psect	text21
  4368     0758                     __ptext21:	
  4369 ;; *************** function _ADC_config *****************
  4370 ;; Defined at:
  4371 ;;		line 11 in file "setupADC.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  channel         2    6[BANK0 ] int 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4385 ;;      Params:         0       2       0       0       0
  4386 ;;      Locals:         0       0       0       0       0
  4387 ;;      Temps:          0       1       0       0       0
  4388 ;;      Totals:         0       3       0       0       0
  4389 ;;Total ram usage:        3 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 2
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399     0758                     _ADC_config:	
  4400                           ;psect for function _ADC_config
  4401                           
  4402     0758                     l1807:	
  4403                           ;incstack = 0
  4404                           ; Regs used in _ADC_config: [wreg]
  4405                           
  4406                           
  4407                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  4408     0758  1283               	bcf	3,5	;RP0=0, select bank0
  4409     0759  1303               	bcf	3,6	;RP1=0, select bank0
  4410     075A  1C26               	btfss	ADC_config@channel,0
  4411     075B  2F5D               	goto	u1851
  4412     075C  2F5E               	goto	u1850
  4413     075D                     u1851:
  4414     075D  2F65               	goto	l106
  4415     075E                     u1850:
  4416     075E                     l1809:
  4417                           
  4418                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  4419     075E  1005               	bcf	5,0	;volatile
  4420                           
  4421                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  4422     075F  1683               	bsf	3,5	;RP0=1, select bank1
  4423     0760  1303               	bcf	3,6	;RP1=0, select bank1
  4424     0761  1405               	bsf	5,0	;volatile
  4425                           
  4426                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  4427     0762  1683               	bsf	3,5	;RP0=1, select bank3
  4428     0763  1703               	bsf	3,6	;RP1=1, select bank3
  4429     0764  1408               	bsf	8,0	;volatile
  4430     0765                     l106:	
  4431                           ;setupADC.c: 16:     }
  4432                           
  4433                           
  4434                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  4435     0765  1283               	bcf	3,5	;RP0=0, select bank0
  4436     0766  1303               	bcf	3,6	;RP1=0, select bank0
  4437     0767  1CA6               	btfss	ADC_config@channel,1
  4438     0768  2F6A               	goto	u1861
  4439     0769  2F6B               	goto	u1860
  4440     076A                     u1861:
  4441     076A  2F72               	goto	l107
  4442     076B                     u1860:
  4443     076B                     l1811:
  4444                           
  4445                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  4446     076B  1085               	bcf	5,1	;volatile
  4447                           
  4448                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  4449     076C  1683               	bsf	3,5	;RP0=1, select bank1
  4450     076D  1303               	bcf	3,6	;RP1=0, select bank1
  4451     076E  1485               	bsf	5,1	;volatile
  4452                           
  4453                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  4454     076F  1683               	bsf	3,5	;RP0=1, select bank3
  4455     0770  1703               	bsf	3,6	;RP1=1, select bank3
  4456     0771  1488               	bsf	8,1	;volatile
  4457     0772                     l107:	
  4458                           ;setupADC.c: 22:     }
  4459                           
  4460                           
  4461                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  4462     0772  1283               	bcf	3,5	;RP0=0, select bank0
  4463     0773  1303               	bcf	3,6	;RP1=0, select bank0
  4464     0774  1D26               	btfss	ADC_config@channel,2
  4465     0775  2F77               	goto	u1871
  4466     0776  2F78               	goto	u1870
  4467     0777                     u1871:
  4468     0777  2F7F               	goto	l108
  4469     0778                     u1870:
  4470     0778                     l1813:
  4471                           
  4472                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  4473     0778  1105               	bcf	5,2	;volatile
  4474                           
  4475                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  4476     0779  1683               	bsf	3,5	;RP0=1, select bank1
  4477     077A  1303               	bcf	3,6	;RP1=0, select bank1
  4478     077B  1505               	bsf	5,2	;volatile
  4479                           
  4480                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  4481     077C  1683               	bsf	3,5	;RP0=1, select bank3
  4482     077D  1703               	bsf	3,6	;RP1=1, select bank3
  4483     077E  1508               	bsf	8,2	;volatile
  4484     077F                     l108:	
  4485                           ;setupADC.c: 27:     }
  4486                           
  4487                           
  4488                           ;setupADC.c: 29:     INTCONbits.PEIE = 1;
  4489     077F  170B               	bsf	11,6	;volatile
  4490                           
  4491                           ;setupADC.c: 30:     PIE1bits.ADIE = 1;
  4492     0780  1683               	bsf	3,5	;RP0=1, select bank1
  4493     0781  1303               	bcf	3,6	;RP1=0, select bank1
  4494     0782  170C               	bsf	12,6	;volatile
  4495                           
  4496                           ;setupADC.c: 31:     PIR1bits.ADIF = 0;
  4497     0783  1283               	bcf	3,5	;RP0=0, select bank0
  4498     0784  1303               	bcf	3,6	;RP1=0, select bank0
  4499     0785  130C               	bcf	12,6	;volatile
  4500                           
  4501                           ;setupADC.c: 33:     ADCON0bits.ADCS1 = 0;
  4502     0786  139F               	bcf	31,7	;volatile
  4503                           
  4504                           ;setupADC.c: 34:     ADCON0bits.ADCS0 = 1;
  4505     0787  171F               	bsf	31,6	;volatile
  4506                           
  4507                           ;setupADC.c: 36:     ADCON1bits.VCFG1 = 0;
  4508     0788  1683               	bsf	3,5	;RP0=1, select bank1
  4509     0789  1303               	bcf	3,6	;RP1=0, select bank1
  4510     078A  129F               	bcf	31,5	;volatile
  4511                           
  4512                           ;setupADC.c: 37:     ADCON1bits.VCFG0 = 0;
  4513     078B  121F               	bcf	31,4	;volatile
  4514                           
  4515                           ;setupADC.c: 39:     ADCON1bits.ADFM = 0;
  4516     078C  139F               	bcf	31,7	;volatile
  4517                           
  4518                           ;setupADC.c: 41:     ADCON0bits.ADON = 1;
  4519     078D  1283               	bcf	3,5	;RP0=0, select bank0
  4520     078E  1303               	bcf	3,6	;RP1=0, select bank0
  4521     078F  141F               	bsf	31,0	;volatile
  4522     0790                     l1815:
  4523                           
  4524                           ;setupADC.c: 42:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  4525     0790  3020               	movlw	32
  4526     0791  1283               	bcf	3,5	;RP0=0, select bank0
  4527     0792  1303               	bcf	3,6	;RP1=0, select bank0
  4528     0793  00A8               	movwf	??_ADC_config
  4529     0794                     u2487:
  4530     0794  0BA8               	decfsz	??_ADC_config,f
  4531     0795  2F94               	goto	u2487
  4532     0796  0000               	nop
  4533     0797                     l109:
  4534     0797  0008               	return
  4535     0798                     __end_of_ADC_config:
  4536                           
  4537                           	psect	text22
  4538     058D                     __ptext22:	
  4539 ;; *************** function _isr *****************
  4540 ;; Defined at:
  4541 ;;		line 55 in file "main.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, pclath, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4555 ;;      Params:         0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0
  4557 ;;      Temps:          0       6       0       0       0
  4558 ;;      Totals:         0       6       0       0       0
  4559 ;;Total ram usage:        6 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 1
  4562 ;; This function calls:
  4563 ;;		___xxtofl
  4564 ;; This function is called by:
  4565 ;;		Interrupt level 1
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569     058D                     _isr:	
  4570                           ;psect for function _isr
  4571                           
  4572     058D                     i1l2069:
  4573                           
  4574                           ;main.c: 57:     if(INTCONbits.RBIF){
  4575     058D  1C0B               	btfss	11,0	;volatile
  4576     058E  2D90               	goto	u233_21
  4577     058F  2D91               	goto	u233_20
  4578     0590                     u233_21:
  4579     0590  2DA2               	goto	i1l2081
  4580     0591                     u233_20:
  4581     0591                     i1l2071:
  4582                           
  4583                           ;main.c: 58:         if(PORTBbits.RB7 == 0){
  4584     0591  1B86               	btfsc	6,7	;volatile
  4585     0592  2D94               	goto	u234_21
  4586     0593  2D95               	goto	u234_20
  4587     0594                     u234_21:
  4588     0594  2D99               	goto	i1l2075
  4589     0595                     u234_20:
  4590     0595                     i1l2073:
  4591                           
  4592                           ;main.c: 59:             cont = 1;
  4593     0595  3001               	movlw	1
  4594     0596  00D2               	movwf	_cont
  4595     0597  3000               	movlw	0
  4596     0598  00D3               	movwf	_cont+1
  4597     0599                     i1l2075:
  4598                           
  4599                           ;main.c: 61:         if(PORTBbits.RB6 == 0){
  4600     0599  1B06               	btfsc	6,6	;volatile
  4601     059A  2D9C               	goto	u235_21
  4602     059B  2D9D               	goto	u235_20
  4603     059C                     u235_21:
  4604     059C  2DA1               	goto	i1l2079
  4605     059D                     u235_20:
  4606     059D                     i1l2077:
  4607                           
  4608                           ;main.c: 62:             cont = 2;
  4609     059D  3002               	movlw	2
  4610     059E  00D2               	movwf	_cont
  4611     059F  3000               	movlw	0
  4612     05A0  00D3               	movwf	_cont+1
  4613     05A1                     i1l2079:
  4614                           
  4615                           ;main.c: 64:         INTCONbits.RBIF = 0;
  4616     05A1  100B               	bcf	11,0	;volatile
  4617     05A2                     i1l2081:
  4618                           
  4619                           ;main.c: 67:     if(PIR1bits.ADIF){
  4620     05A2  1F0C               	btfss	12,6	;volatile
  4621     05A3  2DA5               	goto	u236_21
  4622     05A4  2DA6               	goto	u236_20
  4623     05A5                     u236_21:
  4624     05A5  2DDE               	goto	i1l64
  4625     05A6                     u236_20:
  4626     05A6                     i1l2083:
  4627                           
  4628                           ;main.c: 68:         if(ADCON0bits.CHS == 0){
  4629     05A6  0C1F               	rrf	31,w	;volatile
  4630     05A7  00A0               	movwf	??_isr
  4631     05A8  0C20               	rrf	??_isr,w
  4632     05A9  390F               	andlw	15
  4633     05AA  3A00               	xorlw	0
  4634     05AB  1D03               	skipz
  4635     05AC  2DAE               	goto	u237_21
  4636     05AD  2DAF               	goto	u237_20
  4637     05AE                     u237_21:
  4638     05AE  2DCD               	goto	i1l2087
  4639     05AF                     u237_20:
  4640     05AF                     i1l2085:
  4641                           
  4642                           ;main.c: 69:             lecADC0 = ADRESH;
  4643     05AF  081E               	movf	30,w	;volatile
  4644     05B0  00A0               	movwf	??_isr
  4645     05B1  01A1               	clrf	??_isr+1
  4646     05B2  01A2               	clrf	??_isr+2
  4647     05B3  01A3               	clrf	??_isr+3
  4648     05B4  0823               	movf	??_isr+3,w
  4649     05B5  00F3               	movwf	___xxtofl@val+3
  4650     05B6  0822               	movf	??_isr+2,w
  4651     05B7  00F2               	movwf	___xxtofl@val+2
  4652     05B8  0821               	movf	??_isr+1,w
  4653     05B9  00F1               	movwf	___xxtofl@val+1
  4654     05BA  0820               	movf	??_isr,w
  4655     05BB  00F0               	movwf	___xxtofl@val
  4656     05BC  3000               	movlw	0
  4657     05BD  120A  118A  21CE  120A  118A  	fcall	___xxtofl
  4658     05C2  0873               	movf	?___xxtofl+3,w
  4659     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4660     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  4661     05C5  00D1               	movwf	_lecADC0+3
  4662     05C6  0872               	movf	?___xxtofl+2,w
  4663     05C7  00D0               	movwf	_lecADC0+2
  4664     05C8  0871               	movf	?___xxtofl+1,w
  4665     05C9  00CF               	movwf	_lecADC0+1
  4666     05CA  0870               	movf	?___xxtofl,w
  4667     05CB  00CE               	movwf	_lecADC0
  4668                           
  4669                           ;main.c: 70:         }
  4670     05CC  2DDD               	goto	i1l2091
  4671     05CD                     i1l2087:
  4672     05CD  0C1F               	rrf	31,w	;volatile
  4673     05CE  00A0               	movwf	??_isr
  4674     05CF  0C20               	rrf	??_isr,w
  4675     05D0  390F               	andlw	15
  4676     05D1  3A01               	xorlw	1
  4677     05D2  1D03               	skipz
  4678     05D3  2DD5               	goto	u238_21
  4679     05D4  2DD6               	goto	u238_20
  4680     05D5                     u238_21:
  4681     05D5  2DDD               	goto	i1l2091
  4682     05D6                     u238_20:
  4683     05D6                     i1l2089:
  4684                           
  4685                           ;main.c: 72:             lecADC1 = ADRESH;
  4686     05D6  081E               	movf	30,w	;volatile
  4687     05D7  00A0               	movwf	??_isr
  4688     05D8  01A1               	clrf	??_isr+1
  4689     05D9  0820               	movf	??_isr,w
  4690     05DA  00D8               	movwf	_lecADC1
  4691     05DB  0821               	movf	??_isr+1,w
  4692     05DC  00D9               	movwf	_lecADC1+1
  4693     05DD                     i1l2091:
  4694                           
  4695                           ;main.c: 74:         ADIF = 0;
  4696     05DD  130C               	bcf	12,6	;volatile
  4697     05DE                     i1l64:
  4698     05DE  0825               	movf	??_isr+5,w
  4699     05DF  008A               	movwf	10
  4700     05E0  0E24               	swapf	??_isr+4,w
  4701     05E1  0083               	movwf	3
  4702     05E2  0EFE               	swapf	btemp,f
  4703     05E3  0E7E               	swapf	btemp,w
  4704     05E4  0009               	retfie
  4705     05E5                     __end_of_isr:
  4706                           
  4707                           	psect	intentry
  4708     0004                     __pintentry:	
  4709                           ;incstack = 0
  4710                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4711                           
  4712     0004                     interrupt_function:
  4713     007E                     saved_w	set	btemp
  4714     0004  00FE               	movwf	btemp
  4715     0005  0E03               	swapf	3,w
  4716     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4717     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4718     0008  00A4               	movwf	??_isr+4
  4719     0009  080A               	movf	10,w
  4720     000A  00A5               	movwf	??_isr+5
  4721     000B  120A  118A  2D8D   	ljmp	_isr
  4722                           
  4723                           	psect	text23
  4724     01CE                     __ptext23:	
  4725 ;; *************** function ___xxtofl *****************
  4726 ;; Defined at:
  4727 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  sign            1    wreg     unsigned char 
  4730 ;;  val             4    0[COMMON] long 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  sign            1    8[COMMON] unsigned char 
  4733 ;;  arg             4   10[COMMON] unsigned long 
  4734 ;;  exp             1    9[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4    0[COMMON] unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         4       0       0       0       0
  4745 ;;      Locals:         6       0       0       0       0
  4746 ;;      Temps:          4       0       0       0       0
  4747 ;;      Totals:        14       0       0       0       0
  4748 ;;Total ram usage:       14 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_isr
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757     01CE                     ___xxtofl:	
  4758                           ;psect for function ___xxtofl
  4759                           
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4763                           ;___xxtofl@sign stored from wreg
  4764     01CE  00F8               	movwf	___xxtofl@sign
  4765     01CF                     i1l2025:
  4766     01CF  0878               	movf	___xxtofl@sign,w
  4767     01D0  1903               	btfsc	3,2
  4768     01D1  29D3               	goto	u219_21
  4769     01D2  29D4               	goto	u219_20
  4770     01D3                     u219_21:
  4771     01D3  29E8               	goto	i1l2031
  4772     01D4                     u219_20:
  4773     01D4                     i1l2027:
  4774     01D4  1FF3               	btfss	___xxtofl@val+3,7
  4775     01D5  29D7               	goto	u220_21
  4776     01D6  29D8               	goto	u220_20
  4777     01D7                     u220_21:
  4778     01D7  29E8               	goto	i1l2031
  4779     01D8                     u220_20:
  4780     01D8                     i1l2029:
  4781     01D8  0970               	comf	___xxtofl@val,w
  4782     01D9  00FA               	movwf	___xxtofl@arg
  4783     01DA  0971               	comf	___xxtofl@val+1,w
  4784     01DB  00FB               	movwf	___xxtofl@arg+1
  4785     01DC  0972               	comf	___xxtofl@val+2,w
  4786     01DD  00FC               	movwf	___xxtofl@arg+2
  4787     01DE  0973               	comf	___xxtofl@val+3,w
  4788     01DF  00FD               	movwf	___xxtofl@arg+3
  4789     01E0  0AFA               	incf	___xxtofl@arg,f
  4790     01E1  1903               	skipnz
  4791     01E2  0AFB               	incf	___xxtofl@arg+1,f
  4792     01E3  1903               	skipnz
  4793     01E4  0AFC               	incf	___xxtofl@arg+2,f
  4794     01E5  1903               	skipnz
  4795     01E6  0AFD               	incf	___xxtofl@arg+3,f
  4796     01E7  29F0               	goto	i1l770
  4797     01E8                     i1l2031:
  4798     01E8  0873               	movf	___xxtofl@val+3,w
  4799     01E9  00FD               	movwf	___xxtofl@arg+3
  4800     01EA  0872               	movf	___xxtofl@val+2,w
  4801     01EB  00FC               	movwf	___xxtofl@arg+2
  4802     01EC  0871               	movf	___xxtofl@val+1,w
  4803     01ED  00FB               	movwf	___xxtofl@arg+1
  4804     01EE  0870               	movf	___xxtofl@val,w
  4805     01EF  00FA               	movwf	___xxtofl@arg
  4806     01F0                     i1l770:
  4807     01F0  0873               	movf	___xxtofl@val+3,w
  4808     01F1  0472               	iorwf	___xxtofl@val+2,w
  4809     01F2  0471               	iorwf	___xxtofl@val+1,w
  4810     01F3  0470               	iorwf	___xxtofl@val,w
  4811     01F4  1D03               	skipz
  4812     01F5  29F7               	goto	u221_21
  4813     01F6  29F8               	goto	u221_20
  4814     01F7                     u221_21:
  4815     01F7  2A01               	goto	i1l2037
  4816     01F8                     u221_20:
  4817     01F8                     i1l2033:
  4818     01F8  3000               	movlw	0
  4819     01F9  00F3               	movwf	?___xxtofl+3
  4820     01FA  3000               	movlw	0
  4821     01FB  00F2               	movwf	?___xxtofl+2
  4822     01FC  3000               	movlw	0
  4823     01FD  00F1               	movwf	?___xxtofl+1
  4824     01FE  3000               	movlw	0
  4825     01FF  00F0               	movwf	?___xxtofl
  4826     0200  2A85               	goto	i1l772
  4827     0201                     i1l2037:
  4828     0201  3096               	movlw	150
  4829     0202  00F9               	movwf	___xxtofl@exp
  4830     0203  2A11               	goto	i1l2041
  4831     0204                     i1l2039:
  4832     0204  3001               	movlw	1
  4833     0205  00F4               	movwf	??___xxtofl
  4834     0206  0874               	movf	??___xxtofl,w
  4835     0207  07F9               	addwf	___xxtofl@exp,f
  4836     0208  3001               	movlw	1
  4837     0209                     u222_25:
  4838     0209  1003               	clrc
  4839     020A  0CFD               	rrf	___xxtofl@arg+3,f
  4840     020B  0CFC               	rrf	___xxtofl@arg+2,f
  4841     020C  0CFB               	rrf	___xxtofl@arg+1,f
  4842     020D  0CFA               	rrf	___xxtofl@arg,f
  4843     020E  3EFF               	addlw	-1
  4844     020F  1D03               	skipz
  4845     0210  2A09               	goto	u222_25
  4846     0211                     i1l2041:
  4847     0211  30FE               	movlw	254
  4848     0212  057D               	andwf	___xxtofl@arg+3,w
  4849     0213  1D03               	btfss	3,2
  4850     0214  2A16               	goto	u223_21
  4851     0215  2A17               	goto	u223_20
  4852     0216                     u223_21:
  4853     0216  2A04               	goto	i1l2039
  4854     0217                     u223_20:
  4855     0217  2A33               	goto	i1l776
  4856     0218                     i1l2043:
  4857     0218  3001               	movlw	1
  4858     0219  00F4               	movwf	??___xxtofl
  4859     021A  0874               	movf	??___xxtofl,w
  4860     021B  07F9               	addwf	___xxtofl@exp,f
  4861     021C                     i1l2045:
  4862     021C  3001               	movlw	1
  4863     021D  07FA               	addwf	___xxtofl@arg,f
  4864     021E  3000               	movlw	0
  4865     021F  1803               	skipnc
  4866     0220  3001               	movlw	1
  4867     0221  07FB               	addwf	___xxtofl@arg+1,f
  4868     0222  3000               	movlw	0
  4869     0223  1803               	skipnc
  4870     0224  3001               	movlw	1
  4871     0225  07FC               	addwf	___xxtofl@arg+2,f
  4872     0226  3000               	movlw	0
  4873     0227  1803               	skipnc
  4874     0228  3001               	movlw	1
  4875     0229  07FD               	addwf	___xxtofl@arg+3,f
  4876     022A                     i1l2047:
  4877     022A  3001               	movlw	1
  4878     022B                     u224_25:
  4879     022B  1003               	clrc
  4880     022C  0CFD               	rrf	___xxtofl@arg+3,f
  4881     022D  0CFC               	rrf	___xxtofl@arg+2,f
  4882     022E  0CFB               	rrf	___xxtofl@arg+1,f
  4883     022F  0CFA               	rrf	___xxtofl@arg,f
  4884     0230  3EFF               	addlw	-1
  4885     0231  1D03               	skipz
  4886     0232  2A2B               	goto	u224_25
  4887     0233                     i1l776:
  4888     0233  30FF               	movlw	255
  4889     0234  057D               	andwf	___xxtofl@arg+3,w
  4890     0235  1D03               	btfss	3,2
  4891     0236  2A38               	goto	u225_21
  4892     0237  2A39               	goto	u225_20
  4893     0238                     u225_21:
  4894     0238  2A18               	goto	i1l2043
  4895     0239                     u225_20:
  4896     0239  2A45               	goto	i1l2051
  4897     023A                     i1l2049:
  4898     023A  3001               	movlw	1
  4899     023B  02F9               	subwf	___xxtofl@exp,f
  4900     023C  3001               	movlw	1
  4901     023D  00F4               	movwf	??___xxtofl
  4902     023E                     u226_25:
  4903     023E  1003               	clrc
  4904     023F  0DFA               	rlf	___xxtofl@arg,f
  4905     0240  0DFB               	rlf	___xxtofl@arg+1,f
  4906     0241  0DFC               	rlf	___xxtofl@arg+2,f
  4907     0242  0DFD               	rlf	___xxtofl@arg+3,f
  4908     0243  0BF4               	decfsz	??___xxtofl,f
  4909     0244  2A3E               	goto	u226_25
  4910     0245                     i1l2051:
  4911     0245  1BFC               	btfsc	___xxtofl@arg+2,7
  4912     0246  2A48               	goto	u227_21
  4913     0247  2A49               	goto	u227_20
  4914     0248                     u227_21:
  4915     0248  2A4F               	goto	i1l783
  4916     0249                     u227_20:
  4917     0249                     i1l2053:
  4918     0249  3002               	movlw	2
  4919     024A  0279               	subwf	___xxtofl@exp,w
  4920     024B  1803               	skipnc
  4921     024C  2A4E               	goto	u228_21
  4922     024D  2A4F               	goto	u228_20
  4923     024E                     u228_21:
  4924     024E  2A3A               	goto	i1l2049
  4925     024F                     u228_20:
  4926     024F                     i1l783:
  4927     024F  1879               	btfsc	___xxtofl@exp,0
  4928     0250  2A52               	goto	u229_21
  4929     0251  2A53               	goto	u229_20
  4930     0252                     u229_21:
  4931     0252  2A5B               	goto	i1l784
  4932     0253                     u229_20:
  4933     0253                     i1l2055:
  4934     0253  30FF               	movlw	255
  4935     0254  05FA               	andwf	___xxtofl@arg,f
  4936     0255  30FF               	movlw	255
  4937     0256  05FB               	andwf	___xxtofl@arg+1,f
  4938     0257  307F               	movlw	127
  4939     0258  05FC               	andwf	___xxtofl@arg+2,f
  4940     0259  30FF               	movlw	255
  4941     025A  05FD               	andwf	___xxtofl@arg+3,f
  4942     025B                     i1l784:
  4943     025B  1003               	clrc
  4944     025C  0CF9               	rrf	___xxtofl@exp,f
  4945     025D                     i1l2057:
  4946     025D  0879               	movf	___xxtofl@exp,w
  4947     025E  00F4               	movwf	??___xxtofl
  4948     025F  01F5               	clrf	??___xxtofl+1
  4949     0260  01F6               	clrf	??___xxtofl+2
  4950     0261  01F7               	clrf	??___xxtofl+3
  4951     0262  3018               	movlw	24
  4952     0263                     u230_25:
  4953     0263  1003               	clrc
  4954     0264  0DF4               	rlf	??___xxtofl,f
  4955     0265  0DF5               	rlf	??___xxtofl+1,f
  4956     0266  0DF6               	rlf	??___xxtofl+2,f
  4957     0267  0DF7               	rlf	??___xxtofl+3,f
  4958     0268                     u230_20:
  4959     0268  3EFF               	addlw	-1
  4960     0269  1D03               	skipz
  4961     026A  2A63               	goto	u230_25
  4962     026B  0874               	movf	??___xxtofl,w
  4963     026C  04FA               	iorwf	___xxtofl@arg,f
  4964     026D  0875               	movf	??___xxtofl+1,w
  4965     026E  04FB               	iorwf	___xxtofl@arg+1,f
  4966     026F  0876               	movf	??___xxtofl+2,w
  4967     0270  04FC               	iorwf	___xxtofl@arg+2,f
  4968     0271  0877               	movf	??___xxtofl+3,w
  4969     0272  04FD               	iorwf	___xxtofl@arg+3,f
  4970     0273                     i1l2059:
  4971     0273  0878               	movf	___xxtofl@sign,w
  4972     0274  1903               	btfsc	3,2
  4973     0275  2A77               	goto	u231_21
  4974     0276  2A78               	goto	u231_20
  4975     0277                     u231_21:
  4976     0277  2A7D               	goto	i1l2065
  4977     0278                     u231_20:
  4978     0278                     i1l2061:
  4979     0278  1FF3               	btfss	___xxtofl@val+3,7
  4980     0279  2A7B               	goto	u232_21
  4981     027A  2A7C               	goto	u232_20
  4982     027B                     u232_21:
  4983     027B  2A7D               	goto	i1l2065
  4984     027C                     u232_20:
  4985     027C                     i1l2063:
  4986     027C  17FD               	bsf	___xxtofl@arg+3,7
  4987     027D                     i1l2065:
  4988     027D  087D               	movf	___xxtofl@arg+3,w
  4989     027E  00F3               	movwf	?___xxtofl+3
  4990     027F  087C               	movf	___xxtofl@arg+2,w
  4991     0280  00F2               	movwf	?___xxtofl+2
  4992     0281  087B               	movf	___xxtofl@arg+1,w
  4993     0282  00F1               	movwf	?___xxtofl+1
  4994     0283  087A               	movf	___xxtofl@arg,w
  4995     0284  00F0               	movwf	?___xxtofl
  4996     0285                     i1l772:
  4997     0285  0008               	return
  4998     0286                     __end_of___xxtofl:
  4999     007E                     btemp	set	126	;btemp
  5000     007E                     wtemp0	set	126
  5001                           
  5002                           	psect	idloc
  5003                           
  5004                           ;Config register IDLOC0 @ 0x2000
  5005                           ;	unspecified, using default values
  5006     2000                     	org	8192
  5007     2000  3FFF               	dw	16383
  5008                           
  5009                           ;Config register IDLOC1 @ 0x2001
  5010                           ;	unspecified, using default values
  5011     2001                     	org	8193
  5012     2001  3FFF               	dw	16383
  5013                           
  5014                           ;Config register IDLOC2 @ 0x2002
  5015                           ;	unspecified, using default values
  5016     2002                     	org	8194
  5017     2002  3FFF               	dw	16383
  5018                           
  5019                           ;Config register IDLOC3 @ 0x2003
  5020                           ;	unspecified, using default values
  5021     2003                     	org	8195
  5022     2003  3FFF               	dw	16383
  5023                           
  5024                           	psect	config
  5025                           
  5026                           ;Config register CONFIG1 @ 0x2007
  5027                           ;	Oscillator Selection bits
  5028                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5029                           ;	Watchdog Timer Enable bit
  5030                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5031                           ;	Power-up Timer Enable bit
  5032                           ;	PWRTE = OFF, PWRT disabled
  5033                           ;	RE3/MCLR pin function select bit
  5034                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5035                           ;	Code Protection bit
  5036                           ;	CP = OFF, Program memory code protection is disabled
  5037                           ;	Data Code Protection bit
  5038                           ;	CPD = OFF, Data memory code protection is disabled
  5039                           ;	Brown Out Reset Selection bits
  5040                           ;	BOREN = OFF, BOR disabled
  5041                           ;	Internal External Switchover bit
  5042                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5043                           ;	Fail-Safe Clock Monitor Enabled bit
  5044                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5045                           ;	Low Voltage Programming Enable bit
  5046                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5047                           ;	In-Circuit Debugger Mode bit
  5048                           ;	DEBUG = 0x1, unprogramme  5049     2007                     	org	8199
  5050     2007  20D4               	dw	8404
  5051                           
  5052                           ;Config register CONFIG2 @ 0x2008
  5053                           ;	Brown-out Reset Selection bit
  5054                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5055                           ;	Flash Program Memory Self Write Enable bits
  5056                           ;	WRT = OFF, Write protection off
  5057     2008                     	org	8200
  5058     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl

Critical Paths under _main in BANK0

    _main->_mapeo
    _mapeo->___aldiv
    ___aldiv->___lmul
    _descomponer->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7161
                         _ADC_config
                           _ADC_read
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fltol
                      _configpuertos
                        _descomponer
                          _inttochar
                              _mapeo
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mapeo                                               12     7      5    1459
                                             34 BANK0     12     7      5
                            ___aldiv
                            ___fltol (ARG)
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             19 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _inttochar                                            1     1      0     220
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _descomponer                                          9     5      4    2638
                                             15 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              6 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _configpuertos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              6 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                             11 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              7 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1216
                                             10 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             10 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              7 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2     218
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     142
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0     398
                                              0 BANK0      6     6      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___fltol
   _configpuertos
   _descomponer
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _inttochar
   _mapeo
     ___aldiv
       ___lmul (ARG)
     ___fltol (ARG)
     ___lmul (ARG)
   _setupINTOSC

 _isr (ROOT)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3D       5       76.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 27 03:28:51 2023

                       pc 0002                        l80 0438                        l81 0445  
                      l82 0452                        l83 045E                        l85 046B  
                      l77 0411                        l78 041E                        l79 042B  
            ___awdiv@sign 002C            ?_configpuertos 0070                        fsr 0004  
          mapeo@resultado 004B                       l106 0765                       l210 0636  
                     l107 0772                       l115 07D5                       l108 077F  
                     l140 0F8A                       l132 0F74                       l109 0797  
                     l133 0F75                       l134 0F7B                       l135 0F7C  
                     l143 0F4D                       l136 0F82                       l152 0682  
                     l137 0F83                       l138 0F89                       l146 0F31  
                     l402 029A                       l155 0531                       l219 04CE  
                     l251 0711                       l164 07FE                       l412 0322  
                     l158 0FC3                       l503 058C                       l351 06CA  
                     l193 0F6A                       l530 0385                       l523 039A  
                     l533 039A                       l197 0636                       l609 0757  
                     l490 0403                       l619 0FFF                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       _isr 058D                       fsr0 0004  
            ___awmod@sign 002C              ___fltol@exp1 002F                      l2001 0353  
                    l2011 0361                      l2003 0355                      l2021 038A  
                    l2005 0359                      l2013 0373                      l2101 0085  
                    l2023 038F                      l2111 00BA                      l2103 009A  
                    l2121 00FF                      l2113 00D1                      l2105 00A2  
                    l2019 037A                      l2131 0138                      l2123 0107  
                    l2115 00D9                      l2107 00AA                      l2141 016D  
                    l2133 014D                      l2125 0111                      l2117 00E1  
                    l2109 00B4                      l2151 01B2                      l2143 0184  
                    l2135 0155                      l2127 0117                      l2119 00F7  
                    l1601 0289                      l2153 01BA                      l2145 018C  
                    l2137 015D                      l2129 0122                      l1611 02B5  
                    l1603 028D                      l2155 01C4                      l2147 0194  
                    l2139 0167                      l1701 0559                      l1621 02DA  
                    l1613 02BD                      l1605 029E                      l2149 01AA  
                    l2093 0026                      l1551 0F80                      l1711 0578  
                    l1703 055D                      l1623 02EC                      l1615 02C0  
                    l1631 030A                      l1607 02A9                      l2095 0050  
                    l1553 0F87                      l1545 0F6E                      l1561 0FA3  
                    l1801 0F61                      l1641 039E                      l1705 0561  
                    l1713 057E                      l1721 0712                      l1633 030F  
                    l1625 02FA                      l1617 02CD                      l1609 02AD  
                    l2097 0056                      l1811 076B                      l1547 0F72  
                    l1571 0FB9                      l1563 0FA6                      l1555 0F8E  
                    l1803 0F64                      l1651 03B2                      l1643 03A2  
                    l1715 0583                      l1707 056B                      l1731 072A  
                    l1723 0716                      l1635 031A                      l1627 02FB  
                    l1619 02D1                      l2099 0060                      l1813 0778  
                    l1549 0F79                      l1581 0F3F                      l1821 04E0  
                    l1573 0FC0                      l1565 0FAD                      l1557 0F94  
                    l1805 0F67                      l1661 03C8                      l1653 03B6  
                    l1645 03A7                      l1717 0588                      l1709 0571  
                    l1741 074D                      l1733 072E                      l1725 071C  
                    l1629 0304                      l1815 0790                      l1807 0758  
                    l1583 0F4A                      l1575 0F35                      l1823 04F1  
                    l1831 063F                      l1567 0FB0                      l1559 0F95  
                    l1671 03E8                      l1663 03CC                      l1655 03B8  
                    l1647 03A9                      l1639 039B                      l1735 073F  
                    l1727 071F                      l1743 0753                      l1751 0FCF  
                    l1911 05E8                      l1591 06A8                      l1809 075E  
                    l1577 0F36                      l1825 04F7                      l1817 04CF  
                    l1841 0664                      l1833 064C                      l1569 0FB6  
                    l1673 03EF                      l1665 03D0                      l1657 03BE  
                    l1649 03AD                      l1737 0745                      l1729 0726  
                    l1761 0FEE                      l1753 0FD6                      l1905 04C7  
                    l1921 05F4                      l1913 05ED                      l1593 06B1  
                    l1585 0683                      l1579 0F3C                      l1827 0F25  
                    l1819 04D5                      l1843 0671                      l1835 064F  
                    l1851 07DC                      l1667 03E1                      l1659 03C1  
                    l1675 03F5                      l1691 0540                      l1683 0532  
                    l1739 0746                      l1763 0FF5                      l1755 0FDA  
                    l1747 0FC4                      l1907 04CD                      l1595 06C2  
                    l1587 068D                      l1771 040D                      l1861 07A2  
                    l1845 0674                      l1837 0655                      l1829 063A  
                    l1853 07E9                      l1677 03FA                      l1669 03E7  
                    l1693 0544                      l1685 0535                      l1757 0FDE  
                    l1749 0FCC                      l1765 0FFB                      l1589 0691  
                    l1781 044C                      l1773 0418                      l1871 07BD  
                    l1863 07A9                      l1847 067A                      l1839 065E  
                    l1855 07F1                      l1791 0F56                      l1679 03FF  
                    l1695 0549                      l1687 0539                      l1759 0FE8  
                    l1951 060E                      l1943 0606                      l1935 05FE  
                    l1927 05F6                      l1919 05EF                      l1599 0286  
                    l1783 0458                      l1775 0425                      l1873 07C0  
                    l1865 07AC                      l1857 0798                      l1849 07D9  
                    l1793 0F57                      l1697 054F                      l1689 053E  
                    l1961 061C                      l1953 0614                      l1945 060C  
                    l1937 0604                      l1929 05FC                      l1881 06CE  
                    l1785 0464                      l1777 0432                      l1769 0407  
                    l1875 07C7                      l1867 07B2                      l1859 07A0  
                    l1795 0F58                      l1699 0552                      l1891 04AB  
                    l1883 070D                      l1787 0468                      l1779 043F  
                    l1877 07CB                      l1869 07B6                      l1797 0F5F  
                    l1789 0F4E                      l1879 07D2                      l1991 032E  
                    l1799 0F60                      l1887 046C                      l1983 062E  
                    l1975 0626                      l1967 061E                      l1959 0616  
                    l1897 04AD                      l1889 04A4                      l1985 0634  
                    l1977 062C                      l1969 0624                      l1995 0337  
                    l1899 04B3                      l1997 034A                      l1989 0323  
                    l1999 034B                      _ADIF 0066                      ?_isr 0070  
                    STR_1 0806                      u2000 05F4                      u2001 05F3  
                    u2010 05FC                      u2011 05FB                      u2100 0345  
                    u2020 0604                      u1300 0691                      u2021 0603  
                    u1301 0690                      u2110 0359                      u2030 060C  
                    u2111 0358                      u2031 060B                      u1311 069A  
                    u2120 0360                      u2040 0614                      u1312 06A1  
                    u2121 035F                      u2105 0340                      u2041 0613  
                    u1313 06A8                      u1250 0F72                      u2050 061C  
                    u1410 02EC                      u1251 0F71                      u2051 061B  
                    u1411 02EB                      u1260 0F79                      u2140 0372  
                    u2060 0624                      u1340 06C2                      _IOCB 0096  
                    u1261 0F78                      u2141 0371                      u2061 0623  
                    u1405 02D3                      u1341 06C1                      u1325 06AA  
                    u1270 0F80                      u2150 0379                      u1510 03E1  
                    u2070 062C                      u1430 030A                      u1350 028D  
                    u1271 0F7F                      u2151 0378                      u2135 0362  
                    u1511 03E0                      u2071 062B                      u1431 0309  
                    u1415 02E8                      u1351 028C                      u1335 06B2  
                    u1280 0F87                      u1600 056B                      u2080 0634  
                    u1440 030F                      u1360 029E                      u1281 0F86  
                    u1505 03D1                      u1601 056A                      u2081 0633  
                    u1441 030E                      u1425 02FC                      u1361 029D  
                    u2170 038A                      u2090 032E                      u1530 03F5  
                    u1450 03A2                      u1370 02BD                      u2171 0389  
                    u2091 032D                      u1531 03F4                      u1515 03DD  
                    u1451 03A1                      u1371 02BC                      u2180 038F  
                    u1540 03FA                      u1460 03AD                      u1620 057E  
                    u1700 0753                      u2181 038E                      u2165 037C  
                    u1541 03F9                      u1525 03E9                      u1461 03AC  
                    u1621 057D                      u1605 0567                      u1701 0752  
                    u1470 03BE                      u1630 0583                      u1550 0539  
                    u1710 0FCC                      u1390 02D1                      u2407 0FBD  
                    u1295 0F98                      u1471 03BD                      u1631 0582  
                    u1615 0572                      u1551 0538                      u1711 0FCB  
                    u1391 02D0                      u1560 0544                      u1640 071C  
                    u1800 0432                      u2417 04DB                      u1561 0543  
                    u1641 071B                      u1385 02C2                      u1801 0431  
                    u1490 03D0                      u1570 054F                      u1730 0FDE  
                    u1810 043F                      u2427 04EC                      u1491 03CF  
                    u1571 054E                      u1731 0FDD                      u1811 043E  
                    u1900 0664                      u1660 072E                      u1740 0FE8  
                    u1820 044C                      u2437 04FD                      u1901 0663  
                    u1485 03C2                      u1661 072D                      u1741 0FE7  
                    u1725 0FD0                      u1821 044B                      u1590 0561  
                    u1830 0458                      u2447 0F45                      u1591 0560  
                    u1655 0720                      u1831 0457                      u1920 07FE  
                    u1680 073F                      u1760 0FFB                      u1840 0464  
                    u2457 07A6                      u1921 07FD                      u1585 0553  
                    u1681 073E                      u1761 0FFA                      u1745 0FE4  
                    u1841 0463                      u1850 075E                      u1930 07A0  
                    u1770 040D                      u1851 075D                      u2467 07BA  
                    u1931 079F                      u1915 066A                      u1675 072F  
                    u1755 0FEF                      u1771 040C                      u1860 076B  
                    u1940 07B2                      u1780 0418                      u1861 076A  
                    u2477 07CF                      u1941 07B1                      u2397 0FAA  
                    u1685 073B                      u1781 0417                      u1870 0778  
                    u1950 07C7                      u1790 0425                      u2487 0794  
                    u1871 0777                      u1951 07C6                      u1695 0747  
                    u1791 0424                      u1880 063F                      u1960 04AB  
                    u1881 063E                      u1961 04AA                      u1970 04B3  
                    u1971 04B2                      u1980 04CD                      u1981 04CC  
                    u1990 05ED                      u1895 0645                      u1991 05EC  
                    i1l64 05DE                      _WPUB 0095         ?_Lcd_Write_String 0070  
                    _cont 0052                      _main 0026                      btemp 007E  
                    start 000E        ??_Lcd_Write_String 002B          __end_of_ADC_read 07D6  
         __end_of_Lcd_Cmd 0F4E                     ??_isr 0020             ___fltol@sign1 002E  
         __end_of___aldiv 0323                     ?_main 0070           __end_of___awdiv 0404  
         __end_of___awmod 058D           __end_of___fltol 039B           ___awdiv@divisor 0026  
         __end_of___lwdiv 0758           __end_of___lwmod 1000                     i1l770 01F0  
                   i1l772 0285                     i1l783 024F                     i1l784 025B  
                   i1l776 0233           ___awdiv@counter 002B                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088       ___lmul@multiplicand 002A  
                   _mapeo 06CB                     pclath 000A                     status 0003  
                   wtemp0 007E               mapeo@outmax 0045               mapeo@outmin 0044  
        __end_of_Lcd_Init 0532          __end_of_Lcd_Port 0F8B           __initialization 0011  
            __end_of_main 01CE           ??_configpuertos 0026                    ??_main 004E  
                  ?_mapeo 0042                    _ADRESH 001E          ___awdiv@dividend 0028  
                  i1l2031 01E8                    i1l2041 0211                    i1l2033 01F8  
                  i1l2025 01CF                    i1l2051 0245                    i1l2043 0218  
                  i1l2027 01D4                    i1l2061 0278                    i1l2053 0249  
                  i1l2045 021C                    i1l2037 0201                    i1l2029 01D8  
                  i1l2063 027C                    i1l2055 0253                    i1l2047 022A  
                  i1l2039 0204                    i1l2071 0591                    i1l2065 027D  
                  i1l2057 025D                    i1l2049 023A                    i1l2073 0595  
                  i1l2081 05A2                    i1l2059 0273                    i1l2091 05DD  
                  i1l2083 05A6                    i1l2075 0599                    i1l2085 05AF  
                  i1l2077 059D                    i1l2069 058D                    i1l2087 05CD  
                  i1l2079 05A1                    i1l2089 05D6                    u220_20 01D8  
                  u220_21 01D7                    u221_20 01F8                    u221_21 01F7  
                  u230_20 0268                    u230_25 0263                    u222_25 0209  
                  u231_20 0278                    u223_20 0217                    u231_21 0277  
                  u223_21 0216                    u232_20 027C                    u232_21 027B  
                  u224_25 022B                    u225_20 0239                    u233_20 0591  
                  u225_21 0238                    u233_21 0590                    u234_20 0595  
                  u234_21 0594                    u226_25 023E                    u227_20 0249  
                  u219_20 01D4                    u235_20 059D                    u227_21 0248  
                  u219_21 01D3                    u235_21 059C                    u228_20 024F  
                  u236_20 05A6                    u228_21 024E                    u236_21 05A5  
                  u229_20 0253                    u237_20 05AF                    u229_21 0252  
                  u237_21 05AE                    u238_20 05D6                    u238_21 05D5  
               ??_Lcd_Cmd 0027          __end_of___xxtofl 0286              ??_ADC_config 0028  
                  ___lmul 0683                 ??___aldiv 003B                 ??___awdiv 002A  
               ??___awmod 002A                 ??___fltol 002A                 ??___lwdiv 002A  
               ??___lwmod 002A          ___awdiv@quotient 002D           ___awmod@divisor 0026  
         ___awmod@counter 002B              ?_setupINTOSC 0070                    saved_w 007E  
               ?_ADC_read 0026        __end_of_ADC_config 0798           Lcd_Set_Cursor@a 002C  
         Lcd_Set_Cursor@b 002A           Lcd_Set_Cursor@y 002E           Lcd_Set_Cursor@z 002D  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
 __end_of__initialization 0022         __end_of_Lcd_Clear 0F32                ___fltol@f1 0026  
         descomponer@cent 0035            __pcstackCOMMON 0070             __end_of_mapeo 0712  
          _Lcd_Set_Cursor 0637            _OPTION_REGbits 0081           ADC_read@channel 0026  
              ??_ADC_read 0028                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_mapeo 0047                __pbssBANK0 004E                __pmaintext 0026  
                 ?___lmul 0026                _centesimas 005A                __pintentry 0004  
          ___lmul@product 002F    __end_of_Lcd_Set_Cursor 0683                 ?___xxtofl 0070  
              ??_Lcd_Init 002A                ??_Lcd_Port 0026                __stringtab 0800  
          _Lcd_Write_Char 0F8B                   _Lcd_Cmd 0F32                   ___aldiv 0286  
                 ___awdiv 039B                   ___awmod 0532                   ___fltol 0323  
                 ___lwdiv 0712                   ___lwmod 0FC4                   _lecADC0 004E  
                 _lecADC1 0058                   _decimas 005B                 _ANSELbits 0188  
         ?_Lcd_Set_Cursor 002A                   __ptext1 0404                   __ptext2 06CB  
                 __ptext3 0683                   __ptext4 0286                   __ptext5 05E5  
                 __ptext6 046C                   __ptext7 0FC4                   __ptext8 0712  
                 __ptext9 0532                   _valADC0 0056                   _valADC1 0054  
              ??___xxtofl 0074          ___awmod@dividend 0028          ___aldiv@dividend 0037  
       __end_of_inttochar 0637    __end_of_Lcd_Write_Char 0FC4      end_of_initialization 0022  
        ___aldiv@quotient 003E                 Lcd_Port@a 0026     __end_of_configpuertos 0F6B  
               _PORTAbits 0005                 _PORTBbits 0006                 _PORTDbits 0008  
           ??_descomponer 0033             ___xxtofl@sign 0078                 _TRISAbits 0085  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 002D         Lcd_Write_String@i 002B  
               _Lcd_Clear 0F25            __end_of___lmul 06CB          _Lcd_Write_String 07D6  
              mapeo@inmax 0043                mapeo@inmin 0042       start_initialization 0011  
              mapeo@valor 004D               __end_of_isr 05E5       __end_of_descomponer 04CF  
       ADC_config@channel 0026                ?_Lcd_Clear 0070                  ??___lmul 002E  
         Lcd_Write_Char@a 002A           Lcd_Write_Char@y 0029                 ___latbits 0002  
          descomponer@dec 0037             __pcstackBANK0 0020            descomponer@num 0031  
          descomponer@pos 002F            descomponer@uni 0036           setupINTOSC@IRCF 0026  
                ?_Lcd_Cmd 0070          ___lwdiv@dividend 0028          ??_Lcd_Set_Cursor 002B  
                ?___aldiv 0033              inttochar@num 0026                  ?___awdiv 0026  
                ?___awmod 0026                  ?___fltol 0026                  ?___lwdiv 0026  
                ?___lwmod 0026                 __pstrings 0800               _descomponer 046C  
                _ADC_read 0798          ___lwdiv@quotient 002B           ___aldiv@divisor 0033  
       interrupt_function 0004           ___aldiv@counter 003C                 _inttochar 05E5  
                _PIE1bits 008C                  Lcd_Cmd@a 0029                  _PIR1bits 000C  
             ??_Lcd_Clear 002A                _ADCON0bits 001F               __stringbase 0805  
              _ADCON1bits 009F             ??_setupINTOSC 0026          ??_Lcd_Write_Char 0027  
                _Lcd_Init 04CF                  _Lcd_Port 0F6B         ___lmul@multiplier 0026  
__end_of_Lcd_Write_String 07FF                ?_inttochar 0070                _ADC_config 0758  
      __end_of__stringtab 0806                  ___xxtofl 01CE           ___lwdiv@divisor 0026  
         ___lwdiv@counter 002D                  __ptext10 039B                  __ptext11 0F4E  
                __ptext20 0798                  __ptext12 0323                  __ptext21 0758  
                __ptext13 07D6                  __ptext22 058D                  __ptext14 0F8B  
                __ptext23 01CE                  __ptext15 0637                  __ptext16 04CF  
                __ptext17 0F25                  __ptext18 0F32                  __ptext19 0F6B  
     __end_of_setupINTOSC 046C                  _unidades 005C                _INTCONbits 000B  
      Lcd_Write_Char@temp 0028                  intlevel1 0000          ___lwmod@dividend 0028  
             ??_inttochar 0026                 stringcode 0800                _OSCCONbits 008F  
             ?_ADC_config 0026        Lcd_Set_Cursor@temp 002F             _configpuertos 0F4E  
             _setupINTOSC 0404              ?_descomponer 002F           ___lwmod@divisor 0026  
         ___lwmod@counter 002B                  stringdir 0800                  stringtab 0800  
            ___aldiv@sign 003D  
